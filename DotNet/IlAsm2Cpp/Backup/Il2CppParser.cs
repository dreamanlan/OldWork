// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2006
// (see accompanying GPPGcopyright.rtf)


using System;
using System.Collections.Generic;
using System.Text;
using gppg;
using System.Globalization;
using System.IO;

namespace IL2CPP
{
public enum Tokens {error=126,EOF=127,ERROR_=128,ID=129,DOTTEDNAME=130,QSTRING=131,SQSTRING=132,INT32=133,INT64=134,FLOAT64=135,HEXBYTE=136,DCOLON=137,ELIPSIS=138,VOID_=139,BOOL_=140,CHAR_=141,UNSIGNED_=142,INT_=143,INT8_=144,INT16_=145,INT32_=146,INT64_=147,FLOAT_=148,FLOAT32_=149,FLOAT64_=150,BYTEARRAY_=151,UINT_=152,UINT8_=153,UINT16_=154,UINT32_=155,UINT64_=156,FLAGS_=157,CALLCONV_=158,OBJECT_=159,STRING_=160,NULLREF_=161,DEFAULT_=162,CDECL_=163,VARARG_=164,STDCALL_=165,THISCALL_=166,FASTCALL_=167,CLASS_=168,TYPEDREF_=169,UNMANAGED_=170,FINALLY_=171,CATCH_=172,FILTER_=173,FAULT_=174,EXTENDS_=175,IMPLEMENTS_=176,TO_=177,AT_=178,TLS_=179,TRUE_=180,FALSE_=181,VALUE_=182,VALUETYPE_=183,NATIVE_=184,INSTANCE_=185,SPECIALNAME_=186,FORWARDER_=187,STATIC_=188,PUBLIC_=189,PRIVATE_=190,FAMILY_=191,FINAL_=192,SYNCHRONIZED_=193,INTERFACE_=194,SEALED_=195,NESTED_=196,ABSTRACT_=197,AUTO_=198,SEQUENTIAL_=199,EXPLICIT_=200,ANSI_=201,UNICODE_=202,AUTOCHAR_=203,IMPORT_=204,ENUM_=205,VIRTUAL_=206,NOINLINING_=207,UNMANAGEDEXP_=208,BEFOREFIELDINIT_=209,STRICT_=210,RETARGETABLE_=211,METHOD_=212,FIELD_=213,PINNED_=214,MODREQ_=215,MODOPT_=216,SERIALIZABLE_=217,PROPERTY_=218,TYPE_=219,ASSEMBLY_=220,FAMANDASSEM_=221,FAMORASSEM_=222,PRIVATESCOPE_=223,HIDEBYSIG_=224,NEWSLOT_=225,RTSPECIALNAME_=226,PINVOKEIMPL_=227,_CTOR=228,_CCTOR=229,LITERAL_=230,NOTSERIALIZED_=231,INITONLY_=232,REQSECOBJ_=233,CIL_=234,OPTIL_=235,MANAGED_=236,FORWARDREF_=237,PRESERVESIG_=238,RUNTIME_=239,INTERNALCALL_=240,_IMPORT=241,NOMANGLE_=242,LASTERR_=243,WINAPI_=244,AS_=245,BESTFIT_=246,ON_=247,OFF_=248,CHARMAPERROR_=249,INSTR_NONE=250,INSTR_VAR=251,INSTR_I=252,INSTR_I8=253,INSTR_R=254,INSTR_BRTARGET=255,INSTR_METHOD=256,INSTR_FIELD=257,INSTR_TYPE=258,INSTR_STRING=259,INSTR_SIG=260,INSTR_TOK=261,INSTR_SWITCH=262,_CLASS=263,_NAMESPACE=264,_METHOD=265,_FIELD=266,_DATA=267,_THIS=268,_BASE=269,_NESTER=270,_EMITBYTE=271,_TRY=272,_MAXSTACK=273,_LOCALS=274,_ENTRYPOINT=275,_ZEROINIT=276,_EVENT=277,_ADDON=278,_REMOVEON=279,_FIRE=280,_OTHER=281,_PROPERTY=282,_SET=283,_GET=284,_PERMISSION=285,_PERMISSIONSET=286,REQUEST_=287,DEMAND_=288,ASSERT_=289,DENY_=290,PERMITONLY_=291,LINKCHECK_=292,INHERITCHECK_=293,REQMIN_=294,REQOPT_=295,REQREFUSE_=296,PREJITGRANT_=297,PREJITDENY_=298,NONCASDEMAND_=299,NONCASLINKDEMAND_=300,NONCASINHERITANCE_=301,_LINE=302,P_LINE=303,_LANGUAGE=304,_CUSTOM=305,INIT_=306,_SIZE=307,_PACK=308,_VTFIXUP=309,FROMUNMANAGED_=310,CALLMOSTDERIVED_=311,_VTENTRY=312,RETAINAPPDOMAIN_=313,_FILE=314,NOMETADATA_=315,_HASH=316,_ASSEMBLY=317,_PUBLICKEY=318,_PUBLICKEYTOKEN=319,ALGORITHM_=320,_VER=321,_LOCALE=322,EXTERN_=323,_MRESOURCE=324,_MODULE=325,_EXPORT=326,LEGACY_=327,LIBRARY_=328,X86_=329,IA64_=330,AMD64_=331,MARSHAL_=332,CUSTOM_=333,SYSSTRING_=334,FIXED_=335,VARIANT_=336,CURRENCY_=337,SYSCHAR_=338,DECIMAL_=339,DATE_=340,BSTR_=341,TBSTR_=342,LPSTR_=343,LPWSTR_=344,LPTSTR_=345,OBJECTREF_=346,IUNKNOWN_=347,IDISPATCH_=348,STRUCT_=349,SAFEARRAY_=350,BYVALSTR_=351,LPVOID_=352,ANY_=353,ARRAY_=354,LPSTRUCT_=355,IIDPARAM_=356,IN_=357,OUT_=358,OPT_=359,PARAM_=360,_OVERRIDE=361,WITH_=362,NULL_=363,HRESULT_=364,CARRAY_=365,USERDEFINED_=366,RECORD_=367,FILETIME_=368,BLOB_=369,STREAM_=370,STORAGE_=371,STREAMED_OBJECT_=372,STORED_OBJECT_=373,BLOB_OBJECT_=374,CF_=375,CLSID_=376,VECTOR_=377,_SUBSYSTEM=378,_CORFLAGS=379,ALIGNMENT_=380,_IMAGEBASE=381,_STACKRESERVE=382};

public struct ValueType
#line 11 "asmparse.y"
{
	public string Str;
	public object Obj;
}
public class Parser: ShiftReduceParser<ValueType, LexLocation>
{
#line 1 "asmparse.y"
	public Context context = null;        
  protected override void Initialize()
  {
    this.errToken = (int)Tokens.error;
    this.eofToken = (int)Tokens.EOF;

    states=new State[1451];
    AddState(0,new State(-2,new int[]{-84,1}));
    AddState(1,new State(new int[]{127,2,263,1286,264,1294,265,1079,266,1209,267,414,309,1302,302,863,303,864,314,1316,317,1364,324,1428,325,1436,286,520,285,799,305,874,378,1442,379,1444,381,1446,382,1448,304,866},new int[]{-86,3,-87,4,-116,1084,-115,1094,-89,1290,-90,1296,-133,973,-92,1299,-126,1179,-93,1300,-148,338,-94,1301,-95,1314,-172,845,-96,1315,-97,1331,-99,1379,-101,1411,-103,1415,-105,1435,-106,1440,-167,841,-107,1441,-68,873,-10,893,-69,896,-11,897,-108,1450}));
    AddState(2,new State(-1));
    AddState(3,new State(-3));
    AddState(4,new State(new int[]{123,5}));
    AddState(5,new State(-114,new int[]{-88,6}));
    AddState(6,new State(new int[]{125,7,265,1079,263,1127,277,1151,282,1177,266,1209,267,414,286,520,285,799,302,863,303,864,305,874,307,1214,308,1216,326,1232,361,1245,304,866,360,1280},new int[]{-120,8,-90,9,-133,973,-87,1080,-116,1084,-115,1094,-121,1128,-129,1144,-123,1152,-131,1166,-92,1178,-126,1179,-93,1210,-148,338,-106,1211,-167,841,-95,1212,-172,845,-107,1213,-68,873,-10,893,-69,896,-11,897,-125,1218,-108,1279}));
    AddState(7,new State(-4));
    AddState(8,new State(-115));
    AddState(9,new State(-289,new int[]{-91,10}));
    AddState(10,new State(new int[]{125,11,271,13,272,30,273,31,274,334,275,335,276,336,267,414,250,422,251,426,252,429,253,432,254,437,255,444,256,467,257,475,258,478,259,488,260,495,261,506,262,516,129,45,132,46,286,520,285,799,302,863,303,864,304,866,305,874,326,900,312,906,361,910,123,29,360,930},new int[]{-135,12,-136,17,-140,18,-143,27,-134,33,-93,337,-148,338,-137,420,-70,421,-71,423,-72,427,-73,430,-74,433,-83,438,-75,441,-76,445,-77,468,-78,476,-79,479,-80,489,-81,496,-82,507,-2,517,-106,519,-167,841,-95,844,-172,845,-108,865,-107,872,-68,873,-10,893,-69,896,-11,897,-138,929,-139,24}));
    AddState(11,new State(-138));
    AddState(12,new State(-290));
    AddState(13,new State(new int[]{133,15,136,16},new int[]{-9,14}));
    AddState(14,new State(-291));
    AddState(15,new State(-35));
    AddState(16,new State(-36));
    AddState(17,new State(-292));
    AddState(18,new State(new int[]{172,962,173,966,171,969,174,972},new int[]{-141,19,-142,20,-144,22,-145,964,-146,967,-147,970}));
    AddState(19,new State(-316));
    AddState(20,new State(new int[]{172,962,173,966,171,969,174,972,125,-318,271,-318,272,-318,273,-318,274,-318,275,-318,276,-318,267,-318,250,-318,251,-318,252,-318,253,-318,254,-318,255,-318,256,-318,257,-318,258,-318,259,-318,260,-318,261,-318,262,-318,129,-318,132,-318,286,-318,285,-318,302,-318,303,-318,304,-318,305,-318,326,-318,312,-318,361,-318,123,-318,360,-318},new int[]{-141,21,-142,20,-144,22,-145,964,-146,967,-147,970}));
    AddState(21,new State(-317));
    AddState(22,new State(new int[]{123,29},new int[]{-138,23,-139,24}));
    AddState(23,new State(-321));
    AddState(24,new State(-289,new int[]{-91,25}));
    AddState(25,new State(new int[]{125,26,271,13,272,30,273,31,274,334,275,335,276,336,267,414,250,422,251,426,252,429,253,432,254,437,255,444,256,467,257,475,258,478,259,488,260,495,261,506,262,516,129,45,132,46,286,520,285,799,302,863,303,864,304,866,305,874,326,900,312,906,361,910,123,29,360,930},new int[]{-135,12,-136,17,-140,18,-143,27,-134,33,-93,337,-148,338,-137,420,-70,421,-71,423,-72,427,-73,430,-74,433,-83,438,-75,441,-76,445,-77,468,-78,476,-79,479,-80,489,-81,496,-82,507,-2,517,-106,519,-167,841,-95,844,-172,845,-108,865,-107,872,-68,873,-10,893,-69,896,-11,897,-138,929,-139,24}));
    AddState(26,new State(-314));
    AddState(27,new State(new int[]{123,29},new int[]{-138,28,-139,24}));
    AddState(28,new State(-319));
    AddState(29,new State(-315));
    AddState(30,new State(-320));
    AddState(31,new State(new int[]{133,15,136,16},new int[]{-9,32}));
    AddState(32,new State(-293));
    AddState(33,new State(new int[]{40,34,306,330}));
    AddState(34,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,35,-25,37,-26,115,-13,41}));
    AddState(35,new State(new int[]{41,36}));
    AddState(36,new State(-294));
    AddState(37,new State(new int[]{44,38,41,-482}));
    AddState(38,new State(new int[]{138,40,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-26,39,-13,41}));
    AddState(39,new State(-484));
    AddState(40,new State(-485));
    AddState(41,new State(new int[]{91,321,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,42,-165,93,-128,108,-38,137}));
    AddState(42,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,332,174,60,117,129,-225,132,-225,44,-225,41,-225},new int[]{-35,43,-164,116}));
    AddState(43,new State(new int[]{129,45,132,46,44,-486,41,-486},new int[]{-2,44}));
    AddState(44,new State(-487));
    AddState(45,new State(-30));
    AddState(46,new State(-31));
    AddState(47,new State(new int[]{93,48,138,53,133,15,136,16,44,-650},new int[]{-29,49,-28,57,-9,54}));
    AddState(48,new State(-611));
    AddState(49,new State(new int[]{93,50,44,51}));
    AddState(50,new State(-612));
    AddState(51,new State(new int[]{138,53,133,15,136,16,93,-650,44,-650},new int[]{-28,52,-9,54}));
    AddState(52,new State(-649));
    AddState(53,new State(-651));
    AddState(54,new State(new int[]{138,55,93,-652,44,-652}));
    AddState(55,new State(new int[]{133,15,136,16,93,-654,44,-654},new int[]{-9,56}));
    AddState(56,new State(-653));
    AddState(57,new State(-648));
    AddState(58,new State(-613));
    AddState(59,new State(-614));
    AddState(60,new State(-615));
    AddState(61,new State(new int[]{40,62}));
    AddState(62,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,63,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(63,new State(new int[]{41,64}));
    AddState(64,new State(-616));
    AddState(65,new State(-497));
    AddState(66,new State(new int[]{42,77,325,80,129,45,132,46,130,75},new int[]{-1,67,-2,74}));
    AddState(67,new State(new int[]{93,68,46,72}));
    AddState(68,new State(new int[]{129,45,132,46,130,75,41,-498,137,-498,125,-498,271,-498,272,-498,273,-498,274,-498,275,-498,276,-498,267,-498,250,-498,251,-498,252,-498,253,-498,254,-498,255,-498,256,-498,257,-498,258,-498,259,-498,260,-498,261,-498,262,-498,286,-498,285,-498,302,-498,303,-498,304,-498,305,-498,326,-498,312,-498,361,-498,123,-498,360,-498,61,-498,40,-498,127,-498,263,-498,264,-498,265,-498,266,-498,309,-498,314,-498,317,-498,324,-498,325,-498,378,-498,379,-498,381,-498,382,-498,277,-498,282,-498,307,-498,308,-498,316,-498,321,-498,318,-498,322,-498,44,-498,176,-498},new int[]{-5,69,-1,76,-2,74}));
    AddState(69,new State(new int[]{47,70,41,-488,91,-488,38,-488,42,-488,214,-488,215,-488,216,-488,332,-488,60,-488,129,-488,132,-488,44,-488,62,-488,130,-488,268,-488,269,-488,270,-488,168,-488,159,-488,182,-488,183,-488,212,-488,33,-488,169,-488,139,-488,184,-488,141,-488,160,-488,140,-488,144,-488,145,-488,146,-488,147,-488,149,-488,150,-488,142,-488,153,-488,154,-488,155,-488,156,-488,228,-488,229,-488,137,-488,125,-488,271,-488,272,-488,273,-488,274,-488,275,-488,276,-488,267,-488,250,-488,251,-488,252,-488,253,-488,254,-488,255,-488,256,-488,257,-488,258,-488,259,-488,260,-488,261,-488,262,-488,286,-488,285,-488,302,-488,303,-488,304,-488,305,-488,326,-488,312,-488,361,-488,123,-488,360,-488,40,-488,61,-488,127,-488,263,-488,264,-488,265,-488,266,-488,309,-488,314,-488,317,-488,324,-488,325,-488,378,-488,379,-488,381,-488,382,-488,277,-488,282,-488,307,-488,308,-488,316,-488,321,-488,318,-488,322,-488,176,-488,161,-488}));
    AddState(70,new State(new int[]{129,45,132,46,130,75},new int[]{-1,71,-2,74}));
    AddState(71,new State(new int[]{46,72,47,-496,41,-496,137,-496,125,-496,271,-496,272,-496,273,-496,274,-496,275,-496,276,-496,267,-496,250,-496,251,-496,252,-496,253,-496,254,-496,255,-496,256,-496,257,-496,258,-496,259,-496,260,-496,261,-496,262,-496,129,-496,132,-496,286,-496,285,-496,302,-496,303,-496,304,-496,305,-496,326,-496,312,-496,361,-496,123,-496,360,-496,61,-496,40,-496,127,-496,263,-496,264,-496,265,-496,266,-496,309,-496,314,-496,317,-496,324,-496,325,-496,378,-496,379,-496,381,-496,382,-496,277,-496,282,-496,307,-496,308,-496,316,-496,321,-496,318,-496,322,-496,44,-496,176,-496,130,-496,91,-496,38,-496,42,-496,214,-496,215,-496,216,-496,332,-496,60,-496,62,-496,268,-496,269,-496,270,-496,168,-496,159,-496,182,-496,183,-496,212,-496,33,-496,169,-496,139,-496,184,-496,141,-496,160,-496,140,-496,144,-496,145,-496,146,-496,147,-496,149,-496,150,-496,142,-496,153,-496,154,-496,155,-496,156,-496,228,-496,229,-496,161,-496}));
    AddState(72,new State(new int[]{129,45,132,46,130,75},new int[]{-1,73,-2,74}));
    AddState(73,new State(new int[]{46,72,47,-34,41,-34,93,-34,137,-34,125,-34,271,-34,272,-34,273,-34,274,-34,275,-34,276,-34,267,-34,250,-34,251,-34,252,-34,253,-34,254,-34,255,-34,256,-34,257,-34,258,-34,259,-34,260,-34,261,-34,262,-34,129,-34,132,-34,286,-34,285,-34,302,-34,303,-34,304,-34,305,-34,326,-34,312,-34,361,-34,123,-34,360,-34,61,-34,40,-34,127,-34,263,-34,264,-34,265,-34,266,-34,309,-34,314,-34,317,-34,324,-34,325,-34,378,-34,379,-34,381,-34,382,-34,277,-34,282,-34,307,-34,308,-34,316,-34,321,-34,318,-34,322,-34,44,-34,176,-34,130,-34,91,-34,38,-34,42,-34,214,-34,215,-34,216,-34,332,-34,60,-34,62,-34,268,-34,269,-34,270,-34,168,-34,159,-34,182,-34,183,-34,212,-34,33,-34,169,-34,139,-34,184,-34,141,-34,160,-34,140,-34,144,-34,145,-34,146,-34,147,-34,149,-34,150,-34,142,-34,153,-34,154,-34,155,-34,156,-34,228,-34,229,-34,161,-34,175,-34,178,-34,362,-34,245,-34}));
    AddState(74,new State(-32));
    AddState(75,new State(-33));
    AddState(76,new State(new int[]{46,72,47,-495,41,-495,137,-495,125,-495,271,-495,272,-495,273,-495,274,-495,275,-495,276,-495,267,-495,250,-495,251,-495,252,-495,253,-495,254,-495,255,-495,256,-495,257,-495,258,-495,259,-495,260,-495,261,-495,262,-495,129,-495,132,-495,286,-495,285,-495,302,-495,303,-495,304,-495,305,-495,326,-495,312,-495,361,-495,123,-495,360,-495,61,-495,40,-495,127,-495,263,-495,264,-495,265,-495,266,-495,309,-495,314,-495,317,-495,324,-495,325,-495,378,-495,379,-495,381,-495,382,-495,277,-495,282,-495,307,-495,308,-495,316,-495,321,-495,318,-495,322,-495,44,-495,176,-495,130,-495,91,-495,38,-495,42,-495,214,-495,215,-495,216,-495,332,-495,60,-495,62,-495,268,-495,269,-495,270,-495,168,-495,159,-495,182,-495,183,-495,212,-495,33,-495,169,-495,139,-495,184,-495,141,-495,160,-495,140,-495,144,-495,145,-495,146,-495,147,-495,149,-495,150,-495,142,-495,153,-495,154,-495,155,-495,156,-495,228,-495,229,-495,161,-495}));
    AddState(77,new State(new int[]{93,78}));
    AddState(78,new State(new int[]{129,45,132,46,130,75},new int[]{-5,79,-1,76,-2,74}));
    AddState(79,new State(new int[]{47,70,41,-489,91,-489,38,-489,42,-489,214,-489,215,-489,216,-489,332,-489,60,-489,129,-489,132,-489,44,-489,62,-489,130,-489,268,-489,269,-489,270,-489,168,-489,159,-489,182,-489,183,-489,212,-489,33,-489,169,-489,139,-489,184,-489,141,-489,160,-489,140,-489,144,-489,145,-489,146,-489,147,-489,149,-489,150,-489,142,-489,153,-489,154,-489,155,-489,156,-489,228,-489,229,-489,137,-489,125,-489,271,-489,272,-489,273,-489,274,-489,275,-489,276,-489,267,-489,250,-489,251,-489,252,-489,253,-489,254,-489,255,-489,256,-489,257,-489,258,-489,259,-489,260,-489,261,-489,262,-489,286,-489,285,-489,302,-489,303,-489,304,-489,305,-489,326,-489,312,-489,361,-489,123,-489,360,-489,40,-489,61,-489,127,-489,263,-489,264,-489,265,-489,266,-489,309,-489,314,-489,317,-489,324,-489,325,-489,378,-489,379,-489,381,-489,382,-489,277,-489,282,-489,307,-489,308,-489,316,-489,321,-489,318,-489,322,-489,176,-489,161,-489}));
    AddState(80,new State(new int[]{129,45,132,46,130,75},new int[]{-1,81,-2,74}));
    AddState(81,new State(new int[]{93,82,46,72}));
    AddState(82,new State(new int[]{129,45,132,46,130,75,41,-499,137,-499,125,-499,271,-499,272,-499,273,-499,274,-499,275,-499,276,-499,267,-499,250,-499,251,-499,252,-499,253,-499,254,-499,255,-499,256,-499,257,-499,258,-499,259,-499,260,-499,261,-499,262,-499,286,-499,285,-499,302,-499,303,-499,304,-499,305,-499,326,-499,312,-499,361,-499,123,-499,360,-499,61,-499,40,-499,127,-499,263,-499,264,-499,265,-499,266,-499,309,-499,314,-499,317,-499,324,-499,325,-499,378,-499,379,-499,381,-499,382,-499,277,-499,282,-499,307,-499,308,-499,316,-499,321,-499,318,-499,322,-499,44,-499,176,-499},new int[]{-5,83,-1,76,-2,74}));
    AddState(83,new State(new int[]{47,70,41,-490,91,-490,38,-490,42,-490,214,-490,215,-490,216,-490,332,-490,60,-490,129,-490,132,-490,44,-490,62,-490,130,-490,268,-490,269,-490,270,-490,168,-490,159,-490,182,-490,183,-490,212,-490,33,-490,169,-490,139,-490,184,-490,141,-490,160,-490,140,-490,144,-490,145,-490,146,-490,147,-490,149,-490,150,-490,142,-490,153,-490,154,-490,155,-490,156,-490,228,-490,229,-490,137,-490,125,-490,271,-490,272,-490,273,-490,274,-490,275,-490,276,-490,267,-490,250,-490,251,-490,252,-490,253,-490,254,-490,255,-490,256,-490,257,-490,258,-490,259,-490,260,-490,261,-490,262,-490,286,-490,285,-490,302,-490,303,-490,304,-490,305,-490,326,-490,312,-490,361,-490,123,-490,360,-490,40,-490,61,-490,127,-490,263,-490,264,-490,265,-490,266,-490,309,-490,314,-490,317,-490,324,-490,325,-490,378,-490,379,-490,381,-490,382,-490,277,-490,282,-490,307,-490,308,-490,316,-490,321,-490,318,-490,322,-490,176,-490,161,-490}));
    AddState(84,new State(new int[]{47,70,41,-491,91,-491,38,-491,42,-491,214,-491,215,-491,216,-491,332,-491,60,-491,129,-491,132,-491,44,-491,62,-491,130,-491,268,-491,269,-491,270,-491,168,-491,159,-491,182,-491,183,-491,212,-491,33,-491,169,-491,139,-491,184,-491,141,-491,160,-491,140,-491,144,-491,145,-491,146,-491,147,-491,149,-491,150,-491,142,-491,153,-491,154,-491,155,-491,156,-491,228,-491,229,-491,137,-491,125,-491,271,-491,272,-491,273,-491,274,-491,275,-491,276,-491,267,-491,250,-491,251,-491,252,-491,253,-491,254,-491,255,-491,256,-491,257,-491,258,-491,259,-491,260,-491,261,-491,262,-491,286,-491,285,-491,302,-491,303,-491,304,-491,305,-491,326,-491,312,-491,361,-491,123,-491,360,-491,40,-491,61,-491,127,-491,263,-491,264,-491,265,-491,266,-491,309,-491,314,-491,317,-491,324,-491,325,-491,378,-491,379,-491,381,-491,382,-491,277,-491,282,-491,307,-491,308,-491,316,-491,321,-491,318,-491,322,-491,176,-491,161,-491}));
    AddState(85,new State(-492));
    AddState(86,new State(-493));
    AddState(87,new State(-494));
    AddState(88,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,60,117,41,-500,137,-500,125,-500,271,-500,272,-500,273,-500,274,-500,275,-500,276,-500,267,-500,250,-500,251,-500,252,-500,253,-500,254,-500,255,-500,256,-500,257,-500,258,-500,259,-500,260,-500,261,-500,262,-500,129,-500,132,-500,286,-500,285,-500,302,-500,303,-500,304,-500,305,-500,326,-500,312,-500,361,-500,123,-500,360,-500,61,-500,40,-500,127,-500,263,-500,264,-500,265,-500,266,-500,309,-500,314,-500,317,-500,324,-500,325,-500,378,-500,379,-500,381,-500,382,-500,277,-500,282,-500,307,-500,308,-500,316,-500,321,-500,318,-500,322,-500,44,-500,176,-500,130,-500},new int[]{-164,116}));
    AddState(89,new State(new int[]{40,90}));
    AddState(90,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,91,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(91,new State(new int[]{41,92}));
    AddState(92,new State(-617));
    AddState(93,new State(-606));
    AddState(94,new State(new int[]{91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,95,-5,84,-1,76,-2,74}));
    AddState(95,new State(-607));
    AddState(96,new State(new int[]{42,77,325,99,129,45,132,46,130,75},new int[]{-1,97,-2,74}));
    AddState(97,new State(new int[]{93,98,46,72}));
    AddState(98,new State(new int[]{129,45,132,46,130,75},new int[]{-5,69,-1,76,-2,74}));
    AddState(99,new State(new int[]{129,45,132,46,130,75},new int[]{-1,100,-2,74}));
    AddState(100,new State(new int[]{93,101,46,72}));
    AddState(101,new State(new int[]{129,45,132,46,130,75},new int[]{-5,83,-1,76,-2,74}));
    AddState(102,new State(-608));
    AddState(103,new State(new int[]{168,104}));
    AddState(104,new State(new int[]{91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,105,-5,84,-1,76,-2,74}));
    AddState(105,new State(-609));
    AddState(106,new State(new int[]{91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,107,-5,84,-1,76,-2,74}));
    AddState(107,new State(-610));
    AddState(108,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,109,-8,162}));
    AddState(109,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,110,-165,93,-128,108,-38,137}));
    AddState(110,new State(new int[]{42,111,91,47,38,58,214,60,215,61,216,89,60,117},new int[]{-164,116}));
    AddState(111,new State(new int[]{40,112,42,-614,91,-614,38,-614,214,-614,215,-614,216,-614,60,-614,129,-614,132,-614,130,-614,268,-614,269,-614,270,-614,168,-614,159,-614,182,-614,183,-614,212,-614,33,-614,169,-614,139,-614,184,-614,141,-614,160,-614,140,-614,144,-614,145,-614,146,-614,147,-614,149,-614,150,-614,142,-614,153,-614,154,-614,155,-614,156,-614,228,-614,229,-614}));
    AddState(112,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,113,-25,37,-26,115,-13,41}));
    AddState(113,new State(new int[]{41,114}));
    AddState(114,new State(-618));
    AddState(115,new State(-483));
    AddState(116,new State(-619));
    AddState(117,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,62,-476,44,-476},new int[]{-40,118,-27,156,-165,93,-128,108,-38,137,-41,157}));
    AddState(118,new State(new int[]{62,119,44,120}));
    AddState(119,new State(-475));
    AddState(120,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,62,-480,44,-480},new int[]{-27,121,-165,93,-128,108,-38,137}));
    AddState(121,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,60,117,62,-479,44,-479},new int[]{-164,116}));
    AddState(122,new State(-434));
    AddState(123,new State(new int[]{33,124,133,15,136,16,129,45,132,46,130,75},new int[]{-9,127,-1,128,-2,74}));
    AddState(124,new State(new int[]{133,15,136,16,129,45,132,46,130,75},new int[]{-9,125,-1,126,-2,74}));
    AddState(125,new State(-620));
    AddState(126,new State(new int[]{46,72,91,-622,38,-622,42,-622,214,-622,215,-622,216,-622,332,-622,60,-622,129,-622,132,-622,44,-622,41,-622,62,-622,130,-622,268,-622,269,-622,270,-622,168,-622,159,-622,182,-622,183,-622,212,-622,33,-622,169,-622,139,-622,184,-622,141,-622,160,-622,140,-622,144,-622,145,-622,146,-622,147,-622,149,-622,150,-622,142,-622,153,-622,154,-622,155,-622,156,-622,228,-622,229,-622,137,-622,125,-622,271,-622,272,-622,273,-622,274,-622,275,-622,276,-622,267,-622,250,-622,251,-622,252,-622,253,-622,254,-622,255,-622,256,-622,257,-622,258,-622,259,-622,260,-622,261,-622,262,-622,286,-622,285,-622,302,-622,303,-622,304,-622,305,-622,326,-622,312,-622,361,-622,123,-622,360,-622,40,-622,61,-622,127,-622,263,-622,264,-622,265,-622,266,-622,309,-622,314,-622,317,-622,324,-622,325,-622,378,-622,379,-622,381,-622,382,-622,277,-622,282,-622,307,-622,308,-622,316,-622,321,-622,318,-622,322,-622,176,-622}));
    AddState(127,new State(-621));
    AddState(128,new State(new int[]{46,72,91,-623,38,-623,42,-623,214,-623,215,-623,216,-623,332,-623,60,-623,129,-623,132,-623,44,-623,41,-623,62,-623,130,-623,268,-623,269,-623,270,-623,168,-623,159,-623,182,-623,183,-623,212,-623,33,-623,169,-623,139,-623,184,-623,141,-623,160,-623,140,-623,144,-623,145,-623,146,-623,147,-623,149,-623,150,-623,142,-623,153,-623,154,-623,155,-623,156,-623,228,-623,229,-623,137,-623,125,-623,271,-623,272,-623,273,-623,274,-623,275,-623,276,-623,267,-623,250,-623,251,-623,252,-623,253,-623,254,-623,255,-623,256,-623,257,-623,258,-623,259,-623,260,-623,261,-623,262,-623,286,-623,285,-623,302,-623,303,-623,304,-623,305,-623,326,-623,312,-623,361,-623,123,-623,360,-623,40,-623,61,-623,127,-623,263,-623,264,-623,265,-623,266,-623,309,-623,314,-623,317,-623,324,-623,325,-623,378,-623,379,-623,381,-623,382,-623,277,-623,282,-623,307,-623,308,-623,316,-623,321,-623,318,-623,322,-623,176,-623}));
    AddState(129,new State(-624));
    AddState(130,new State(-625));
    AddState(131,new State(new int[]{143,132,142,133,152,135,148,136}));
    AddState(132,new State(-626));
    AddState(133,new State(new int[]{143,134}));
    AddState(134,new State(-627));
    AddState(135,new State(-628));
    AddState(136,new State(-629));
    AddState(137,new State(-630));
    AddState(138,new State(-631));
    AddState(139,new State(-632));
    AddState(140,new State(-633));
    AddState(141,new State(-634));
    AddState(142,new State(-635));
    AddState(143,new State(-636));
    AddState(144,new State(-637));
    AddState(145,new State(-638));
    AddState(146,new State(-639));
    AddState(147,new State(new int[]{144,148,145,149,146,150,147,151}));
    AddState(148,new State(-640));
    AddState(149,new State(-641));
    AddState(150,new State(-642));
    AddState(151,new State(-643));
    AddState(152,new State(-644));
    AddState(153,new State(-645));
    AddState(154,new State(-646));
    AddState(155,new State(-647));
    AddState(156,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,60,117,62,-477,44,-477},new int[]{-164,116}));
    AddState(157,new State(-478));
    AddState(158,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185,91,-185},new int[]{-7,159,-8,162}));
    AddState(159,new State(-181));
    AddState(160,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185,91,-185},new int[]{-7,161,-8,162}));
    AddState(161,new State(-182));
    AddState(162,new State(-183));
    AddState(163,new State(-186));
    AddState(164,new State(-187));
    AddState(165,new State(new int[]{163,166,165,167,166,168,167,169}));
    AddState(166,new State(-188));
    AddState(167,new State(-189));
    AddState(168,new State(-190));
    AddState(169,new State(-191));
    AddState(170,new State(new int[]{40,171}));
    AddState(171,new State(new int[]{133,15,136,16},new int[]{-9,172}));
    AddState(172,new State(new int[]{41,173}));
    AddState(173,new State(-184));
    AddState(174,new State(new int[]{40,175}));
    AddState(175,new State(new int[]{333,189,335,203,336,213,337,215,338,216,139,217,140,218,144,219,145,220,146,221,147,222,149,223,150,224,128,225,142,226,153,232,154,233,155,234,156,235,339,236,340,237,341,238,343,239,344,240,345,241,346,242,347,243,348,250,349,252,194,253,350,255,143,309,152,310,196,311,351,313,201,314,342,316,212,317,245,318,355,320,41,-501,42,-501,91,-501},new int[]{-32,176}));
    AddState(176,new State(new int[]{41,177,42,178,91,179}));
    AddState(177,new State(-226));
    AddState(178,new State(-526));
    AddState(179,new State(new int[]{93,180,43,186,133,15,136,16},new int[]{-9,181}));
    AddState(180,new State(-527));
    AddState(181,new State(new int[]{93,182,43,183}));
    AddState(182,new State(-528));
    AddState(183,new State(new int[]{133,15,136,16},new int[]{-9,184}));
    AddState(184,new State(new int[]{93,185}));
    AddState(185,new State(-529));
    AddState(186,new State(new int[]{133,15,136,16},new int[]{-9,187}));
    AddState(187,new State(new int[]{93,188}));
    AddState(188,new State(-530));
    AddState(189,new State(new int[]{40,190}));
    AddState(190,new State(new int[]{131,201},new int[]{-34,191}));
    AddState(191,new State(new int[]{44,192,43,199}));
    AddState(192,new State(new int[]{131,201},new int[]{-34,193}));
    AddState(193,new State(new int[]{44,194,41,202,43,199}));
    AddState(194,new State(new int[]{131,201},new int[]{-34,195}));
    AddState(195,new State(new int[]{44,196,43,199}));
    AddState(196,new State(new int[]{131,201},new int[]{-34,197}));
    AddState(197,new State(new int[]{41,198,43,199}));
    AddState(198,new State(-502));
    AddState(199,new State(new int[]{131,200}));
    AddState(200,new State(-26));
    AddState(201,new State(-25));
    AddState(202,new State(-503));
    AddState(203,new State(new int[]{334,204,354,208}));
    AddState(204,new State(new int[]{91,205}));
    AddState(205,new State(new int[]{133,15,136,16},new int[]{-9,206}));
    AddState(206,new State(new int[]{93,207}));
    AddState(207,new State(-504));
    AddState(208,new State(new int[]{91,209}));
    AddState(209,new State(new int[]{133,15,136,16},new int[]{-9,210}));
    AddState(210,new State(new int[]{93,211}));
    AddState(211,new State(new int[]{333,189,335,203,336,213,337,215,338,216,139,217,140,218,144,219,145,220,146,221,147,222,149,223,150,224,128,225,142,226,153,232,154,233,155,234,156,235,339,236,340,237,341,238,343,239,344,240,345,241,346,242,347,243,348,250,349,252,194,253,350,255,143,309,152,310,196,311,351,313,201,314,342,316,212,317,245,318,355,320,42,-501,91,-501,41,-501},new int[]{-32,212}));
    AddState(212,new State(new int[]{42,178,91,179,41,-505}));
    AddState(213,new State(new int[]{140,214,41,-506,42,-506,91,-506}));
    AddState(214,new State(-551));
    AddState(215,new State(-507));
    AddState(216,new State(-508));
    AddState(217,new State(-509));
    AddState(218,new State(-510));
    AddState(219,new State(-511));
    AddState(220,new State(-512));
    AddState(221,new State(-513));
    AddState(222,new State(-514));
    AddState(223,new State(-515));
    AddState(224,new State(-516));
    AddState(225,new State(-517));
    AddState(226,new State(new int[]{144,227,145,228,146,229,147,230,143,231}));
    AddState(227,new State(-518));
    AddState(228,new State(-519));
    AddState(229,new State(-520));
    AddState(230,new State(-521));
    AddState(231,new State(-545));
    AddState(232,new State(-522));
    AddState(233,new State(-523));
    AddState(234,new State(-524));
    AddState(235,new State(-525));
    AddState(236,new State(-531));
    AddState(237,new State(-532));
    AddState(238,new State(-533));
    AddState(239,new State(-534));
    AddState(240,new State(-535));
    AddState(241,new State(-536));
    AddState(242,new State(-537));
    AddState(243,new State(new int[]{40,245,41,-555,42,-555,91,-555},new int[]{-20,244}));
    AddState(244,new State(-538));
    AddState(245,new State(new int[]{356,246}));
    AddState(246,new State(new int[]{61,247}));
    AddState(247,new State(new int[]{133,15,136,16},new int[]{-9,248}));
    AddState(248,new State(new int[]{41,249}));
    AddState(249,new State(-556));
    AddState(250,new State(new int[]{40,245,41,-555,42,-555,91,-555},new int[]{-20,251}));
    AddState(251,new State(-539));
    AddState(252,new State(-540));
    AddState(253,new State(new int[]{40,245,41,-555,42,-555,91,-555},new int[]{-20,254}));
    AddState(254,new State(-541));
    AddState(255,new State(new int[]{363,263,336,264,337,265,139,266,140,267,144,268,145,269,146,270,147,271,149,272,150,273,142,274,153,280,154,281,155,282,156,283,42,284,339,285,340,286,341,287,343,288,344,289,347,290,348,291,350,292,143,293,152,294,128,295,364,296,365,297,366,298,367,299,368,300,369,301,370,302,371,303,372,304,373,305,374,306,375,307,376,308,44,-557,91,-557,377,-557,38,-557,41,-557},new int[]{-15,256}));
    AddState(256,new State(new int[]{44,257,91,259,377,261,38,262,41,-542,42,-542}));
    AddState(257,new State(new int[]{131,201},new int[]{-34,258}));
    AddState(258,new State(new int[]{43,199,41,-543,42,-543,91,-543}));
    AddState(259,new State(new int[]{93,260}));
    AddState(260,new State(-578));
    AddState(261,new State(-579));
    AddState(262,new State(-580));
    AddState(263,new State(-558));
    AddState(264,new State(-559));
    AddState(265,new State(-560));
    AddState(266,new State(-561));
    AddState(267,new State(-562));
    AddState(268,new State(-563));
    AddState(269,new State(-564));
    AddState(270,new State(-565));
    AddState(271,new State(-566));
    AddState(272,new State(-567));
    AddState(273,new State(-568));
    AddState(274,new State(new int[]{144,275,145,276,146,277,147,278,143,279}));
    AddState(275,new State(-569));
    AddState(276,new State(-570));
    AddState(277,new State(-571));
    AddState(278,new State(-572));
    AddState(279,new State(-590));
    AddState(280,new State(-573));
    AddState(281,new State(-574));
    AddState(282,new State(-575));
    AddState(283,new State(-576));
    AddState(284,new State(-577));
    AddState(285,new State(-581));
    AddState(286,new State(-582));
    AddState(287,new State(-583));
    AddState(288,new State(-584));
    AddState(289,new State(-585));
    AddState(290,new State(-586));
    AddState(291,new State(-587));
    AddState(292,new State(-588));
    AddState(293,new State(-589));
    AddState(294,new State(-591));
    AddState(295,new State(-592));
    AddState(296,new State(-593));
    AddState(297,new State(-594));
    AddState(298,new State(-595));
    AddState(299,new State(-596));
    AddState(300,new State(-597));
    AddState(301,new State(-598));
    AddState(302,new State(-599));
    AddState(303,new State(-600));
    AddState(304,new State(-601));
    AddState(305,new State(-602));
    AddState(306,new State(-603));
    AddState(307,new State(-604));
    AddState(308,new State(-605));
    AddState(309,new State(-544));
    AddState(310,new State(-546));
    AddState(311,new State(new int[]{349,312}));
    AddState(312,new State(-547));
    AddState(313,new State(-548));
    AddState(314,new State(new int[]{341,315}));
    AddState(315,new State(-549));
    AddState(316,new State(-550));
    AddState(317,new State(-552));
    AddState(318,new State(new int[]{353,319}));
    AddState(319,new State(-553));
    AddState(320,new State(-554));
    AddState(321,new State(new int[]{357,322,358,324,359,326,133,15,136,16},new int[]{-9,328}));
    AddState(322,new State(new int[]{93,323}));
    AddState(323,new State(-271));
    AddState(324,new State(new int[]{93,325}));
    AddState(325,new State(-272));
    AddState(326,new State(new int[]{93,327}));
    AddState(327,new State(-273));
    AddState(328,new State(new int[]{93,329}));
    AddState(329,new State(-274));
    AddState(330,new State(new int[]{40,331}));
    AddState(331,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,332,-25,37,-26,115,-13,41}));
    AddState(332,new State(new int[]{41,333}));
    AddState(333,new State(-295));
    AddState(334,new State(-288));
    AddState(335,new State(-296));
    AddState(336,new State(-297));
    AddState(337,new State(-298));
    AddState(338,new State(new int[]{123,340,141,345,38,350,151,360,149,362,150,382,147,388,146,394,145,400,144,406},new int[]{-149,339,-152,413,-153,354}));
    AddState(339,new State(-329));
    AddState(340,new State(new int[]{141,345,38,350,151,360,149,362,150,382,147,388,146,394,145,400,144,406},new int[]{-151,341,-152,412,-153,354}));
    AddState(341,new State(new int[]{125,342,44,343}));
    AddState(342,new State(-335));
    AddState(343,new State(new int[]{141,345,38,350,151,360,149,362,150,382,147,388,146,394,145,400,144,406},new int[]{-152,344,-153,354}));
    AddState(344,new State(-337));
    AddState(345,new State(new int[]{42,346}));
    AddState(346,new State(new int[]{40,347}));
    AddState(347,new State(new int[]{131,201},new int[]{-34,348}));
    AddState(348,new State(new int[]{41,349,43,199}));
    AddState(349,new State(-341));
    AddState(350,new State(new int[]{40,351}));
    AddState(351,new State(new int[]{129,45,132,46},new int[]{-2,352}));
    AddState(352,new State(new int[]{41,353}));
    AddState(353,new State(-342));
    AddState(354,new State(new int[]{136,359,41,-376},new int[]{-30,355,-31,357}));
    AddState(355,new State(new int[]{41,356}));
    AddState(356,new State(-343));
    AddState(357,new State(new int[]{136,358,41,-377}));
    AddState(358,new State(-379));
    AddState(359,new State(-378));
    AddState(360,new State(new int[]{40,361}));
    AddState(361,new State(-375));
    AddState(362,new State(new int[]{40,363,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,381}));
    AddState(363,new State(new int[]{135,370,149,371,150,375},new int[]{-22,364}));
    AddState(364,new State(new int[]{41,365}));
    AddState(365,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,366}));
    AddState(366,new State(-344));
    AddState(367,new State(new int[]{133,15,136,16},new int[]{-9,368}));
    AddState(368,new State(new int[]{93,369}));
    AddState(369,new State(-340));
    AddState(370,new State(-39));
    AddState(371,new State(new int[]{40,372}));
    AddState(372,new State(new int[]{133,15,136,16},new int[]{-9,373}));
    AddState(373,new State(new int[]{41,374}));
    AddState(374,new State(-40));
    AddState(375,new State(new int[]{40,376}));
    AddState(376,new State(new int[]{134,379,133,380},new int[]{-23,377}));
    AddState(377,new State(new int[]{41,378}));
    AddState(378,new State(-41));
    AddState(379,new State(-37));
    AddState(380,new State(-38));
    AddState(381,new State(-350));
    AddState(382,new State(new int[]{40,383,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,387}));
    AddState(383,new State(new int[]{135,370,149,371,150,375},new int[]{-22,384}));
    AddState(384,new State(new int[]{41,385}));
    AddState(385,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,386}));
    AddState(386,new State(-345));
    AddState(387,new State(-351));
    AddState(388,new State(new int[]{40,389,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,393}));
    AddState(389,new State(new int[]{134,379,133,380},new int[]{-23,390}));
    AddState(390,new State(new int[]{41,391}));
    AddState(391,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,392}));
    AddState(392,new State(-346));
    AddState(393,new State(-352));
    AddState(394,new State(new int[]{40,395,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,399}));
    AddState(395,new State(new int[]{133,15,136,16},new int[]{-9,396}));
    AddState(396,new State(new int[]{41,397}));
    AddState(397,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,398}));
    AddState(398,new State(-347));
    AddState(399,new State(-353));
    AddState(400,new State(new int[]{40,401,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,405}));
    AddState(401,new State(new int[]{133,15,136,16},new int[]{-9,402}));
    AddState(402,new State(new int[]{41,403}));
    AddState(403,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,404}));
    AddState(404,new State(-348));
    AddState(405,new State(-354));
    AddState(406,new State(new int[]{40,407,91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,411}));
    AddState(407,new State(new int[]{133,15,136,16},new int[]{-9,408}));
    AddState(408,new State(new int[]{41,409}));
    AddState(409,new State(new int[]{91,367,127,-339,263,-339,264,-339,265,-339,266,-339,267,-339,309,-339,302,-339,303,-339,314,-339,317,-339,324,-339,325,-339,286,-339,285,-339,305,-339,378,-339,379,-339,381,-339,382,-339,304,-339,125,-339,277,-339,282,-339,307,-339,308,-339,326,-339,361,-339,360,-339,271,-339,272,-339,273,-339,274,-339,275,-339,276,-339,250,-339,251,-339,252,-339,253,-339,254,-339,255,-339,256,-339,257,-339,258,-339,259,-339,260,-339,261,-339,262,-339,129,-339,132,-339,312,-339,123,-339,44,-339},new int[]{-14,410}));
    AddState(410,new State(-349));
    AddState(411,new State(-355));
    AddState(412,new State(-338));
    AddState(413,new State(-336));
    AddState(414,new State(new int[]{179,418,234,419,129,-332,132,-332,123,-332,141,-332,38,-332,151,-332,149,-332,150,-332,147,-332,146,-332,145,-332,144,-332},new int[]{-150,415}));
    AddState(415,new State(new int[]{129,45,132,46,123,-331,141,-331,38,-331,151,-331,149,-331,150,-331,147,-331,146,-331,145,-331,144,-331},new int[]{-2,416}));
    AddState(416,new State(new int[]{61,417}));
    AddState(417,new State(-330));
    AddState(418,new State(-333));
    AddState(419,new State(-334));
    AddState(420,new State(-299));
    AddState(421,new State(-449));
    AddState(422,new State(-435));
    AddState(423,new State(new int[]{133,15,136,16,129,45,132,46},new int[]{-9,424,-2,425}));
    AddState(424,new State(-450));
    AddState(425,new State(-451));
    AddState(426,new State(-436));
    AddState(427,new State(new int[]{133,15,136,16},new int[]{-9,428}));
    AddState(428,new State(-452));
    AddState(429,new State(-437));
    AddState(430,new State(new int[]{134,379,133,380},new int[]{-23,431}));
    AddState(431,new State(-453));
    AddState(432,new State(-438));
    AddState(433,new State(new int[]{40,436,135,370,149,371,150,375,134,379,133,380},new int[]{-22,434,-23,435}));
    AddState(434,new State(-454));
    AddState(435,new State(-455));
    AddState(436,new State(-448));
    AddState(437,new State(-439));
    AddState(438,new State(new int[]{136,359,41,-376},new int[]{-30,439,-31,357}));
    AddState(439,new State(new int[]{41,440}));
    AddState(440,new State(-456));
    AddState(441,new State(new int[]{133,15,136,16,129,45,132,46},new int[]{-9,442,-2,443}));
    AddState(442,new State(-457));
    AddState(443,new State(-458));
    AddState(444,new State(-440));
    AddState(445,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,446,-7,447,-8,162}));
    AddState(446,new State(-459));
    AddState(447,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,448,-165,93,-128,108,-38,137}));
    AddState(448,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,228,457,229,458,60,117},new int[]{-50,449,-3,460,-164,116,-49,65,-5,84,-1,466,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(449,new State(new int[]{137,450}));
    AddState(450,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,451,-1,459,-2,74}));
    AddState(451,new State(new int[]{60,117,40,-473},new int[]{-39,452,-164,456}));
    AddState(452,new State(new int[]{40,453}));
    AddState(453,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,454,-25,37,-26,115,-13,41}));
    AddState(454,new State(new int[]{41,455}));
    AddState(455,new State(-179));
    AddState(456,new State(-474));
    AddState(457,new State(-267));
    AddState(458,new State(-268));
    AddState(459,new State(new int[]{46,72,60,-269,40,-269,125,-269,271,-269,272,-269,273,-269,274,-269,275,-269,276,-269,267,-269,250,-269,251,-269,252,-269,253,-269,254,-269,255,-269,256,-269,257,-269,258,-269,259,-269,260,-269,261,-269,262,-269,129,-269,132,-269,286,-269,285,-269,302,-269,303,-269,304,-269,305,-269,326,-269,312,-269,361,-269,123,-269,360,-269,362,-269}));
    AddState(460,new State(new int[]{60,117,40,-473},new int[]{-39,461,-164,456}));
    AddState(461,new State(new int[]{40,462}));
    AddState(462,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,463,-25,37,-26,115,-13,41}));
    AddState(463,new State(new int[]{41,464}));
    AddState(464,new State(-180));
    AddState(465,new State(new int[]{93,48,42,77,325,80,138,53,133,15,136,16,129,45,132,46,130,75,44,-650},new int[]{-29,49,-1,67,-28,57,-9,54,-2,74}));
    AddState(466,new State(new int[]{46,72,47,-495,137,-495,60,-269,40,-269}));
    AddState(467,new State(-441));
    AddState(468,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-127,469,-27,470,-165,93,-128,108,-38,137}));
    AddState(469,new State(-460));
    AddState(470,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,60,117},new int[]{-50,471,-164,116,-1,474,-49,65,-5,84,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(471,new State(new int[]{137,472}));
    AddState(472,new State(new int[]{129,45,132,46,130,75},new int[]{-1,473,-2,74}));
    AddState(473,new State(new int[]{46,72,125,-192,271,-192,272,-192,273,-192,274,-192,275,-192,276,-192,267,-192,250,-192,251,-192,252,-192,253,-192,254,-192,255,-192,256,-192,257,-192,258,-192,259,-192,260,-192,261,-192,262,-192,129,-192,132,-192,286,-192,285,-192,302,-192,303,-192,304,-192,305,-192,326,-192,312,-192,361,-192,123,-192,360,-192,41,-192}));
    AddState(474,new State(new int[]{46,72,125,-193,271,-193,272,-193,273,-193,274,-193,275,-193,276,-193,267,-193,250,-193,251,-193,252,-193,253,-193,254,-193,255,-193,256,-193,257,-193,258,-193,259,-193,260,-193,261,-193,262,-193,129,-193,132,-193,286,-193,285,-193,302,-193,303,-193,304,-193,305,-193,326,-193,312,-193,361,-193,123,-193,360,-193,41,-193,47,-495,137,-495}));
    AddState(475,new State(-442));
    AddState(476,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,477,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(477,new State(-461));
    AddState(478,new State(-443));
    AddState(479,new State(new int[]{201,481,131,201,151,360},new int[]{-34,480,-153,485}));
    AddState(480,new State(new int[]{43,199,125,-462,271,-462,272,-462,273,-462,274,-462,275,-462,276,-462,267,-462,250,-462,251,-462,252,-462,253,-462,254,-462,255,-462,256,-462,257,-462,258,-462,259,-462,260,-462,261,-462,262,-462,129,-462,132,-462,286,-462,285,-462,302,-462,303,-462,304,-462,305,-462,326,-462,312,-462,361,-462,123,-462,360,-462}));
    AddState(481,new State(new int[]{40,482}));
    AddState(482,new State(new int[]{131,201},new int[]{-34,483}));
    AddState(483,new State(new int[]{41,484,43,199}));
    AddState(484,new State(-463));
    AddState(485,new State(new int[]{136,359,41,-376},new int[]{-30,486,-31,357}));
    AddState(486,new State(new int[]{41,487}));
    AddState(487,new State(-464));
    AddState(488,new State(-444));
    AddState(489,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,490,-8,162}));
    AddState(490,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,491,-165,93,-128,108,-38,137}));
    AddState(491,new State(new int[]{40,492,91,47,38,58,42,59,214,60,215,61,216,89,60,117},new int[]{-164,116}));
    AddState(492,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,493,-25,37,-26,115,-13,41}));
    AddState(493,new State(new int[]{41,494}));
    AddState(494,new State(-465));
    AddState(495,new State(-445));
    AddState(496,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,213,504},new int[]{-51,497,-50,498,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,499,-38,137,-53,503}));
    AddState(497,new State(-466));
    AddState(498,new State(-55));
    AddState(499,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,500,-54,502,-8,162}));
    AddState(500,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,501,-165,93,-128,108,-38,137}));
    AddState(501,new State(new int[]{42,111,91,465,38,58,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,228,457,229,458,60,117},new int[]{-50,449,-3,460,-164,116,-49,65,-5,84,-1,466,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(502,new State(-194));
    AddState(503,new State(-56));
    AddState(504,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-127,505,-27,470,-165,93,-128,108,-38,137}));
    AddState(505,new State(-195));
    AddState(506,new State(-446));
    AddState(507,new State(new int[]{40,508}));
    AddState(508,new State(new int[]{129,45,132,46,133,15,136,16,41,-468,44,-468},new int[]{-6,509,-2,514,-9,515}));
    AddState(509,new State(new int[]{41,510,44,511}));
    AddState(510,new State(-467));
    AddState(511,new State(new int[]{129,45,132,46,133,15,136,16},new int[]{-2,512,-9,513}));
    AddState(512,new State(-469));
    AddState(513,new State(-470));
    AddState(514,new State(-471));
    AddState(515,new State(-472));
    AddState(516,new State(-447));
    AddState(517,new State(new int[]{58,518}));
    AddState(518,new State(-300));
    AddState(519,new State(-301));
    AddState(520,new State(new int[]{287,784,288,785,289,786,290,787,291,788,292,789,293,790,294,791,295,792,296,793,297,794,298,795,299,796,300,797,301,798},new int[]{-62,521}));
    AddState(521,new State(new int[]{61,523,151,782,131,201},new int[]{-34,522}));
    AddState(522,new State(new int[]{43,199,127,-657,263,-657,264,-657,265,-657,266,-657,267,-657,309,-657,302,-657,303,-657,314,-657,317,-657,324,-657,325,-657,286,-657,285,-657,305,-657,378,-657,379,-657,381,-657,382,-657,304,-657,125,-657,277,-657,282,-657,307,-657,308,-657,326,-657,361,-657,360,-657,271,-657,272,-657,273,-657,274,-657,275,-657,276,-657,250,-657,251,-657,252,-657,253,-657,254,-657,255,-657,256,-657,257,-657,258,-657,259,-657,260,-657,261,-657,262,-657,129,-657,132,-657,312,-657,123,-657,316,-657,321,-657,318,-657,322,-657}));
    AddState(523,new State(new int[]{40,524,123,525}));
    AddState(524,new State(-668));
    AddState(525,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,776,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,125,-663},new int[]{-168,526,-169,528,-50,531,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(526,new State(new int[]{125,527}));
    AddState(527,new State(-662));
    AddState(528,new State(new int[]{44,529,125,-664}));
    AddState(529,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,776,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,125,-663},new int[]{-168,530,-169,528,-50,531,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(530,new State(-665));
    AddState(531,new State(new int[]{61,532}));
    AddState(532,new State(new int[]{123,533}));
    AddState(533,new State(-60,new int[]{-111,534}));
    AddState(534,new State(new int[]{125,535,213,774,218,775},new int[]{-113,536}));
    AddState(535,new State(-666));
    AddState(536,new State(new int[]{141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,219,768,159,769,205,770},new int[]{-114,537,-38,767}));
    AddState(537,new State(new int[]{91,765,129,45,132,46,130,75},new int[]{-1,538,-2,74}));
    AddState(538,new State(new int[]{61,539,46,72}));
    AddState(539,new State(new int[]{149,542,150,556,147,570,146,581,145,592,144,603,142,614,156,655,155,665,154,675,153,685,141,695,140,705,151,360,160,721,219,735,159,754},new int[]{-112,540,-37,541,-153,718}));
    AddState(540,new State(-61));
    AddState(541,new State(-383));
    AddState(542,new State(new int[]{40,543,91,548}));
    AddState(543,new State(new int[]{135,370,149,371,150,375,133,15,136,16},new int[]{-22,544,-9,546}));
    AddState(544,new State(new int[]{41,545}));
    AddState(545,new State(-356));
    AddState(546,new State(new int[]{41,547}));
    AddState(547,new State(-358));
    AddState(548,new State(new int[]{133,15,136,16},new int[]{-9,549}));
    AddState(549,new State(new int[]{93,550}));
    AddState(550,new State(new int[]{40,551}));
    AddState(551,new State(-409,new int[]{-154,552}));
    AddState(552,new State(new int[]{41,553,135,370,149,371,150,375,133,15,136,16},new int[]{-22,554,-9,555}));
    AddState(553,new State(-390));
    AddState(554,new State(-410));
    AddState(555,new State(-411));
    AddState(556,new State(new int[]{40,557,91,562}));
    AddState(557,new State(new int[]{135,370,149,371,150,375,134,379,133,380},new int[]{-22,558,-23,560}));
    AddState(558,new State(new int[]{41,559}));
    AddState(559,new State(-357));
    AddState(560,new State(new int[]{41,561}));
    AddState(561,new State(-359));
    AddState(562,new State(new int[]{133,15,136,16},new int[]{-9,563}));
    AddState(563,new State(new int[]{93,564}));
    AddState(564,new State(new int[]{40,565}));
    AddState(565,new State(-412,new int[]{-155,566}));
    AddState(566,new State(new int[]{41,567,135,370,149,371,150,375,134,379,133,380},new int[]{-22,568,-23,569}));
    AddState(567,new State(-391));
    AddState(568,new State(-413));
    AddState(569,new State(-414));
    AddState(570,new State(new int[]{40,571,91,574}));
    AddState(571,new State(new int[]{134,379,133,380},new int[]{-23,572}));
    AddState(572,new State(new int[]{41,573}));
    AddState(573,new State(-360));
    AddState(574,new State(new int[]{133,15,136,16},new int[]{-9,575}));
    AddState(575,new State(new int[]{93,576}));
    AddState(576,new State(new int[]{40,577}));
    AddState(577,new State(-415,new int[]{-156,578}));
    AddState(578,new State(new int[]{41,579,134,379,133,380},new int[]{-23,580}));
    AddState(579,new State(-392));
    AddState(580,new State(-416));
    AddState(581,new State(new int[]{40,582,91,585}));
    AddState(582,new State(new int[]{133,15,136,16},new int[]{-9,583}));
    AddState(583,new State(new int[]{41,584}));
    AddState(584,new State(-361));
    AddState(585,new State(new int[]{133,15,136,16},new int[]{-9,586}));
    AddState(586,new State(new int[]{93,587}));
    AddState(587,new State(new int[]{40,588}));
    AddState(588,new State(-417,new int[]{-157,589}));
    AddState(589,new State(new int[]{41,590,133,15,136,16},new int[]{-9,591}));
    AddState(590,new State(-393));
    AddState(591,new State(-418));
    AddState(592,new State(new int[]{40,593,91,596}));
    AddState(593,new State(new int[]{133,15,136,16},new int[]{-9,594}));
    AddState(594,new State(new int[]{41,595}));
    AddState(595,new State(-362));
    AddState(596,new State(new int[]{133,15,136,16},new int[]{-9,597}));
    AddState(597,new State(new int[]{93,598}));
    AddState(598,new State(new int[]{40,599}));
    AddState(599,new State(-419,new int[]{-158,600}));
    AddState(600,new State(new int[]{41,601,133,15,136,16},new int[]{-9,602}));
    AddState(601,new State(-394));
    AddState(602,new State(-420));
    AddState(603,new State(new int[]{40,604,91,607}));
    AddState(604,new State(new int[]{133,15,136,16},new int[]{-9,605}));
    AddState(605,new State(new int[]{41,606}));
    AddState(606,new State(-363));
    AddState(607,new State(new int[]{133,15,136,16},new int[]{-9,608}));
    AddState(608,new State(new int[]{93,609}));
    AddState(609,new State(new int[]{40,610}));
    AddState(610,new State(-421,new int[]{-159,611}));
    AddState(611,new State(new int[]{41,612,133,15,136,16},new int[]{-9,613}));
    AddState(612,new State(-395));
    AddState(613,new State(-422));
    AddState(614,new State(new int[]{147,615,146,625,145,635,144,645}));
    AddState(615,new State(new int[]{40,616,91,619}));
    AddState(616,new State(new int[]{134,379,133,380},new int[]{-23,617}));
    AddState(617,new State(new int[]{41,618}));
    AddState(618,new State(-364));
    AddState(619,new State(new int[]{133,15,136,16},new int[]{-9,620}));
    AddState(620,new State(new int[]{93,621}));
    AddState(621,new State(new int[]{40,622}));
    AddState(622,new State(-415,new int[]{-156,623}));
    AddState(623,new State(new int[]{41,624,134,379,133,380},new int[]{-23,580}));
    AddState(624,new State(-400));
    AddState(625,new State(new int[]{40,626,91,629}));
    AddState(626,new State(new int[]{133,15,136,16},new int[]{-9,627}));
    AddState(627,new State(new int[]{41,628}));
    AddState(628,new State(-365));
    AddState(629,new State(new int[]{133,15,136,16},new int[]{-9,630}));
    AddState(630,new State(new int[]{93,631}));
    AddState(631,new State(new int[]{40,632}));
    AddState(632,new State(-417,new int[]{-157,633}));
    AddState(633,new State(new int[]{41,634,133,15,136,16},new int[]{-9,591}));
    AddState(634,new State(-401));
    AddState(635,new State(new int[]{40,636,91,639}));
    AddState(636,new State(new int[]{133,15,136,16},new int[]{-9,637}));
    AddState(637,new State(new int[]{41,638}));
    AddState(638,new State(-366));
    AddState(639,new State(new int[]{133,15,136,16},new int[]{-9,640}));
    AddState(640,new State(new int[]{93,641}));
    AddState(641,new State(new int[]{40,642}));
    AddState(642,new State(-419,new int[]{-158,643}));
    AddState(643,new State(new int[]{41,644,133,15,136,16},new int[]{-9,602}));
    AddState(644,new State(-402));
    AddState(645,new State(new int[]{40,646,91,649}));
    AddState(646,new State(new int[]{133,15,136,16},new int[]{-9,647}));
    AddState(647,new State(new int[]{41,648}));
    AddState(648,new State(-367));
    AddState(649,new State(new int[]{133,15,136,16},new int[]{-9,650}));
    AddState(650,new State(new int[]{93,651}));
    AddState(651,new State(new int[]{40,652}));
    AddState(652,new State(-421,new int[]{-159,653}));
    AddState(653,new State(new int[]{41,654,133,15,136,16},new int[]{-9,613}));
    AddState(654,new State(-403));
    AddState(655,new State(new int[]{40,656,91,659}));
    AddState(656,new State(new int[]{134,379,133,380},new int[]{-23,657}));
    AddState(657,new State(new int[]{41,658}));
    AddState(658,new State(-368));
    AddState(659,new State(new int[]{133,15,136,16},new int[]{-9,660}));
    AddState(660,new State(new int[]{93,661}));
    AddState(661,new State(new int[]{40,662}));
    AddState(662,new State(-415,new int[]{-156,663}));
    AddState(663,new State(new int[]{41,664,134,379,133,380},new int[]{-23,580}));
    AddState(664,new State(-396));
    AddState(665,new State(new int[]{40,666,91,669}));
    AddState(666,new State(new int[]{133,15,136,16},new int[]{-9,667}));
    AddState(667,new State(new int[]{41,668}));
    AddState(668,new State(-369));
    AddState(669,new State(new int[]{133,15,136,16},new int[]{-9,670}));
    AddState(670,new State(new int[]{93,671}));
    AddState(671,new State(new int[]{40,672}));
    AddState(672,new State(-417,new int[]{-157,673}));
    AddState(673,new State(new int[]{41,674,133,15,136,16},new int[]{-9,591}));
    AddState(674,new State(-397));
    AddState(675,new State(new int[]{40,676,91,679}));
    AddState(676,new State(new int[]{133,15,136,16},new int[]{-9,677}));
    AddState(677,new State(new int[]{41,678}));
    AddState(678,new State(-370));
    AddState(679,new State(new int[]{133,15,136,16},new int[]{-9,680}));
    AddState(680,new State(new int[]{93,681}));
    AddState(681,new State(new int[]{40,682}));
    AddState(682,new State(-419,new int[]{-158,683}));
    AddState(683,new State(new int[]{41,684,133,15,136,16},new int[]{-9,602}));
    AddState(684,new State(-398));
    AddState(685,new State(new int[]{40,686,91,689}));
    AddState(686,new State(new int[]{133,15,136,16},new int[]{-9,687}));
    AddState(687,new State(new int[]{41,688}));
    AddState(688,new State(-371));
    AddState(689,new State(new int[]{133,15,136,16},new int[]{-9,690}));
    AddState(690,new State(new int[]{93,691}));
    AddState(691,new State(new int[]{40,692}));
    AddState(692,new State(-421,new int[]{-159,693}));
    AddState(693,new State(new int[]{41,694,133,15,136,16},new int[]{-9,613}));
    AddState(694,new State(-399));
    AddState(695,new State(new int[]{40,696,91,699}));
    AddState(696,new State(new int[]{133,15,136,16},new int[]{-9,697}));
    AddState(697,new State(new int[]{41,698}));
    AddState(698,new State(-372));
    AddState(699,new State(new int[]{133,15,136,16},new int[]{-9,700}));
    AddState(700,new State(new int[]{93,701}));
    AddState(701,new State(new int[]{40,702}));
    AddState(702,new State(-419,new int[]{-158,703}));
    AddState(703,new State(new int[]{41,704,133,15,136,16},new int[]{-9,602}));
    AddState(704,new State(-404));
    AddState(705,new State(new int[]{40,706,91,711}));
    AddState(706,new State(new int[]{180,709,181,710},new int[]{-17,707}));
    AddState(707,new State(new int[]{41,708}));
    AddState(708,new State(-373));
    AddState(709,new State(-655));
    AddState(710,new State(-656));
    AddState(711,new State(new int[]{133,15,136,16},new int[]{-9,712}));
    AddState(712,new State(new int[]{93,713}));
    AddState(713,new State(new int[]{40,714}));
    AddState(714,new State(-423,new int[]{-160,715}));
    AddState(715,new State(new int[]{41,716,180,709,181,710},new int[]{-17,717}));
    AddState(716,new State(-405));
    AddState(717,new State(-424));
    AddState(718,new State(new int[]{136,359,41,-376},new int[]{-30,719,-31,357}));
    AddState(719,new State(new int[]{41,720}));
    AddState(720,new State(-374));
    AddState(721,new State(new int[]{40,722,91,727}));
    AddState(722,new State(new int[]{161,723,132,725}));
    AddState(723,new State(new int[]{41,724}));
    AddState(724,new State(-384));
    AddState(725,new State(new int[]{41,726}));
    AddState(726,new State(-385));
    AddState(727,new State(new int[]{133,15,136,16},new int[]{-9,728}));
    AddState(728,new State(new int[]{93,729}));
    AddState(729,new State(new int[]{40,730}));
    AddState(730,new State(-425,new int[]{-161,731}));
    AddState(731,new State(new int[]{41,732,161,733,132,734}));
    AddState(732,new State(-406));
    AddState(733,new State(-426));
    AddState(734,new State(-427));
    AddState(735,new State(new int[]{40,736,91,744}));
    AddState(736,new State(new int[]{168,737,161,742,91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,740,-5,84,-1,76,-2,74}));
    AddState(737,new State(new int[]{132,738}));
    AddState(738,new State(new int[]{41,739}));
    AddState(739,new State(-386));
    AddState(740,new State(new int[]{41,741}));
    AddState(741,new State(-387));
    AddState(742,new State(new int[]{41,743}));
    AddState(743,new State(-388));
    AddState(744,new State(new int[]{133,15,136,16},new int[]{-9,745}));
    AddState(745,new State(new int[]{93,746}));
    AddState(746,new State(new int[]{40,747}));
    AddState(747,new State(-428,new int[]{-162,748}));
    AddState(748,new State(new int[]{41,749,161,750,168,751,91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,753,-5,84,-1,76,-2,74}));
    AddState(749,new State(-407));
    AddState(750,new State(-429));
    AddState(751,new State(new int[]{132,752}));
    AddState(752,new State(-430));
    AddState(753,new State(-431));
    AddState(754,new State(new int[]{40,755,91,758}));
    AddState(755,new State(new int[]{149,542,150,556,147,570,146,581,145,592,144,603,142,614,156,655,155,665,154,675,153,685,141,695,140,705,151,360,160,721,219,735,159,754},new int[]{-112,756,-37,541,-153,718}));
    AddState(756,new State(new int[]{41,757}));
    AddState(757,new State(-389));
    AddState(758,new State(new int[]{133,15,136,16},new int[]{-9,759}));
    AddState(759,new State(new int[]{93,760}));
    AddState(760,new State(new int[]{40,761}));
    AddState(761,new State(-432,new int[]{-163,762}));
    AddState(762,new State(new int[]{41,763,149,542,150,556,147,570,146,581,145,592,144,603,142,614,156,655,155,665,154,675,153,685,141,695,140,705,151,360,160,721,219,735,159,754},new int[]{-112,764,-37,541,-153,718}));
    AddState(763,new State(-408));
    AddState(764,new State(-433));
    AddState(765,new State(new int[]{93,766}));
    AddState(766,new State(-69));
    AddState(767,new State(-64));
    AddState(768,new State(-65));
    AddState(769,new State(-66));
    AddState(770,new State(new int[]{168,771,91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-49,773,-5,84,-1,76,-2,74}));
    AddState(771,new State(new int[]{132,772}));
    AddState(772,new State(-67));
    AddState(773,new State(-68));
    AddState(774,new State(-62));
    AddState(775,new State(-63));
    AddState(776,new State(new int[]{132,777,91,96,129,45,130,75,268,85,269,86,270,87},new int[]{-49,95,-5,84,-1,76,-2,74}));
    AddState(777,new State(new int[]{61,778,46,-31,47,-31,91,-31,38,-31,42,-31,214,-31,215,-31,216,-31,60,-31}));
    AddState(778,new State(new int[]{123,779}));
    AddState(779,new State(-60,new int[]{-111,780}));
    AddState(780,new State(new int[]{125,781,213,774,218,775},new int[]{-113,536}));
    AddState(781,new State(-667));
    AddState(782,new State(new int[]{40,783}));
    AddState(783,new State(-669));
    AddState(784,new State(-681));
    AddState(785,new State(-682));
    AddState(786,new State(-683));
    AddState(787,new State(-684));
    AddState(788,new State(-685));
    AddState(789,new State(-686));
    AddState(790,new State(-687));
    AddState(791,new State(-688));
    AddState(792,new State(-689));
    AddState(793,new State(-690));
    AddState(794,new State(-691));
    AddState(795,new State(-692));
    AddState(796,new State(-693));
    AddState(797,new State(-694));
    AddState(798,new State(-695));
    AddState(799,new State(new int[]{287,784,288,785,289,786,290,787,291,788,292,789,293,790,294,791,295,792,296,793,297,794,298,795,299,796,300,797,301,798},new int[]{-62,800}));
    AddState(800,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,801,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(801,new State(new int[]{40,802,61,834,127,-659,263,-659,264,-659,265,-659,266,-659,267,-659,309,-659,302,-659,303,-659,314,-659,317,-659,324,-659,325,-659,286,-659,285,-659,305,-659,378,-659,379,-659,381,-659,382,-659,304,-659,125,-659,277,-659,282,-659,307,-659,308,-659,326,-659,361,-659,360,-659,271,-659,272,-659,273,-659,274,-659,275,-659,276,-659,250,-659,251,-659,252,-659,253,-659,254,-659,255,-659,256,-659,257,-659,258,-659,259,-659,260,-659,261,-659,262,-659,129,-659,132,-659,312,-659,123,-659,316,-659,321,-659,318,-659,322,-659}));
    AddState(802,new State(new int[]{131,201},new int[]{-166,803,-170,805,-34,808}));
    AddState(803,new State(new int[]{41,804}));
    AddState(804,new State(-658));
    AddState(805,new State(new int[]{44,806,41,-670}));
    AddState(806,new State(new int[]{131,201},new int[]{-166,807,-170,805,-34,808}));
    AddState(807,new State(-671));
    AddState(808,new State(new int[]{61,809,43,199}));
    AddState(809,new State(new int[]{180,709,181,710,133,15,136,16,146,813,131,201,91,96,129,45,132,46,130,75,268,85,269,86,270,87},new int[]{-171,810,-17,811,-9,812,-34,817,-49,818,-5,84,-1,76,-2,74}));
    AddState(810,new State(-672));
    AddState(811,new State(-673));
    AddState(812,new State(-674));
    AddState(813,new State(new int[]{40,814}));
    AddState(814,new State(new int[]{133,15,136,16},new int[]{-9,815}));
    AddState(815,new State(new int[]{41,816}));
    AddState(816,new State(-675));
    AddState(817,new State(new int[]{43,199,44,-676,41,-676}));
    AddState(818,new State(new int[]{40,819}));
    AddState(819,new State(new int[]{144,820,145,824,146,828,133,15,136,16},new int[]{-9,832}));
    AddState(820,new State(new int[]{58,821}));
    AddState(821,new State(new int[]{133,15,136,16},new int[]{-9,822}));
    AddState(822,new State(new int[]{41,823}));
    AddState(823,new State(-677));
    AddState(824,new State(new int[]{58,825}));
    AddState(825,new State(new int[]{133,15,136,16},new int[]{-9,826}));
    AddState(826,new State(new int[]{41,827}));
    AddState(827,new State(-678));
    AddState(828,new State(new int[]{58,829}));
    AddState(829,new State(new int[]{133,15,136,16},new int[]{-9,830}));
    AddState(830,new State(new int[]{41,831}));
    AddState(831,new State(-679));
    AddState(832,new State(new int[]{41,833}));
    AddState(833,new State(-680));
    AddState(834,new State(new int[]{123,835}));
    AddState(835,new State(-58,new int[]{-109,836,-110,838}));
    AddState(836,new State(new int[]{125,837}));
    AddState(837,new State(-661));
    AddState(838,new State(new int[]{149,542,150,556,147,570,146,581,145,592,144,603,142,614,156,655,155,665,154,675,153,685,141,695,140,705,151,360,160,721,219,735,159,754,213,-60,218,-60,125,-60},new int[]{-111,839,-112,840,-37,541,-153,718}));
    AddState(839,new State(new int[]{213,774,218,775,125,-57},new int[]{-113,536}));
    AddState(840,new State(-59));
    AddState(841,new State(new int[]{136,359,41,-376},new int[]{-30,842,-31,357}));
    AddState(842,new State(new int[]{41,843}));
    AddState(843,new State(-660));
    AddState(844,new State(-302));
    AddState(845,new State(new int[]{133,15,136,16},new int[]{-9,846}));
    AddState(846,new State(new int[]{132,847,58,848,44,854,131,862,127,-699,263,-699,264,-699,265,-699,266,-699,267,-699,309,-699,302,-699,303,-699,314,-699,317,-699,324,-699,325,-699,286,-699,285,-699,305,-699,378,-699,379,-699,381,-699,382,-699,304,-699,125,-699,277,-699,282,-699,307,-699,308,-699,326,-699,361,-699,360,-699,271,-699,272,-699,273,-699,274,-699,275,-699,276,-699,250,-699,251,-699,252,-699,253,-699,254,-699,255,-699,256,-699,257,-699,258,-699,259,-699,260,-699,261,-699,262,-699,129,-699,312,-699,123,-699,278,-699,279,-699,280,-699,281,-699,283,-699,284,-699}));
    AddState(847,new State(-698));
    AddState(848,new State(new int[]{133,15,136,16},new int[]{-9,849}));
    AddState(849,new State(new int[]{132,850,44,851,127,-701,263,-701,264,-701,265,-701,266,-701,267,-701,309,-701,302,-701,303,-701,314,-701,317,-701,324,-701,325,-701,286,-701,285,-701,305,-701,378,-701,379,-701,381,-701,382,-701,304,-701,125,-701,277,-701,282,-701,307,-701,308,-701,326,-701,361,-701,360,-701,271,-701,272,-701,273,-701,274,-701,275,-701,276,-701,250,-701,251,-701,252,-701,253,-701,254,-701,255,-701,256,-701,257,-701,258,-701,259,-701,260,-701,261,-701,262,-701,129,-701,312,-701,123,-701,278,-701,279,-701,280,-701,281,-701,283,-701,284,-701}));
    AddState(850,new State(-700));
    AddState(851,new State(new int[]{133,15,136,16},new int[]{-9,852}));
    AddState(852,new State(new int[]{132,853,127,-703,263,-703,264,-703,265,-703,266,-703,267,-703,309,-703,302,-703,303,-703,314,-703,317,-703,324,-703,325,-703,286,-703,285,-703,305,-703,378,-703,379,-703,381,-703,382,-703,304,-703,125,-703,277,-703,282,-703,307,-703,308,-703,326,-703,361,-703,360,-703,271,-703,272,-703,273,-703,274,-703,275,-703,276,-703,250,-703,251,-703,252,-703,253,-703,254,-703,255,-703,256,-703,257,-703,258,-703,259,-703,260,-703,261,-703,262,-703,129,-703,312,-703,123,-703,278,-703,279,-703,280,-703,281,-703,283,-703,284,-703}));
    AddState(853,new State(-702));
    AddState(854,new State(new int[]{133,15,136,16},new int[]{-9,855}));
    AddState(855,new State(new int[]{58,856}));
    AddState(856,new State(new int[]{133,15,136,16},new int[]{-9,857}));
    AddState(857,new State(new int[]{132,858,44,859,127,-705,263,-705,264,-705,265,-705,266,-705,267,-705,309,-705,302,-705,303,-705,314,-705,317,-705,324,-705,325,-705,286,-705,285,-705,305,-705,378,-705,379,-705,381,-705,382,-705,304,-705,125,-705,277,-705,282,-705,307,-705,308,-705,326,-705,361,-705,360,-705,271,-705,272,-705,273,-705,274,-705,275,-705,276,-705,250,-705,251,-705,252,-705,253,-705,254,-705,255,-705,256,-705,257,-705,258,-705,259,-705,260,-705,261,-705,262,-705,129,-705,312,-705,123,-705,278,-705,279,-705,280,-705,281,-705,283,-705,284,-705}));
    AddState(858,new State(-704));
    AddState(859,new State(new int[]{133,15,136,16},new int[]{-9,860}));
    AddState(860,new State(new int[]{132,861,127,-707,263,-707,264,-707,265,-707,266,-707,267,-707,309,-707,302,-707,303,-707,314,-707,317,-707,324,-707,325,-707,286,-707,285,-707,305,-707,378,-707,379,-707,381,-707,382,-707,304,-707,125,-707,277,-707,282,-707,307,-707,308,-707,326,-707,361,-707,360,-707,271,-707,272,-707,273,-707,274,-707,275,-707,276,-707,250,-707,251,-707,252,-707,253,-707,254,-707,255,-707,256,-707,257,-707,258,-707,259,-707,260,-707,261,-707,262,-707,129,-707,312,-707,123,-707,278,-707,279,-707,280,-707,281,-707,283,-707,284,-707}));
    AddState(861,new State(-706));
    AddState(862,new State(-708));
    AddState(863,new State(-696));
    AddState(864,new State(-697));
    AddState(865,new State(-303));
    AddState(866,new State(new int[]{132,867}));
    AddState(867,new State(new int[]{44,868,127,-27,263,-27,264,-27,265,-27,266,-27,267,-27,309,-27,302,-27,303,-27,314,-27,317,-27,324,-27,325,-27,286,-27,285,-27,305,-27,378,-27,379,-27,381,-27,382,-27,304,-27,125,-27,277,-27,282,-27,307,-27,308,-27,326,-27,361,-27,360,-27,271,-27,272,-27,273,-27,274,-27,275,-27,276,-27,250,-27,251,-27,252,-27,253,-27,254,-27,255,-27,256,-27,257,-27,258,-27,259,-27,260,-27,261,-27,262,-27,129,-27,132,-27,312,-27,123,-27,278,-27,279,-27,280,-27,281,-27,283,-27,284,-27}));
    AddState(868,new State(new int[]{132,869}));
    AddState(869,new State(new int[]{44,870,127,-28,263,-28,264,-28,265,-28,266,-28,267,-28,309,-28,302,-28,303,-28,314,-28,317,-28,324,-28,325,-28,286,-28,285,-28,305,-28,378,-28,379,-28,381,-28,382,-28,304,-28,125,-28,277,-28,282,-28,307,-28,308,-28,326,-28,361,-28,360,-28,271,-28,272,-28,273,-28,274,-28,275,-28,276,-28,250,-28,251,-28,252,-28,253,-28,254,-28,255,-28,256,-28,257,-28,258,-28,259,-28,260,-28,261,-28,262,-28,129,-28,132,-28,312,-28,123,-28,278,-28,279,-28,280,-28,281,-28,283,-28,284,-28}));
    AddState(870,new State(new int[]{132,871}));
    AddState(871,new State(-29));
    AddState(872,new State(-304));
    AddState(873,new State(-42));
    AddState(874,new State(new int[]{40,882,185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-52,875,-54,892,-7,447,-8,162}));
    AddState(875,new State(new int[]{61,876,127,-44,263,-44,264,-44,265,-44,266,-44,267,-44,309,-44,302,-44,303,-44,314,-44,317,-44,324,-44,325,-44,286,-44,285,-44,305,-44,378,-44,379,-44,381,-44,382,-44,304,-44,125,-44,277,-44,282,-44,307,-44,308,-44,326,-44,361,-44,360,-44,271,-44,272,-44,273,-44,274,-44,275,-44,276,-44,250,-44,251,-44,252,-44,253,-44,254,-44,255,-44,256,-44,257,-44,258,-44,259,-44,260,-44,261,-44,262,-44,129,-44,132,-44,312,-44,123,-44,278,-44,279,-44,280,-44,281,-44,283,-44,284,-44,316,-44,321,-44,318,-44,322,-44,319,-44,198,-44}));
    AddState(876,new State(new int[]{40,877,123,879,131,201},new int[]{-34,878}));
    AddState(877,new State(-52));
    AddState(878,new State(new int[]{43,199,127,-46,263,-46,264,-46,265,-46,266,-46,267,-46,309,-46,302,-46,303,-46,314,-46,317,-46,324,-46,325,-46,286,-46,285,-46,305,-46,378,-46,379,-46,381,-46,382,-46,304,-46,125,-46,277,-46,282,-46,307,-46,308,-46,326,-46,361,-46,360,-46,271,-46,272,-46,273,-46,274,-46,275,-46,276,-46,250,-46,251,-46,252,-46,253,-46,254,-46,255,-46,256,-46,257,-46,258,-46,259,-46,260,-46,261,-46,262,-46,129,-46,132,-46,312,-46,123,-46,278,-46,279,-46,280,-46,281,-46,283,-46,284,-46,316,-46,321,-46,318,-46,322,-46,319,-46,198,-46}));
    AddState(879,new State(-58,new int[]{-109,880,-110,838}));
    AddState(880,new State(new int[]{125,881}));
    AddState(881,new State(-47));
    AddState(882,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,213,504},new int[]{-51,883,-50,498,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,499,-38,137,-53,503}));
    AddState(883,new State(new int[]{41,884}));
    AddState(884,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-52,885,-54,892,-7,447,-8,162}));
    AddState(885,new State(new int[]{61,886,127,-48,263,-48,264,-48,265,-48,266,-48,267,-48,309,-48,302,-48,303,-48,314,-48,317,-48,324,-48,325,-48,286,-48,285,-48,305,-48,378,-48,379,-48,381,-48,382,-48,304,-48,125,-48,277,-48,282,-48,307,-48,308,-48,326,-48,361,-48,360,-48,271,-48,272,-48,273,-48,274,-48,275,-48,276,-48,250,-48,251,-48,252,-48,253,-48,254,-48,255,-48,256,-48,257,-48,258,-48,259,-48,260,-48,261,-48,262,-48,129,-48,132,-48,312,-48,123,-48,278,-48,279,-48,280,-48,281,-48,283,-48,284,-48,316,-48,321,-48,318,-48,322,-48,319,-48,198,-48}));
    AddState(886,new State(new int[]{40,887,123,889,131,201},new int[]{-34,888}));
    AddState(887,new State(-53));
    AddState(888,new State(new int[]{43,199,127,-50,263,-50,264,-50,265,-50,266,-50,267,-50,309,-50,302,-50,303,-50,314,-50,317,-50,324,-50,325,-50,286,-50,285,-50,305,-50,378,-50,379,-50,381,-50,382,-50,304,-50,125,-50,277,-50,282,-50,307,-50,308,-50,326,-50,361,-50,360,-50,271,-50,272,-50,273,-50,274,-50,275,-50,276,-50,250,-50,251,-50,252,-50,253,-50,254,-50,255,-50,256,-50,257,-50,258,-50,259,-50,260,-50,261,-50,262,-50,129,-50,132,-50,312,-50,123,-50,278,-50,279,-50,280,-50,281,-50,283,-50,284,-50,316,-50,321,-50,318,-50,322,-50,319,-50,198,-50}));
    AddState(889,new State(-58,new int[]{-109,890,-110,838}));
    AddState(890,new State(new int[]{125,891}));
    AddState(891,new State(-51));
    AddState(892,new State(-54));
    AddState(893,new State(new int[]{136,359,41,-376},new int[]{-30,894,-31,357}));
    AddState(894,new State(new int[]{41,895}));
    AddState(895,new State(-45));
    AddState(896,new State(-43));
    AddState(897,new State(new int[]{136,359,41,-376},new int[]{-30,898,-31,357}));
    AddState(898,new State(new int[]{41,899}));
    AddState(899,new State(-49));
    AddState(900,new State(new int[]{91,901}));
    AddState(901,new State(new int[]{133,15,136,16},new int[]{-9,902}));
    AddState(902,new State(new int[]{93,903}));
    AddState(903,new State(new int[]{245,904,125,-305,271,-305,272,-305,273,-305,274,-305,275,-305,276,-305,267,-305,250,-305,251,-305,252,-305,253,-305,254,-305,255,-305,256,-305,257,-305,258,-305,259,-305,260,-305,261,-305,262,-305,129,-305,132,-305,286,-305,285,-305,302,-305,303,-305,304,-305,305,-305,326,-305,312,-305,361,-305,123,-305,360,-305}));
    AddState(904,new State(new int[]{129,45,132,46},new int[]{-2,905}));
    AddState(905,new State(-306));
    AddState(906,new State(new int[]{133,15,136,16},new int[]{-9,907}));
    AddState(907,new State(new int[]{58,908}));
    AddState(908,new State(new int[]{133,15,136,16},new int[]{-9,909}));
    AddState(909,new State(-307));
    AddState(910,new State(new int[]{212,914,91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,911,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(911,new State(new int[]{137,912}));
    AddState(912,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,913,-1,459,-2,74}));
    AddState(913,new State(-308));
    AddState(914,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,915,-8,162}));
    AddState(915,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,916,-165,93,-128,108,-38,137}));
    AddState(916,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,60,117},new int[]{-50,917,-164,116,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(917,new State(new int[]{137,918}));
    AddState(918,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,919,-1,459,-2,74}));
    AddState(919,new State(new int[]{60,924,40,-136},new int[]{-21,920}));
    AddState(920,new State(new int[]{40,921}));
    AddState(921,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,922,-25,37,-26,115,-13,41}));
    AddState(922,new State(new int[]{41,923}));
    AddState(923,new State(-309));
    AddState(924,new State(new int[]{91,925}));
    AddState(925,new State(new int[]{133,15,136,16},new int[]{-9,926}));
    AddState(926,new State(new int[]{93,927}));
    AddState(927,new State(new int[]{62,928}));
    AddState(928,new State(-137));
    AddState(929,new State(-310));
    AddState(930,new State(new int[]{219,931,91,936}));
    AddState(931,new State(new int[]{91,932,129,45,132,46,130,75},new int[]{-1,935,-2,74}));
    AddState(932,new State(new int[]{133,15,136,16},new int[]{-9,933}));
    AddState(933,new State(new int[]{93,934}));
    AddState(934,new State(-311));
    AddState(935,new State(new int[]{46,72,125,-312,271,-312,272,-312,273,-312,274,-312,275,-312,276,-312,267,-312,250,-312,251,-312,252,-312,253,-312,254,-312,255,-312,256,-312,257,-312,258,-312,259,-312,260,-312,261,-312,262,-312,129,-312,132,-312,286,-312,285,-312,302,-312,303,-312,304,-312,305,-312,326,-312,312,-312,361,-312,123,-312,360,-312}));
    AddState(936,new State(new int[]{133,15,136,16},new int[]{-9,937}));
    AddState(937,new State(new int[]{93,938}));
    AddState(938,new State(new int[]{61,940,125,-175,271,-175,272,-175,273,-175,274,-175,275,-175,276,-175,267,-175,250,-175,251,-175,252,-175,253,-175,254,-175,255,-175,256,-175,257,-175,258,-175,259,-175,260,-175,261,-175,262,-175,129,-175,132,-175,286,-175,285,-175,302,-175,303,-175,304,-175,305,-175,326,-175,312,-175,361,-175,123,-175,360,-175},new int[]{-33,939}));
    AddState(939,new State(-313));
    AddState(940,new State(new int[]{149,943,150,944,147,945,146,946,145,947,144,948,142,949,156,954,155,955,154,956,153,957,141,958,140,959,151,360,131,201,161,961},new int[]{-36,941,-37,942,-153,718,-34,960}));
    AddState(941,new State(-176));
    AddState(942,new State(-380));
    AddState(943,new State(new int[]{40,543}));
    AddState(944,new State(new int[]{40,557}));
    AddState(945,new State(new int[]{40,571}));
    AddState(946,new State(new int[]{40,582}));
    AddState(947,new State(new int[]{40,593}));
    AddState(948,new State(new int[]{40,604}));
    AddState(949,new State(new int[]{147,950,146,951,145,952,144,953}));
    AddState(950,new State(new int[]{40,616}));
    AddState(951,new State(new int[]{40,626}));
    AddState(952,new State(new int[]{40,636}));
    AddState(953,new State(new int[]{40,646}));
    AddState(954,new State(new int[]{40,656}));
    AddState(955,new State(new int[]{40,666}));
    AddState(956,new State(new int[]{40,676}));
    AddState(957,new State(new int[]{40,686}));
    AddState(958,new State(new int[]{40,696}));
    AddState(959,new State(new int[]{40,706}));
    AddState(960,new State(new int[]{43,199,125,-381,271,-381,272,-381,273,-381,274,-381,275,-381,276,-381,267,-381,250,-381,251,-381,252,-381,253,-381,254,-381,255,-381,256,-381,257,-381,258,-381,259,-381,260,-381,261,-381,262,-381,129,-381,132,-381,286,-381,285,-381,302,-381,303,-381,304,-381,305,-381,326,-381,312,-381,361,-381,123,-381,360,-381,127,-381,263,-381,264,-381,265,-381,266,-381,309,-381,314,-381,317,-381,324,-381,325,-381,378,-381,379,-381,381,-381,382,-381,277,-381,282,-381,307,-381,308,-381}));
    AddState(961,new State(-382));
    AddState(962,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,963,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(963,new State(-326));
    AddState(964,new State(new int[]{123,29},new int[]{-138,965,-139,24}));
    AddState(965,new State(-322));
    AddState(966,new State(-325));
    AddState(967,new State(new int[]{123,29},new int[]{-138,968,-139,24}));
    AddState(968,new State(-323));
    AddState(969,new State(-327));
    AddState(970,new State(new int[]{123,29},new int[]{-138,971,-139,24}));
    AddState(971,new State(-324));
    AddState(972,new State(-328));
    AddState(973,new State(-228,new int[]{-56,974}));
    AddState(974,new State(new int[]{188,1024,189,1025,190,1026,191,1027,192,1028,186,1029,206,1030,210,1031,197,1032,220,1033,221,1034,222,1035,223,1036,224,1037,225,1038,226,1039,208,1040,233,1041,157,1042,227,1046,185,158,200,160,162,163,164,164,170,165,158,170,91,-185,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,975,-8,162}));
    AddState(975,new State(-270,new int[]{-13,976}));
    AddState(976,new State(new int[]{91,321,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,977,-165,93,-128,108,-38,137}));
    AddState(977,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,332,174,60,117,228,-225,229,-225,129,-225,132,-225,130,-225},new int[]{-35,978,-164,116}));
    AddState(978,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,979,-1,459,-2,74}));
    AddState(979,new State(new int[]{60,1001,40,-122},new int[]{-48,980}));
    AddState(980,new State(new int[]{40,981}));
    AddState(981,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,982,-25,37,-26,115,-13,41}));
    AddState(982,new State(new int[]{41,983}));
    AddState(983,new State(-275,new int[]{-58,984}));
    AddState(984,new State(new int[]{123,985,184,986,234,987,235,988,236,989,170,990,237,991,238,992,239,993,240,994,193,995,207,996,157,997}));
    AddState(985,new State(-227));
    AddState(986,new State(-276));
    AddState(987,new State(-277));
    AddState(988,new State(-278));
    AddState(989,new State(-279));
    AddState(990,new State(-280));
    AddState(991,new State(-281));
    AddState(992,new State(-282));
    AddState(993,new State(-283));
    AddState(994,new State(-284));
    AddState(995,new State(-285));
    AddState(996,new State(-286));
    AddState(997,new State(new int[]{40,998}));
    AddState(998,new State(new int[]{133,15,136,16},new int[]{-9,999}));
    AddState(999,new State(new int[]{41,1000}));
    AddState(1000,new State(-287));
    AddState(1001,new State(-129,new int[]{-46,1002,-47,1023,-19,1006}));
    AddState(1002,new State(new int[]{62,1003,44,1004}));
    AddState(1003,new State(-123));
    AddState(1004,new State(-129,new int[]{-47,1005,-19,1006}));
    AddState(1005,new State(-132));
    AddState(1006,new State(new int[]{40,1011,43,1018,45,1019,168,1020,183,1021,228,1022,129,45,132,46,130,75},new int[]{-44,1007,-18,1009,-1,1010,-2,74}));
    AddState(1007,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1008,-2,74}));
    AddState(1008,new State(new int[]{46,72,62,-133,44,-133}));
    AddState(1009,new State(-130));
    AddState(1010,new State(new int[]{46,72,62,-134,44,-134}));
    AddState(1011,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,41,-118},new int[]{-42,1012,-43,1014,-50,1017,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1012,new State(new int[]{41,1013}));
    AddState(1013,new State(-135));
    AddState(1014,new State(new int[]{44,1015,41,-119}));
    AddState(1015,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,1016,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1016,new State(-121));
    AddState(1017,new State(-120));
    AddState(1018,new State(-124));
    AddState(1019,new State(-125));
    AddState(1020,new State(-126));
    AddState(1021,new State(-127));
    AddState(1022,new State(-128));
    AddState(1023,new State(-131));
    AddState(1024,new State(-229));
    AddState(1025,new State(-230));
    AddState(1026,new State(-231));
    AddState(1027,new State(-232));
    AddState(1028,new State(-233));
    AddState(1029,new State(-234));
    AddState(1030,new State(-235));
    AddState(1031,new State(-236));
    AddState(1032,new State(-237));
    AddState(1033,new State(-238));
    AddState(1034,new State(-239));
    AddState(1035,new State(-240));
    AddState(1036,new State(-241));
    AddState(1037,new State(-242));
    AddState(1038,new State(-243));
    AddState(1039,new State(-244));
    AddState(1040,new State(-245));
    AddState(1041,new State(-246));
    AddState(1042,new State(new int[]{40,1043}));
    AddState(1043,new State(new int[]{133,15,136,16},new int[]{-9,1044}));
    AddState(1044,new State(new int[]{41,1045}));
    AddState(1045,new State(-247));
    AddState(1046,new State(new int[]{40,1047}));
    AddState(1047,new State(new int[]{131,201,41,-251,242,-251,201,-251,202,-251,203,-251,243,-251,244,-251,163,-251,165,-251,166,-251,167,-251,246,-251,249,-251,157,-251},new int[]{-34,1048,-61,1077}));
    AddState(1048,new State(new int[]{245,1049,43,199,41,-251,242,-251,201,-251,202,-251,203,-251,243,-251,244,-251,163,-251,165,-251,166,-251,167,-251,246,-251,249,-251,157,-251},new int[]{-61,1075}));
    AddState(1049,new State(new int[]{131,201},new int[]{-34,1050}));
    AddState(1050,new State(new int[]{43,199,41,-251,242,-251,201,-251,202,-251,203,-251,243,-251,244,-251,163,-251,165,-251,166,-251,167,-251,246,-251,249,-251,157,-251},new int[]{-61,1051}));
    AddState(1051,new State(new int[]{41,1052,242,1053,201,1054,202,1055,203,1056,243,1057,244,1058,163,1059,165,1060,166,1061,167,1062,246,1063,249,1067,157,1071}));
    AddState(1052,new State(-248));
    AddState(1053,new State(-252));
    AddState(1054,new State(-253));
    AddState(1055,new State(-254));
    AddState(1056,new State(-255));
    AddState(1057,new State(-256));
    AddState(1058,new State(-257));
    AddState(1059,new State(-258));
    AddState(1060,new State(-259));
    AddState(1061,new State(-260));
    AddState(1062,new State(-261));
    AddState(1063,new State(new int[]{58,1064}));
    AddState(1064,new State(new int[]{247,1065,248,1066}));
    AddState(1065,new State(-262));
    AddState(1066,new State(-263));
    AddState(1067,new State(new int[]{58,1068}));
    AddState(1068,new State(new int[]{247,1069,248,1070}));
    AddState(1069,new State(-264));
    AddState(1070,new State(-265));
    AddState(1071,new State(new int[]{40,1072}));
    AddState(1072,new State(new int[]{133,15,136,16},new int[]{-9,1073}));
    AddState(1073,new State(new int[]{41,1074}));
    AddState(1074,new State(-266));
    AddState(1075,new State(new int[]{41,1076,242,1053,201,1054,202,1055,203,1056,243,1057,244,1058,163,1059,165,1060,166,1061,167,1062,246,1063,249,1067,157,1071}));
    AddState(1076,new State(-249));
    AddState(1077,new State(new int[]{41,1078,242,1053,201,1054,202,1055,203,1056,243,1057,244,1058,163,1059,165,1060,166,1061,167,1062,246,1063,249,1067,157,1071}));
    AddState(1078,new State(-250));
    AddState(1079,new State(-224));
    AddState(1080,new State(new int[]{123,1081}));
    AddState(1081,new State(-114,new int[]{-88,1082}));
    AddState(1082,new State(new int[]{125,1083,265,1079,263,1127,277,1151,282,1177,266,1209,267,414,286,520,285,799,302,863,303,864,305,874,307,1214,308,1216,326,1232,361,1245,304,866,360,1280},new int[]{-120,8,-90,9,-133,973,-87,1080,-116,1084,-115,1094,-121,1128,-129,1144,-123,1152,-131,1166,-92,1178,-126,1179,-93,1210,-148,338,-106,1211,-167,841,-95,1212,-172,845,-107,1213,-68,873,-10,893,-69,896,-11,897,-125,1218,-108,1279}));
    AddState(1083,new State(-139));
    AddState(1084,new State(new int[]{175,1092,176,-110,123,-110},new int[]{-117,1085}));
    AddState(1085,new State(new int[]{176,1087,123,-112},new int[]{-118,1086}));
    AddState(1086,new State(-83));
    AddState(1087,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-119,1088,-50,1091,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1088,new State(new int[]{44,1089,123,-113}));
    AddState(1089,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,1090,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1090,new State(-116));
    AddState(1091,new State(-117));
    AddState(1092,new State(new int[]{91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,1093,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1093,new State(-111));
    AddState(1094,new State(-84,new int[]{-55,1095}));
    AddState(1095,new State(new int[]{189,1098,190,1099,182,1100,205,1101,194,1102,195,1103,197,1104,198,1105,199,1106,200,1107,201,1108,202,1109,203,1110,204,1111,217,1112,196,1113,209,1120,186,1121,226,1122,157,1123,129,45,132,46,130,75},new int[]{-1,1096,-2,74}));
    AddState(1096,new State(new int[]{46,72,60,1001,175,-122,176,-122,123,-122},new int[]{-48,1097}));
    AddState(1097,new State(-82));
    AddState(1098,new State(-85));
    AddState(1099,new State(-86));
    AddState(1100,new State(-87));
    AddState(1101,new State(-88));
    AddState(1102,new State(-89));
    AddState(1103,new State(-90));
    AddState(1104,new State(-91));
    AddState(1105,new State(-92));
    AddState(1106,new State(-93));
    AddState(1107,new State(-94));
    AddState(1108,new State(-95));
    AddState(1109,new State(-96));
    AddState(1110,new State(-97));
    AddState(1111,new State(-98));
    AddState(1112,new State(-99));
    AddState(1113,new State(new int[]{189,1114,190,1115,191,1116,220,1117,221,1118,222,1119}));
    AddState(1114,new State(-100));
    AddState(1115,new State(-101));
    AddState(1116,new State(-102));
    AddState(1117,new State(-103));
    AddState(1118,new State(-104));
    AddState(1119,new State(-105));
    AddState(1120,new State(-106));
    AddState(1121,new State(-107));
    AddState(1122,new State(-108));
    AddState(1123,new State(new int[]{40,1124}));
    AddState(1124,new State(new int[]{133,15,136,16},new int[]{-9,1125}));
    AddState(1125,new State(new int[]{41,1126}));
    AddState(1126,new State(-109));
    AddState(1127,new State(-81));
    AddState(1128,new State(new int[]{123,1129}));
    AddState(1129,new State(-202,new int[]{-122,1130}));
    AddState(1130,new State(new int[]{125,1131,278,1133,279,1135,280,1137,281,1139,302,863,303,864,305,874,304,866},new int[]{-130,1132,-95,1141,-172,845,-107,1142,-68,873,-10,893,-69,896,-11,897,-108,1143}));
    AddState(1131,new State(-140));
    AddState(1132,new State(-203));
    AddState(1133,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1134,-7,447,-8,162}));
    AddState(1134,new State(-204));
    AddState(1135,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1136,-7,447,-8,162}));
    AddState(1136,new State(-205));
    AddState(1137,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1138,-7,447,-8,162}));
    AddState(1138,new State(-206));
    AddState(1139,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1140,-7,447,-8,162}));
    AddState(1140,new State(-207));
    AddState(1141,new State(-208));
    AddState(1142,new State(-209));
    AddState(1143,new State(-210));
    AddState(1144,new State(-199,new int[]{-59,1145}));
    AddState(1145,new State(new int[]{226,1149,186,1150,91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,1146,-1,1148,-49,65,-5,84,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1146,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1147,-2,74}));
    AddState(1147,new State(new int[]{46,72,123,-196}));
    AddState(1148,new State(new int[]{46,72,123,-197,47,-495,129,-495,132,-495,130,-495}));
    AddState(1149,new State(-200));
    AddState(1150,new State(-201));
    AddState(1151,new State(-198));
    AddState(1152,new State(new int[]{123,1153}));
    AddState(1153,new State(-216,new int[]{-124,1154}));
    AddState(1154,new State(new int[]{125,1155,283,1157,284,1159,281,1161,305,874,302,863,303,864,304,866},new int[]{-132,1156,-107,1163,-68,873,-10,893,-69,896,-11,897,-95,1164,-172,845,-108,1165}));
    AddState(1155,new State(-141));
    AddState(1156,new State(-217));
    AddState(1157,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1158,-7,447,-8,162}));
    AddState(1158,new State(-218));
    AddState(1159,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1160,-7,447,-8,162}));
    AddState(1160,new State(-219));
    AddState(1161,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-54,1162,-7,447,-8,162}));
    AddState(1162,new State(-220));
    AddState(1163,new State(-221));
    AddState(1164,new State(-222));
    AddState(1165,new State(-223));
    AddState(1166,new State(-213,new int[]{-60,1167}));
    AddState(1167,new State(new int[]{226,1175,186,1176,185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,1168,-8,162}));
    AddState(1168,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,1169,-165,93,-128,108,-38,137}));
    AddState(1169,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,60,117},new int[]{-1,1170,-164,116,-2,74}));
    AddState(1170,new State(new int[]{40,1171,46,72}));
    AddState(1171,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,1172,-25,37,-26,115,-13,41}));
    AddState(1172,new State(new int[]{41,1173}));
    AddState(1173,new State(new int[]{61,940,123,-175},new int[]{-33,1174}));
    AddState(1174,new State(-211));
    AddState(1175,new State(-214));
    AddState(1176,new State(-215));
    AddState(1177,new State(-212));
    AddState(1178,new State(-142));
    AddState(1179,new State(new int[]{91,1206,188,-177,189,-177,190,-177,191,-177,232,-177,226,-177,186,-177,220,-177,221,-177,222,-177,223,-177,230,-177,231,-177,157,-177,168,-177,159,-177,182,-177,183,-177,212,-177,33,-177,169,-177,139,-177,184,-177,141,-177,160,-177,140,-177,144,-177,145,-177,146,-177,147,-177,149,-177,150,-177,142,-177,153,-177,154,-177,155,-177,156,-177,332,-177},new int[]{-16,1180}));
    AddState(1180,new State(-157,new int[]{-57,1181}));
    AddState(1181,new State(new int[]{188,1188,189,1189,190,1190,191,1191,232,1192,226,1193,186,1194,220,1196,221,1197,222,1198,223,1199,230,1200,231,1201,157,1202,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,332,174},new int[]{-27,1182,-35,1195,-165,93,-128,108,-38,137}));
    AddState(1182,new State(new int[]{91,47,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,60,117},new int[]{-1,1183,-164,116,-2,74}));
    AddState(1183,new State(new int[]{46,72,178,1186,61,-173,127,-173,263,-173,264,-173,265,-173,266,-173,267,-173,309,-173,302,-173,303,-173,314,-173,317,-173,324,-173,325,-173,286,-173,285,-173,305,-173,378,-173,379,-173,381,-173,382,-173,304,-173,125,-173,277,-173,282,-173,307,-173,308,-173,326,-173,361,-173,360,-173},new int[]{-4,1184}));
    AddState(1184,new State(new int[]{61,940,127,-175,263,-175,264,-175,265,-175,266,-175,267,-175,309,-175,302,-175,303,-175,314,-175,317,-175,324,-175,325,-175,286,-175,285,-175,305,-175,378,-175,379,-175,381,-175,382,-175,304,-175,125,-175,277,-175,282,-175,307,-175,308,-175,326,-175,361,-175,360,-175},new int[]{-33,1185}));
    AddState(1185,new State(-155));
    AddState(1186,new State(new int[]{129,45,132,46},new int[]{-2,1187}));
    AddState(1187,new State(-174));
    AddState(1188,new State(-158));
    AddState(1189,new State(-159));
    AddState(1190,new State(-160));
    AddState(1191,new State(-161));
    AddState(1192,new State(-162));
    AddState(1193,new State(-163));
    AddState(1194,new State(-164));
    AddState(1195,new State(-165));
    AddState(1196,new State(-166));
    AddState(1197,new State(-167));
    AddState(1198,new State(-168));
    AddState(1199,new State(-169));
    AddState(1200,new State(-170));
    AddState(1201,new State(-171));
    AddState(1202,new State(new int[]{40,1203}));
    AddState(1203,new State(new int[]{133,15,136,16},new int[]{-9,1204}));
    AddState(1204,new State(new int[]{41,1205}));
    AddState(1205,new State(-172));
    AddState(1206,new State(new int[]{133,15,136,16},new int[]{-9,1207}));
    AddState(1207,new State(new int[]{93,1208}));
    AddState(1208,new State(-178));
    AddState(1209,new State(-156));
    AddState(1210,new State(-143));
    AddState(1211,new State(-144));
    AddState(1212,new State(-145));
    AddState(1213,new State(-146));
    AddState(1214,new State(new int[]{133,15,136,16},new int[]{-9,1215}));
    AddState(1215,new State(-147));
    AddState(1216,new State(new int[]{133,15,136,16},new int[]{-9,1217}));
    AddState(1217,new State(-148));
    AddState(1218,new State(new int[]{123,1219}));
    AddState(1219,new State(-762,new int[]{-102,1220}));
    AddState(1220,new State(new int[]{125,1221,314,1223,263,1225,317,1228,305,874},new int[]{-179,1222,-107,1231,-68,873,-10,893,-69,896,-11,897}));
    AddState(1221,new State(-149));
    AddState(1222,new State(-763));
    AddState(1223,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1224,-2,74}));
    AddState(1224,new State(new int[]{46,72,125,-764,314,-764,263,-764,317,-764,305,-764}));
    AddState(1225,new State(new int[]{323,1226}));
    AddState(1226,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1227,-2,74}));
    AddState(1227,new State(new int[]{46,72,125,-765,314,-765,263,-765,317,-765,305,-765}));
    AddState(1228,new State(new int[]{323,1229}));
    AddState(1229,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1230,-2,74}));
    AddState(1230,new State(new int[]{46,72,125,-766,314,-766,263,-766,317,-766,305,-766}));
    AddState(1231,new State(-767));
    AddState(1232,new State(-752,new int[]{-66,1233}));
    AddState(1233,new State(new int[]{190,1235,189,1236,187,1237,196,1238,129,45,132,46,130,75},new int[]{-1,1234,-2,74}));
    AddState(1234,new State(new int[]{46,72,123,-751}));
    AddState(1235,new State(-753));
    AddState(1236,new State(-754));
    AddState(1237,new State(-755));
    AddState(1238,new State(new int[]{189,1239,190,1240,191,1241,220,1242,221,1243,222,1244}));
    AddState(1239,new State(-756));
    AddState(1240,new State(-757));
    AddState(1241,new State(-758));
    AddState(1242,new State(-759));
    AddState(1243,new State(-760));
    AddState(1244,new State(-761));
    AddState(1245,new State(new int[]{212,1258,91,66,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-50,1246,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1246,new State(new int[]{137,1247}));
    AddState(1247,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,1248,-1,459,-2,74}));
    AddState(1248,new State(new int[]{362,1249}));
    AddState(1249,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,1250,-8,162}));
    AddState(1250,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,1251,-165,93,-128,108,-38,137}));
    AddState(1251,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,60,117},new int[]{-50,1252,-164,116,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1252,new State(new int[]{137,1253}));
    AddState(1253,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,1254,-1,459,-2,74}));
    AddState(1254,new State(new int[]{40,1255}));
    AddState(1255,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,1256,-25,37,-26,115,-13,41}));
    AddState(1256,new State(new int[]{41,1257}));
    AddState(1257,new State(-150));
    AddState(1258,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,1259,-8,162}));
    AddState(1259,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,1260,-165,93,-128,108,-38,137}));
    AddState(1260,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,60,117},new int[]{-50,1261,-164,116,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1261,new State(new int[]{137,1262}));
    AddState(1262,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,1263,-1,459,-2,74}));
    AddState(1263,new State(new int[]{60,924,40,-136},new int[]{-21,1264}));
    AddState(1264,new State(new int[]{40,1265}));
    AddState(1265,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,1266,-25,37,-26,115,-13,41}));
    AddState(1266,new State(new int[]{41,1267}));
    AddState(1267,new State(new int[]{362,1268}));
    AddState(1268,new State(new int[]{212,1269}));
    AddState(1269,new State(new int[]{185,158,200,160,162,163,164,164,170,165,158,170,168,-185,159,-185,182,-185,183,-185,212,-185,33,-185,169,-185,139,-185,184,-185,141,-185,160,-185,140,-185,144,-185,145,-185,146,-185,147,-185,149,-185,150,-185,142,-185,153,-185,154,-185,155,-185,156,-185},new int[]{-7,1270,-8,162}));
    AddState(1270,new State(new int[]{168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155},new int[]{-27,1271,-165,93,-128,108,-38,137}));
    AddState(1271,new State(new int[]{91,465,38,58,42,59,214,60,215,61,216,89,129,45,132,46,130,75,268,85,269,86,270,87,168,94,159,102,182,103,183,106,212,122,33,123,169,129,139,130,184,131,141,138,160,139,140,140,144,141,145,142,146,143,147,144,149,145,150,146,142,147,153,152,154,153,155,154,156,155,60,117},new int[]{-50,1272,-164,116,-49,65,-5,84,-1,76,-2,74,-27,88,-165,93,-128,108,-38,137}));
    AddState(1272,new State(new int[]{137,1273}));
    AddState(1273,new State(new int[]{228,457,229,458,129,45,132,46,130,75},new int[]{-3,1274,-1,459,-2,74}));
    AddState(1274,new State(new int[]{60,924,40,-136},new int[]{-21,1275}));
    AddState(1275,new State(new int[]{40,1276}));
    AddState(1276,new State(new int[]{138,40,41,-481,91,-270,168,-270,159,-270,182,-270,183,-270,212,-270,33,-270,169,-270,139,-270,184,-270,141,-270,160,-270,140,-270,144,-270,145,-270,146,-270,147,-270,149,-270,150,-270,142,-270,153,-270,154,-270,155,-270,156,-270},new int[]{-24,1277,-25,37,-26,115,-13,41}));
    AddState(1277,new State(new int[]{41,1278}));
    AddState(1278,new State(-151));
    AddState(1279,new State(-152));
    AddState(1280,new State(new int[]{219,1281}));
    AddState(1281,new State(new int[]{91,1282,129,45,132,46,130,75},new int[]{-1,1285,-2,74}));
    AddState(1282,new State(new int[]{133,15,136,16},new int[]{-9,1283}));
    AddState(1283,new State(new int[]{93,1284}));
    AddState(1284,new State(-153));
    AddState(1285,new State(new int[]{46,72,125,-154,265,-154,263,-154,277,-154,282,-154,266,-154,267,-154,286,-154,285,-154,302,-154,303,-154,305,-154,307,-154,308,-154,326,-154,361,-154,304,-154,360,-154}));
    AddState(1286,new State(new int[]{323,1287,189,-81,190,-81,182,-81,205,-81,194,-81,195,-81,197,-81,198,-81,199,-81,200,-81,201,-81,202,-81,203,-81,204,-81,217,-81,196,-81,209,-81,186,-81,226,-81,157,-81,129,-81,132,-81,130,-81}));
    AddState(1287,new State(-752,new int[]{-66,1288}));
    AddState(1288,new State(new int[]{190,1235,189,1236,187,1237,196,1238,129,45,132,46,130,75},new int[]{-1,1289,-2,74}));
    AddState(1289,new State(new int[]{46,72,123,-750}));
    AddState(1290,new State(new int[]{123,1291}));
    AddState(1291,new State(-2,new int[]{-84,1292}));
    AddState(1292,new State(new int[]{125,1293,263,1286,264,1294,265,1079,266,1209,267,414,309,1302,302,863,303,864,314,1316,317,1364,324,1428,325,1436,286,520,285,799,305,874,378,1442,379,1444,381,1446,382,1448,304,866},new int[]{-86,3,-87,4,-116,1084,-115,1094,-89,1290,-90,1296,-133,973,-92,1299,-126,1179,-93,1300,-148,338,-94,1301,-95,1314,-172,845,-96,1315,-97,1331,-99,1379,-101,1411,-103,1415,-105,1435,-106,1440,-167,841,-107,1441,-68,873,-10,893,-69,896,-11,897,-108,1450}));
    AddState(1293,new State(-5));
    AddState(1294,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1295,-2,74}));
    AddState(1295,new State(new int[]{46,72,123,-80}));
    AddState(1296,new State(-289,new int[]{-91,1297}));
    AddState(1297,new State(new int[]{125,1298,271,13,272,30,273,31,274,334,275,335,276,336,267,414,250,422,251,426,252,429,253,432,254,437,255,444,256,467,257,475,258,478,259,488,260,495,261,506,262,516,129,45,132,46,286,520,285,799,302,863,303,864,304,866,305,874,326,900,312,906,361,910,123,29,360,930},new int[]{-135,12,-136,17,-140,18,-143,27,-134,33,-93,337,-148,338,-137,420,-70,421,-71,423,-72,427,-73,430,-74,433,-83,438,-75,441,-76,445,-77,468,-78,476,-79,479,-80,489,-81,496,-82,507,-2,517,-106,519,-167,841,-95,844,-172,845,-108,865,-107,872,-68,873,-10,893,-69,896,-11,897,-138,929,-139,24}));
    AddState(1298,new State(-6));
    AddState(1299,new State(-7));
    AddState(1300,new State(-8));
    AddState(1301,new State(-9));
    AddState(1302,new State(new int[]{91,1303}));
    AddState(1303,new State(new int[]{133,15,136,16},new int[]{-9,1304}));
    AddState(1304,new State(new int[]{93,1305}));
    AddState(1305,new State(-74,new int[]{-12,1306}));
    AddState(1306,new State(new int[]{178,1307,146,1309,147,1310,310,1311,311,1312,313,1313}));
    AddState(1307,new State(new int[]{129,45,132,46},new int[]{-2,1308}));
    AddState(1308,new State(-73));
    AddState(1309,new State(-75));
    AddState(1310,new State(-76));
    AddState(1311,new State(-77));
    AddState(1312,new State(-78));
    AddState(1313,new State(-79));
    AddState(1314,new State(-10));
    AddState(1315,new State(-11));
    AddState(1316,new State(new int[]{380,1329,315,-711,129,-711,132,-711,130,-711},new int[]{-63,1317}));
    AddState(1317,new State(new int[]{315,1328,129,45,132,46,130,75},new int[]{-1,1318,-2,74}));
    AddState(1318,new State(new int[]{46,72,275,1324,316,-713,127,-713,263,-713,264,-713,265,-713,266,-713,267,-713,309,-713,302,-713,303,-713,314,-713,317,-713,324,-713,325,-713,286,-713,285,-713,305,-713,378,-713,379,-713,381,-713,382,-713,304,-713,125,-713},new int[]{-64,1319}));
    AddState(1319,new State(new int[]{316,1325,127,-710,263,-710,264,-710,265,-710,266,-710,267,-710,309,-710,302,-710,303,-710,314,-710,317,-710,324,-710,325,-710,286,-710,285,-710,305,-710,378,-710,379,-710,381,-710,382,-710,304,-710,125,-710},new int[]{-173,1320}));
    AddState(1320,new State(new int[]{136,359,41,-376},new int[]{-30,1321,-31,357}));
    AddState(1321,new State(new int[]{41,1322}));
    AddState(1322,new State(new int[]{275,1324,127,-713,263,-713,264,-713,265,-713,266,-713,267,-713,309,-713,302,-713,303,-713,314,-713,317,-713,324,-713,325,-713,286,-713,285,-713,305,-713,378,-713,379,-713,381,-713,382,-713,304,-713,125,-713},new int[]{-64,1323}));
    AddState(1323,new State(-709));
    AddState(1324,new State(-714));
    AddState(1325,new State(new int[]{61,1326}));
    AddState(1326,new State(new int[]{40,1327}));
    AddState(1327,new State(-715));
    AddState(1328,new State(-712));
    AddState(1329,new State(new int[]{133,15,136,16},new int[]{-9,1330}));
    AddState(1330,new State(-21));
    AddState(1331,new State(new int[]{123,1332}));
    AddState(1332,new State(-724,new int[]{-98,1333}));
    AddState(1333,new State(new int[]{125,1334,316,1336,286,520,285,799,321,1340,318,1353,322,1356,305,874},new int[]{-174,1335,-106,1339,-167,841,-175,1350,-176,1360,-107,1363,-68,873,-10,893,-69,896,-11,897}));
    AddState(1334,new State(-12));
    AddState(1335,new State(-725));
    AddState(1336,new State(new int[]{320,1337}));
    AddState(1337,new State(new int[]{133,15,136,16},new int[]{-9,1338}));
    AddState(1338,new State(-726));
    AddState(1339,new State(-727));
    AddState(1340,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1341,-9,1348}));
    AddState(1341,new State(new int[]{58,1342}));
    AddState(1342,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1343,-9,1348}));
    AddState(1343,new State(new int[]{58,1344}));
    AddState(1344,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1345,-9,1348}));
    AddState(1345,new State(new int[]{58,1346}));
    AddState(1346,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1347,-9,1348}));
    AddState(1347,new State(-728));
    AddState(1348,new State(-733));
    AddState(1349,new State(-734));
    AddState(1350,new State(new int[]{136,359,41,-376},new int[]{-30,1351,-31,357}));
    AddState(1351,new State(new int[]{41,1352}));
    AddState(1352,new State(-729));
    AddState(1353,new State(new int[]{61,1354}));
    AddState(1354,new State(new int[]{40,1355}));
    AddState(1355,new State(-735));
    AddState(1356,new State(new int[]{61,1358,131,201},new int[]{-34,1357}));
    AddState(1357,new State(new int[]{43,199,125,-730,316,-730,286,-730,285,-730,321,-730,318,-730,322,-730,305,-730}));
    AddState(1358,new State(new int[]{40,1359}));
    AddState(1359,new State(-737));
    AddState(1360,new State(new int[]{136,359,41,-376},new int[]{-30,1361,-31,357}));
    AddState(1361,new State(new int[]{41,1362}));
    AddState(1362,new State(-731));
    AddState(1363,new State(-732));
    AddState(1364,new State(new int[]{323,1374,211,-717,327,-717,234,-717,329,-717,330,-717,331,-717,129,-717,132,-717,130,-717},new int[]{-65,1365}));
    AddState(1365,new State(new int[]{211,1367,327,1368,234,1370,329,1371,330,1372,331,1373,129,45,132,46,130,75},new int[]{-1,1366,-2,74}));
    AddState(1366,new State(new int[]{46,72,123,-716}));
    AddState(1367,new State(-718));
    AddState(1368,new State(new int[]{328,1369}));
    AddState(1369,new State(-719));
    AddState(1370,new State(-720));
    AddState(1371,new State(-721));
    AddState(1372,new State(-722));
    AddState(1373,new State(-723));
    AddState(1374,new State(-717,new int[]{-65,1375}));
    AddState(1375,new State(new int[]{211,1367,327,1368,234,1370,329,1371,330,1372,331,1373,129,45,132,46,130,75},new int[]{-1,1376,-2,74}));
    AddState(1376,new State(new int[]{245,1377,46,72,123,-738}));
    AddState(1377,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1378,-2,74}));
    AddState(1378,new State(new int[]{46,72,123,-739}));
    AddState(1379,new State(new int[]{123,1380}));
    AddState(1380,new State(-740,new int[]{-100,1381}));
    AddState(1381,new State(new int[]{125,1382,321,1384,319,1395,318,1353,322,1401,305,874,316,1325,198,1410},new int[]{-178,1383,-177,1392,-175,1398,-176,1403,-107,1406,-68,873,-10,893,-69,896,-11,897,-173,1407}));
    AddState(1382,new State(-13));
    AddState(1383,new State(-741));
    AddState(1384,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1385,-9,1348}));
    AddState(1385,new State(new int[]{58,1386}));
    AddState(1386,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1387,-9,1348}));
    AddState(1387,new State(new int[]{58,1388}));
    AddState(1388,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1389,-9,1348}));
    AddState(1389,new State(new int[]{58,1390}));
    AddState(1390,new State(new int[]{133,15,136,16,42,1349},new int[]{-45,1391,-9,1348}));
    AddState(1391,new State(-742));
    AddState(1392,new State(new int[]{136,359,41,-376},new int[]{-30,1393,-31,357}));
    AddState(1393,new State(new int[]{41,1394}));
    AddState(1394,new State(-743));
    AddState(1395,new State(new int[]{61,1396}));
    AddState(1396,new State(new int[]{40,1397}));
    AddState(1397,new State(-736));
    AddState(1398,new State(new int[]{136,359,41,-376},new int[]{-30,1399,-31,357}));
    AddState(1399,new State(new int[]{41,1400}));
    AddState(1400,new State(-744));
    AddState(1401,new State(new int[]{61,1358,131,201},new int[]{-34,1402}));
    AddState(1402,new State(new int[]{43,199,125,-745,321,-745,319,-745,318,-745,322,-745,305,-745,316,-745,198,-745}));
    AddState(1403,new State(new int[]{136,359,41,-376},new int[]{-30,1404,-31,357}));
    AddState(1404,new State(new int[]{41,1405}));
    AddState(1405,new State(-746));
    AddState(1406,new State(-747));
    AddState(1407,new State(new int[]{136,359,41,-376},new int[]{-30,1408,-31,357}));
    AddState(1408,new State(new int[]{41,1409}));
    AddState(1409,new State(-748));
    AddState(1410,new State(-749));
    AddState(1411,new State(new int[]{123,1412}));
    AddState(1412,new State(-762,new int[]{-102,1413}));
    AddState(1413,new State(new int[]{125,1414,314,1223,263,1225,317,1228,305,874},new int[]{-179,1222,-107,1231,-68,873,-10,893,-69,896,-11,897}));
    AddState(1414,new State(-14));
    AddState(1415,new State(new int[]{123,1416}));
    AddState(1416,new State(-773,new int[]{-104,1417}));
    AddState(1417,new State(new int[]{125,1418,314,1420,317,1424,305,874},new int[]{-180,1419,-107,1427,-68,873,-10,893,-69,896,-11,897}));
    AddState(1418,new State(-15));
    AddState(1419,new State(-774));
    AddState(1420,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1421,-2,74}));
    AddState(1421,new State(new int[]{178,1422,46,72}));
    AddState(1422,new State(new int[]{133,15,136,16},new int[]{-9,1423}));
    AddState(1423,new State(-775));
    AddState(1424,new State(new int[]{323,1425}));
    AddState(1425,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1426,-2,74}));
    AddState(1426,new State(new int[]{46,72,125,-776,314,-776,317,-776,305,-776}));
    AddState(1427,new State(-777));
    AddState(1428,new State(-770,new int[]{-67,1429}));
    AddState(1429,new State(new int[]{189,1433,190,1434,129,45,132,46,130,75},new int[]{-1,1430,-2,74}));
    AddState(1430,new State(new int[]{245,1431,46,72,123,-768}));
    AddState(1431,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1432,-2,74}));
    AddState(1432,new State(new int[]{46,72,123,-769}));
    AddState(1433,new State(-771));
    AddState(1434,new State(-772));
    AddState(1435,new State(-16));
    AddState(1436,new State(new int[]{323,1438,129,45,132,46,130,75,127,-70,263,-70,264,-70,265,-70,266,-70,267,-70,309,-70,302,-70,303,-70,314,-70,317,-70,324,-70,325,-70,286,-70,285,-70,305,-70,378,-70,379,-70,381,-70,382,-70,304,-70,125,-70},new int[]{-1,1437,-2,74}));
    AddState(1437,new State(new int[]{46,72,127,-71,263,-71,264,-71,265,-71,266,-71,267,-71,309,-71,302,-71,303,-71,314,-71,317,-71,324,-71,325,-71,286,-71,285,-71,305,-71,378,-71,379,-71,381,-71,382,-71,304,-71,125,-71}));
    AddState(1438,new State(new int[]{129,45,132,46,130,75},new int[]{-1,1439,-2,74}));
    AddState(1439,new State(new int[]{46,72,127,-72,263,-72,264,-72,265,-72,266,-72,267,-72,309,-72,302,-72,303,-72,314,-72,317,-72,324,-72,325,-72,286,-72,285,-72,305,-72,378,-72,379,-72,381,-72,382,-72,304,-72,125,-72}));
    AddState(1440,new State(-17));
    AddState(1441,new State(-18));
    AddState(1442,new State(new int[]{133,15,136,16},new int[]{-9,1443}));
    AddState(1443,new State(-19));
    AddState(1444,new State(new int[]{133,15,136,16},new int[]{-9,1445}));
    AddState(1445,new State(-20));
    AddState(1446,new State(new int[]{134,379,133,380},new int[]{-23,1447}));
    AddState(1447,new State(-22));
    AddState(1448,new State(new int[]{134,379,133,380},new int[]{-23,1449}));
    AddState(1449,new State(-23));
    AddState(1450,new State(-24));

    rules=new Rule[778];
    rules[1]=new Rule(-85, new int[]{-84,127});
    rules[2]=new Rule(-84, new int[]{});
    rules[3]=new Rule(-84, new int[]{-84,-86});
    rules[4]=new Rule(-86, new int[]{-87,123,-88,125});
    rules[5]=new Rule(-86, new int[]{-89,123,-84,125});
    rules[6]=new Rule(-86, new int[]{-90,-91,125});
    rules[7]=new Rule(-86, new int[]{-92});
    rules[8]=new Rule(-86, new int[]{-93});
    rules[9]=new Rule(-86, new int[]{-94});
    rules[10]=new Rule(-86, new int[]{-95});
    rules[11]=new Rule(-86, new int[]{-96});
    rules[12]=new Rule(-86, new int[]{-97,123,-98,125});
    rules[13]=new Rule(-86, new int[]{-99,123,-100,125});
    rules[14]=new Rule(-86, new int[]{-101,123,-102,125});
    rules[15]=new Rule(-86, new int[]{-103,123,-104,125});
    rules[16]=new Rule(-86, new int[]{-105});
    rules[17]=new Rule(-86, new int[]{-106});
    rules[18]=new Rule(-86, new int[]{-107});
    rules[19]=new Rule(-86, new int[]{378,-9});
    rules[20]=new Rule(-86, new int[]{379,-9});
    rules[21]=new Rule(-86, new int[]{314,380,-9});
    rules[22]=new Rule(-86, new int[]{381,-23});
    rules[23]=new Rule(-86, new int[]{382,-23});
    rules[24]=new Rule(-86, new int[]{-108});
    rules[25]=new Rule(-34, new int[]{131});
    rules[26]=new Rule(-34, new int[]{-34,43,131});
    rules[27]=new Rule(-108, new int[]{304,132});
    rules[28]=new Rule(-108, new int[]{304,132,44,132});
    rules[29]=new Rule(-108, new int[]{304,132,44,132,44,132});
    rules[30]=new Rule(-2, new int[]{129});
    rules[31]=new Rule(-2, new int[]{132});
    rules[32]=new Rule(-1, new int[]{-2});
    rules[33]=new Rule(-1, new int[]{130});
    rules[34]=new Rule(-1, new int[]{-1,46,-1});
    rules[35]=new Rule(-9, new int[]{133});
    rules[36]=new Rule(-9, new int[]{136});
    rules[37]=new Rule(-23, new int[]{134});
    rules[38]=new Rule(-23, new int[]{133});
    rules[39]=new Rule(-22, new int[]{135});
    rules[40]=new Rule(-22, new int[]{149,40,-9,41});
    rules[41]=new Rule(-22, new int[]{150,40,-23,41});
    rules[42]=new Rule(-107, new int[]{-68});
    rules[43]=new Rule(-107, new int[]{-69});
    rules[44]=new Rule(-68, new int[]{305,-52});
    rules[45]=new Rule(-68, new int[]{-10,-30,41});
    rules[46]=new Rule(-68, new int[]{305,-52,61,-34});
    rules[47]=new Rule(-68, new int[]{305,-52,61,123,-109,125});
    rules[48]=new Rule(-69, new int[]{305,40,-51,41,-52});
    rules[49]=new Rule(-69, new int[]{-11,-30,41});
    rules[50]=new Rule(-69, new int[]{305,40,-51,41,-52,61,-34});
    rules[51]=new Rule(-69, new int[]{305,40,-51,41,-52,61,123,-109,125});
    rules[52]=new Rule(-10, new int[]{305,-52,61,40});
    rules[53]=new Rule(-11, new int[]{305,40,-51,41,-52,61,40});
    rules[54]=new Rule(-52, new int[]{-54});
    rules[55]=new Rule(-51, new int[]{-50});
    rules[56]=new Rule(-51, new int[]{-53});
    rules[57]=new Rule(-109, new int[]{-110,-111});
    rules[58]=new Rule(-110, new int[]{});
    rules[59]=new Rule(-110, new int[]{-110,-112});
    rules[60]=new Rule(-111, new int[]{});
    rules[61]=new Rule(-111, new int[]{-111,-113,-114,-1,61,-112});
    rules[62]=new Rule(-113, new int[]{213});
    rules[63]=new Rule(-113, new int[]{218});
    rules[64]=new Rule(-114, new int[]{-38});
    rules[65]=new Rule(-114, new int[]{219});
    rules[66]=new Rule(-114, new int[]{159});
    rules[67]=new Rule(-114, new int[]{205,168,132});
    rules[68]=new Rule(-114, new int[]{205,-49});
    rules[69]=new Rule(-114, new int[]{-114,91,93});
    rules[70]=new Rule(-105, new int[]{325});
    rules[71]=new Rule(-105, new int[]{325,-1});
    rules[72]=new Rule(-105, new int[]{325,323,-1});
    rules[73]=new Rule(-94, new int[]{309,91,-9,93,-12,178,-2});
    rules[74]=new Rule(-12, new int[]{});
    rules[75]=new Rule(-12, new int[]{-12,146});
    rules[76]=new Rule(-12, new int[]{-12,147});
    rules[77]=new Rule(-12, new int[]{-12,310});
    rules[78]=new Rule(-12, new int[]{-12,311});
    rules[79]=new Rule(-12, new int[]{-12,313});
    rules[80]=new Rule(-89, new int[]{264,-1});
    rules[81]=new Rule(-115, new int[]{263});
    rules[82]=new Rule(-116, new int[]{-115,-55,-1,-48});
    rules[83]=new Rule(-87, new int[]{-116,-117,-118});
    rules[84]=new Rule(-55, new int[]{});
    rules[85]=new Rule(-55, new int[]{-55,189});
    rules[86]=new Rule(-55, new int[]{-55,190});
    rules[87]=new Rule(-55, new int[]{-55,182});
    rules[88]=new Rule(-55, new int[]{-55,205});
    rules[89]=new Rule(-55, new int[]{-55,194});
    rules[90]=new Rule(-55, new int[]{-55,195});
    rules[91]=new Rule(-55, new int[]{-55,197});
    rules[92]=new Rule(-55, new int[]{-55,198});
    rules[93]=new Rule(-55, new int[]{-55,199});
    rules[94]=new Rule(-55, new int[]{-55,200});
    rules[95]=new Rule(-55, new int[]{-55,201});
    rules[96]=new Rule(-55, new int[]{-55,202});
    rules[97]=new Rule(-55, new int[]{-55,203});
    rules[98]=new Rule(-55, new int[]{-55,204});
    rules[99]=new Rule(-55, new int[]{-55,217});
    rules[100]=new Rule(-55, new int[]{-55,196,189});
    rules[101]=new Rule(-55, new int[]{-55,196,190});
    rules[102]=new Rule(-55, new int[]{-55,196,191});
    rules[103]=new Rule(-55, new int[]{-55,196,220});
    rules[104]=new Rule(-55, new int[]{-55,196,221});
    rules[105]=new Rule(-55, new int[]{-55,196,222});
    rules[106]=new Rule(-55, new int[]{-55,209});
    rules[107]=new Rule(-55, new int[]{-55,186});
    rules[108]=new Rule(-55, new int[]{-55,226});
    rules[109]=new Rule(-55, new int[]{-55,157,40,-9,41});
    rules[110]=new Rule(-117, new int[]{});
    rules[111]=new Rule(-117, new int[]{175,-50});
    rules[112]=new Rule(-118, new int[]{});
    rules[113]=new Rule(-118, new int[]{176,-119});
    rules[114]=new Rule(-88, new int[]{});
    rules[115]=new Rule(-88, new int[]{-88,-120});
    rules[116]=new Rule(-119, new int[]{-119,44,-50});
    rules[117]=new Rule(-119, new int[]{-50});
    rules[118]=new Rule(-42, new int[]{});
    rules[119]=new Rule(-42, new int[]{-43});
    rules[120]=new Rule(-43, new int[]{-50});
    rules[121]=new Rule(-43, new int[]{-43,44,-50});
    rules[122]=new Rule(-48, new int[]{});
    rules[123]=new Rule(-48, new int[]{60,-46,62});
    rules[124]=new Rule(-18, new int[]{43});
    rules[125]=new Rule(-18, new int[]{45});
    rules[126]=new Rule(-18, new int[]{168});
    rules[127]=new Rule(-18, new int[]{183});
    rules[128]=new Rule(-18, new int[]{228});
    rules[129]=new Rule(-19, new int[]{});
    rules[130]=new Rule(-19, new int[]{-19,-18});
    rules[131]=new Rule(-46, new int[]{-47});
    rules[132]=new Rule(-46, new int[]{-46,44,-47});
    rules[133]=new Rule(-47, new int[]{-19,-44,-1});
    rules[134]=new Rule(-47, new int[]{-19,-1});
    rules[135]=new Rule(-44, new int[]{40,-42,41});
    rules[136]=new Rule(-21, new int[]{});
    rules[137]=new Rule(-21, new int[]{60,91,-9,93,62});
    rules[138]=new Rule(-120, new int[]{-90,-91,125});
    rules[139]=new Rule(-120, new int[]{-87,123,-88,125});
    rules[140]=new Rule(-120, new int[]{-121,123,-122,125});
    rules[141]=new Rule(-120, new int[]{-123,123,-124,125});
    rules[142]=new Rule(-120, new int[]{-92});
    rules[143]=new Rule(-120, new int[]{-93});
    rules[144]=new Rule(-120, new int[]{-106});
    rules[145]=new Rule(-120, new int[]{-95});
    rules[146]=new Rule(-120, new int[]{-107});
    rules[147]=new Rule(-120, new int[]{307,-9});
    rules[148]=new Rule(-120, new int[]{308,-9});
    rules[149]=new Rule(-120, new int[]{-125,123,-102,125});
    rules[150]=new Rule(-120, new int[]{361,-50,137,-3,362,-7,-27,-50,137,-3,40,-24,41});
    rules[151]=new Rule(-120, new int[]{361,212,-7,-27,-50,137,-3,-21,40,-24,41,362,212,-7,-27,-50,137,-3,-21,40,-24,41});
    rules[152]=new Rule(-120, new int[]{-108});
    rules[153]=new Rule(-120, new int[]{360,219,91,-9,93});
    rules[154]=new Rule(-120, new int[]{360,219,-1});
    rules[155]=new Rule(-92, new int[]{-126,-16,-57,-27,-1,-4,-33});
    rules[156]=new Rule(-126, new int[]{266});
    rules[157]=new Rule(-57, new int[]{});
    rules[158]=new Rule(-57, new int[]{-57,188});
    rules[159]=new Rule(-57, new int[]{-57,189});
    rules[160]=new Rule(-57, new int[]{-57,190});
    rules[161]=new Rule(-57, new int[]{-57,191});
    rules[162]=new Rule(-57, new int[]{-57,232});
    rules[163]=new Rule(-57, new int[]{-57,226});
    rules[164]=new Rule(-57, new int[]{-57,186});
    rules[165]=new Rule(-57, new int[]{-57,-35});
    rules[166]=new Rule(-57, new int[]{-57,220});
    rules[167]=new Rule(-57, new int[]{-57,221});
    rules[168]=new Rule(-57, new int[]{-57,222});
    rules[169]=new Rule(-57, new int[]{-57,223});
    rules[170]=new Rule(-57, new int[]{-57,230});
    rules[171]=new Rule(-57, new int[]{-57,231});
    rules[172]=new Rule(-57, new int[]{-57,157,40,-9,41});
    rules[173]=new Rule(-4, new int[]{});
    rules[174]=new Rule(-4, new int[]{178,-2});
    rules[175]=new Rule(-33, new int[]{});
    rules[176]=new Rule(-33, new int[]{61,-36});
    rules[177]=new Rule(-16, new int[]{});
    rules[178]=new Rule(-16, new int[]{91,-9,93});
    rules[179]=new Rule(-54, new int[]{-7,-27,-50,137,-3,-39,40,-24,41});
    rules[180]=new Rule(-54, new int[]{-7,-27,-3,-39,40,-24,41});
    rules[181]=new Rule(-7, new int[]{185,-7});
    rules[182]=new Rule(-7, new int[]{200,-7});
    rules[183]=new Rule(-7, new int[]{-8});
    rules[184]=new Rule(-7, new int[]{158,40,-9,41});
    rules[185]=new Rule(-8, new int[]{});
    rules[186]=new Rule(-8, new int[]{162});
    rules[187]=new Rule(-8, new int[]{164});
    rules[188]=new Rule(-8, new int[]{170,163});
    rules[189]=new Rule(-8, new int[]{170,165});
    rules[190]=new Rule(-8, new int[]{170,166});
    rules[191]=new Rule(-8, new int[]{170,167});
    rules[192]=new Rule(-127, new int[]{-27,-50,137,-1});
    rules[193]=new Rule(-127, new int[]{-27,-1});
    rules[194]=new Rule(-53, new int[]{-128,-54});
    rules[195]=new Rule(-53, new int[]{213,-127});
    rules[196]=new Rule(-121, new int[]{-129,-59,-50,-1});
    rules[197]=new Rule(-121, new int[]{-129,-59,-1});
    rules[198]=new Rule(-129, new int[]{277});
    rules[199]=new Rule(-59, new int[]{});
    rules[200]=new Rule(-59, new int[]{-59,226});
    rules[201]=new Rule(-59, new int[]{-59,186});
    rules[202]=new Rule(-122, new int[]{});
    rules[203]=new Rule(-122, new int[]{-122,-130});
    rules[204]=new Rule(-130, new int[]{278,-54});
    rules[205]=new Rule(-130, new int[]{279,-54});
    rules[206]=new Rule(-130, new int[]{280,-54});
    rules[207]=new Rule(-130, new int[]{281,-54});
    rules[208]=new Rule(-130, new int[]{-95});
    rules[209]=new Rule(-130, new int[]{-107});
    rules[210]=new Rule(-130, new int[]{-108});
    rules[211]=new Rule(-123, new int[]{-131,-60,-7,-27,-1,40,-24,41,-33});
    rules[212]=new Rule(-131, new int[]{282});
    rules[213]=new Rule(-60, new int[]{});
    rules[214]=new Rule(-60, new int[]{-60,226});
    rules[215]=new Rule(-60, new int[]{-60,186});
    rules[216]=new Rule(-124, new int[]{});
    rules[217]=new Rule(-124, new int[]{-124,-132});
    rules[218]=new Rule(-132, new int[]{283,-54});
    rules[219]=new Rule(-132, new int[]{284,-54});
    rules[220]=new Rule(-132, new int[]{281,-54});
    rules[221]=new Rule(-132, new int[]{-107});
    rules[222]=new Rule(-132, new int[]{-95});
    rules[223]=new Rule(-132, new int[]{-108});
    rules[224]=new Rule(-133, new int[]{265});
    rules[225]=new Rule(-35, new int[]{});
    rules[226]=new Rule(-35, new int[]{332,40,-32,41});
    rules[227]=new Rule(-90, new int[]{-133,-56,-7,-13,-27,-35,-3,-48,40,-24,41,-58,123});
    rules[228]=new Rule(-56, new int[]{});
    rules[229]=new Rule(-56, new int[]{-56,188});
    rules[230]=new Rule(-56, new int[]{-56,189});
    rules[231]=new Rule(-56, new int[]{-56,190});
    rules[232]=new Rule(-56, new int[]{-56,191});
    rules[233]=new Rule(-56, new int[]{-56,192});
    rules[234]=new Rule(-56, new int[]{-56,186});
    rules[235]=new Rule(-56, new int[]{-56,206});
    rules[236]=new Rule(-56, new int[]{-56,210});
    rules[237]=new Rule(-56, new int[]{-56,197});
    rules[238]=new Rule(-56, new int[]{-56,220});
    rules[239]=new Rule(-56, new int[]{-56,221});
    rules[240]=new Rule(-56, new int[]{-56,222});
    rules[241]=new Rule(-56, new int[]{-56,223});
    rules[242]=new Rule(-56, new int[]{-56,224});
    rules[243]=new Rule(-56, new int[]{-56,225});
    rules[244]=new Rule(-56, new int[]{-56,226});
    rules[245]=new Rule(-56, new int[]{-56,208});
    rules[246]=new Rule(-56, new int[]{-56,233});
    rules[247]=new Rule(-56, new int[]{-56,157,40,-9,41});
    rules[248]=new Rule(-56, new int[]{-56,227,40,-34,245,-34,-61,41});
    rules[249]=new Rule(-56, new int[]{-56,227,40,-34,-61,41});
    rules[250]=new Rule(-56, new int[]{-56,227,40,-61,41});
    rules[251]=new Rule(-61, new int[]{});
    rules[252]=new Rule(-61, new int[]{-61,242});
    rules[253]=new Rule(-61, new int[]{-61,201});
    rules[254]=new Rule(-61, new int[]{-61,202});
    rules[255]=new Rule(-61, new int[]{-61,203});
    rules[256]=new Rule(-61, new int[]{-61,243});
    rules[257]=new Rule(-61, new int[]{-61,244});
    rules[258]=new Rule(-61, new int[]{-61,163});
    rules[259]=new Rule(-61, new int[]{-61,165});
    rules[260]=new Rule(-61, new int[]{-61,166});
    rules[261]=new Rule(-61, new int[]{-61,167});
    rules[262]=new Rule(-61, new int[]{-61,246,58,247});
    rules[263]=new Rule(-61, new int[]{-61,246,58,248});
    rules[264]=new Rule(-61, new int[]{-61,249,58,247});
    rules[265]=new Rule(-61, new int[]{-61,249,58,248});
    rules[266]=new Rule(-61, new int[]{-61,157,40,-9,41});
    rules[267]=new Rule(-3, new int[]{228});
    rules[268]=new Rule(-3, new int[]{229});
    rules[269]=new Rule(-3, new int[]{-1});
    rules[270]=new Rule(-13, new int[]{});
    rules[271]=new Rule(-13, new int[]{-13,91,357,93});
    rules[272]=new Rule(-13, new int[]{-13,91,358,93});
    rules[273]=new Rule(-13, new int[]{-13,91,359,93});
    rules[274]=new Rule(-13, new int[]{-13,91,-9,93});
    rules[275]=new Rule(-58, new int[]{});
    rules[276]=new Rule(-58, new int[]{-58,184});
    rules[277]=new Rule(-58, new int[]{-58,234});
    rules[278]=new Rule(-58, new int[]{-58,235});
    rules[279]=new Rule(-58, new int[]{-58,236});
    rules[280]=new Rule(-58, new int[]{-58,170});
    rules[281]=new Rule(-58, new int[]{-58,237});
    rules[282]=new Rule(-58, new int[]{-58,238});
    rules[283]=new Rule(-58, new int[]{-58,239});
    rules[284]=new Rule(-58, new int[]{-58,240});
    rules[285]=new Rule(-58, new int[]{-58,193});
    rules[286]=new Rule(-58, new int[]{-58,207});
    rules[287]=new Rule(-58, new int[]{-58,157,40,-9,41});
    rules[288]=new Rule(-134, new int[]{274});
    rules[289]=new Rule(-91, new int[]{});
    rules[290]=new Rule(-91, new int[]{-91,-135});
    rules[291]=new Rule(-135, new int[]{271,-9});
    rules[292]=new Rule(-135, new int[]{-136});
    rules[293]=new Rule(-135, new int[]{273,-9});
    rules[294]=new Rule(-135, new int[]{-134,40,-24,41});
    rules[295]=new Rule(-135, new int[]{-134,306,40,-24,41});
    rules[296]=new Rule(-135, new int[]{275});
    rules[297]=new Rule(-135, new int[]{276});
    rules[298]=new Rule(-135, new int[]{-93});
    rules[299]=new Rule(-135, new int[]{-137});
    rules[300]=new Rule(-135, new int[]{-2,58});
    rules[301]=new Rule(-135, new int[]{-106});
    rules[302]=new Rule(-135, new int[]{-95});
    rules[303]=new Rule(-135, new int[]{-108});
    rules[304]=new Rule(-135, new int[]{-107});
    rules[305]=new Rule(-135, new int[]{326,91,-9,93});
    rules[306]=new Rule(-135, new int[]{326,91,-9,93,245,-2});
    rules[307]=new Rule(-135, new int[]{312,-9,58,-9});
    rules[308]=new Rule(-135, new int[]{361,-50,137,-3});
    rules[309]=new Rule(-135, new int[]{361,212,-7,-27,-50,137,-3,-21,40,-24,41});
    rules[310]=new Rule(-135, new int[]{-138});
    rules[311]=new Rule(-135, new int[]{360,219,91,-9,93});
    rules[312]=new Rule(-135, new int[]{360,219,-1});
    rules[313]=new Rule(-135, new int[]{360,91,-9,93,-33});
    rules[314]=new Rule(-138, new int[]{-139,-91,125});
    rules[315]=new Rule(-139, new int[]{123});
    rules[316]=new Rule(-136, new int[]{-140,-141});
    rules[317]=new Rule(-141, new int[]{-142,-141});
    rules[318]=new Rule(-141, new int[]{-142});
    rules[319]=new Rule(-140, new int[]{-143,-138});
    rules[320]=new Rule(-143, new int[]{272});
    rules[321]=new Rule(-142, new int[]{-144,-138});
    rules[322]=new Rule(-142, new int[]{-145,-138});
    rules[323]=new Rule(-142, new int[]{-146,-138});
    rules[324]=new Rule(-142, new int[]{-147,-138});
    rules[325]=new Rule(-145, new int[]{173});
    rules[326]=new Rule(-144, new int[]{172,-50});
    rules[327]=new Rule(-146, new int[]{171});
    rules[328]=new Rule(-147, new int[]{174});
    rules[329]=new Rule(-93, new int[]{-148,-149});
    rules[330]=new Rule(-148, new int[]{267,-150,-2,61});
    rules[331]=new Rule(-148, new int[]{267,-150});
    rules[332]=new Rule(-150, new int[]{});
    rules[333]=new Rule(-150, new int[]{179});
    rules[334]=new Rule(-150, new int[]{234});
    rules[335]=new Rule(-149, new int[]{123,-151,125});
    rules[336]=new Rule(-149, new int[]{-152});
    rules[337]=new Rule(-151, new int[]{-151,44,-152});
    rules[338]=new Rule(-151, new int[]{-152});
    rules[339]=new Rule(-14, new int[]{});
    rules[340]=new Rule(-14, new int[]{91,-9,93});
    rules[341]=new Rule(-152, new int[]{141,42,40,-34,41});
    rules[342]=new Rule(-152, new int[]{38,40,-2,41});
    rules[343]=new Rule(-152, new int[]{-153,-30,41});
    rules[344]=new Rule(-152, new int[]{149,40,-22,41,-14});
    rules[345]=new Rule(-152, new int[]{150,40,-22,41,-14});
    rules[346]=new Rule(-152, new int[]{147,40,-23,41,-14});
    rules[347]=new Rule(-152, new int[]{146,40,-9,41,-14});
    rules[348]=new Rule(-152, new int[]{145,40,-9,41,-14});
    rules[349]=new Rule(-152, new int[]{144,40,-9,41,-14});
    rules[350]=new Rule(-152, new int[]{149,-14});
    rules[351]=new Rule(-152, new int[]{150,-14});
    rules[352]=new Rule(-152, new int[]{147,-14});
    rules[353]=new Rule(-152, new int[]{146,-14});
    rules[354]=new Rule(-152, new int[]{145,-14});
    rules[355]=new Rule(-152, new int[]{144,-14});
    rules[356]=new Rule(-37, new int[]{149,40,-22,41});
    rules[357]=new Rule(-37, new int[]{150,40,-22,41});
    rules[358]=new Rule(-37, new int[]{149,40,-9,41});
    rules[359]=new Rule(-37, new int[]{150,40,-23,41});
    rules[360]=new Rule(-37, new int[]{147,40,-23,41});
    rules[361]=new Rule(-37, new int[]{146,40,-9,41});
    rules[362]=new Rule(-37, new int[]{145,40,-9,41});
    rules[363]=new Rule(-37, new int[]{144,40,-9,41});
    rules[364]=new Rule(-37, new int[]{142,147,40,-23,41});
    rules[365]=new Rule(-37, new int[]{142,146,40,-9,41});
    rules[366]=new Rule(-37, new int[]{142,145,40,-9,41});
    rules[367]=new Rule(-37, new int[]{142,144,40,-9,41});
    rules[368]=new Rule(-37, new int[]{156,40,-23,41});
    rules[369]=new Rule(-37, new int[]{155,40,-9,41});
    rules[370]=new Rule(-37, new int[]{154,40,-9,41});
    rules[371]=new Rule(-37, new int[]{153,40,-9,41});
    rules[372]=new Rule(-37, new int[]{141,40,-9,41});
    rules[373]=new Rule(-37, new int[]{140,40,-17,41});
    rules[374]=new Rule(-37, new int[]{-153,-30,41});
    rules[375]=new Rule(-153, new int[]{151,40});
    rules[376]=new Rule(-30, new int[]{});
    rules[377]=new Rule(-30, new int[]{-31});
    rules[378]=new Rule(-31, new int[]{136});
    rules[379]=new Rule(-31, new int[]{-31,136});
    rules[380]=new Rule(-36, new int[]{-37});
    rules[381]=new Rule(-36, new int[]{-34});
    rules[382]=new Rule(-36, new int[]{161});
    rules[383]=new Rule(-112, new int[]{-37});
    rules[384]=new Rule(-112, new int[]{160,40,161,41});
    rules[385]=new Rule(-112, new int[]{160,40,132,41});
    rules[386]=new Rule(-112, new int[]{219,40,168,132,41});
    rules[387]=new Rule(-112, new int[]{219,40,-49,41});
    rules[388]=new Rule(-112, new int[]{219,40,161,41});
    rules[389]=new Rule(-112, new int[]{159,40,-112,41});
    rules[390]=new Rule(-112, new int[]{149,91,-9,93,40,-154,41});
    rules[391]=new Rule(-112, new int[]{150,91,-9,93,40,-155,41});
    rules[392]=new Rule(-112, new int[]{147,91,-9,93,40,-156,41});
    rules[393]=new Rule(-112, new int[]{146,91,-9,93,40,-157,41});
    rules[394]=new Rule(-112, new int[]{145,91,-9,93,40,-158,41});
    rules[395]=new Rule(-112, new int[]{144,91,-9,93,40,-159,41});
    rules[396]=new Rule(-112, new int[]{156,91,-9,93,40,-156,41});
    rules[397]=new Rule(-112, new int[]{155,91,-9,93,40,-157,41});
    rules[398]=new Rule(-112, new int[]{154,91,-9,93,40,-158,41});
    rules[399]=new Rule(-112, new int[]{153,91,-9,93,40,-159,41});
    rules[400]=new Rule(-112, new int[]{142,147,91,-9,93,40,-156,41});
    rules[401]=new Rule(-112, new int[]{142,146,91,-9,93,40,-157,41});
    rules[402]=new Rule(-112, new int[]{142,145,91,-9,93,40,-158,41});
    rules[403]=new Rule(-112, new int[]{142,144,91,-9,93,40,-159,41});
    rules[404]=new Rule(-112, new int[]{141,91,-9,93,40,-158,41});
    rules[405]=new Rule(-112, new int[]{140,91,-9,93,40,-160,41});
    rules[406]=new Rule(-112, new int[]{160,91,-9,93,40,-161,41});
    rules[407]=new Rule(-112, new int[]{219,91,-9,93,40,-162,41});
    rules[408]=new Rule(-112, new int[]{159,91,-9,93,40,-163,41});
    rules[409]=new Rule(-154, new int[]{});
    rules[410]=new Rule(-154, new int[]{-154,-22});
    rules[411]=new Rule(-154, new int[]{-154,-9});
    rules[412]=new Rule(-155, new int[]{});
    rules[413]=new Rule(-155, new int[]{-155,-22});
    rules[414]=new Rule(-155, new int[]{-155,-23});
    rules[415]=new Rule(-156, new int[]{});
    rules[416]=new Rule(-156, new int[]{-156,-23});
    rules[417]=new Rule(-157, new int[]{});
    rules[418]=new Rule(-157, new int[]{-157,-9});
    rules[419]=new Rule(-158, new int[]{});
    rules[420]=new Rule(-158, new int[]{-158,-9});
    rules[421]=new Rule(-159, new int[]{});
    rules[422]=new Rule(-159, new int[]{-159,-9});
    rules[423]=new Rule(-160, new int[]{});
    rules[424]=new Rule(-160, new int[]{-160,-17});
    rules[425]=new Rule(-161, new int[]{});
    rules[426]=new Rule(-161, new int[]{-161,161});
    rules[427]=new Rule(-161, new int[]{-161,132});
    rules[428]=new Rule(-162, new int[]{});
    rules[429]=new Rule(-162, new int[]{-162,161});
    rules[430]=new Rule(-162, new int[]{-162,168,132});
    rules[431]=new Rule(-162, new int[]{-162,-49});
    rules[432]=new Rule(-163, new int[]{});
    rules[433]=new Rule(-163, new int[]{-163,-112});
    rules[434]=new Rule(-128, new int[]{212});
    rules[435]=new Rule(-70, new int[]{250});
    rules[436]=new Rule(-71, new int[]{251});
    rules[437]=new Rule(-72, new int[]{252});
    rules[438]=new Rule(-73, new int[]{253});
    rules[439]=new Rule(-74, new int[]{254});
    rules[440]=new Rule(-75, new int[]{255});
    rules[441]=new Rule(-76, new int[]{256});
    rules[442]=new Rule(-77, new int[]{257});
    rules[443]=new Rule(-78, new int[]{258});
    rules[444]=new Rule(-79, new int[]{259});
    rules[445]=new Rule(-80, new int[]{260});
    rules[446]=new Rule(-81, new int[]{261});
    rules[447]=new Rule(-82, new int[]{262});
    rules[448]=new Rule(-83, new int[]{-74,40});
    rules[449]=new Rule(-137, new int[]{-70});
    rules[450]=new Rule(-137, new int[]{-71,-9});
    rules[451]=new Rule(-137, new int[]{-71,-2});
    rules[452]=new Rule(-137, new int[]{-72,-9});
    rules[453]=new Rule(-137, new int[]{-73,-23});
    rules[454]=new Rule(-137, new int[]{-74,-22});
    rules[455]=new Rule(-137, new int[]{-74,-23});
    rules[456]=new Rule(-137, new int[]{-83,-30,41});
    rules[457]=new Rule(-137, new int[]{-75,-9});
    rules[458]=new Rule(-137, new int[]{-75,-2});
    rules[459]=new Rule(-137, new int[]{-76,-54});
    rules[460]=new Rule(-137, new int[]{-77,-127});
    rules[461]=new Rule(-137, new int[]{-78,-50});
    rules[462]=new Rule(-137, new int[]{-79,-34});
    rules[463]=new Rule(-137, new int[]{-79,201,40,-34,41});
    rules[464]=new Rule(-137, new int[]{-79,-153,-30,41});
    rules[465]=new Rule(-137, new int[]{-80,-7,-27,40,-24,41});
    rules[466]=new Rule(-137, new int[]{-81,-51});
    rules[467]=new Rule(-137, new int[]{-82,40,-6,41});
    rules[468]=new Rule(-6, new int[]{});
    rules[469]=new Rule(-6, new int[]{-6,44,-2});
    rules[470]=new Rule(-6, new int[]{-6,44,-9});
    rules[471]=new Rule(-6, new int[]{-2});
    rules[472]=new Rule(-6, new int[]{-9});
    rules[473]=new Rule(-39, new int[]{});
    rules[474]=new Rule(-39, new int[]{-164});
    rules[475]=new Rule(-164, new int[]{60,-40,62});
    rules[476]=new Rule(-40, new int[]{});
    rules[477]=new Rule(-40, new int[]{-27});
    rules[478]=new Rule(-40, new int[]{-41});
    rules[479]=new Rule(-41, new int[]{-40,44,-27});
    rules[480]=new Rule(-41, new int[]{-40,44});
    rules[481]=new Rule(-24, new int[]{});
    rules[482]=new Rule(-24, new int[]{-25});
    rules[483]=new Rule(-25, new int[]{-26});
    rules[484]=new Rule(-25, new int[]{-25,44,-26});
    rules[485]=new Rule(-26, new int[]{138});
    rules[486]=new Rule(-26, new int[]{-13,-27,-35});
    rules[487]=new Rule(-26, new int[]{-13,-27,-35,-2});
    rules[488]=new Rule(-49, new int[]{91,-1,93,-5});
    rules[489]=new Rule(-49, new int[]{91,42,93,-5});
    rules[490]=new Rule(-49, new int[]{91,325,-1,93,-5});
    rules[491]=new Rule(-49, new int[]{-5});
    rules[492]=new Rule(-49, new int[]{268});
    rules[493]=new Rule(-49, new int[]{269});
    rules[494]=new Rule(-49, new int[]{270});
    rules[495]=new Rule(-5, new int[]{-1});
    rules[496]=new Rule(-5, new int[]{-5,47,-1});
    rules[497]=new Rule(-50, new int[]{-49});
    rules[498]=new Rule(-50, new int[]{91,-1,93});
    rules[499]=new Rule(-50, new int[]{91,325,-1,93});
    rules[500]=new Rule(-50, new int[]{-27});
    rules[501]=new Rule(-32, new int[]{});
    rules[502]=new Rule(-32, new int[]{333,40,-34,44,-34,44,-34,44,-34,41});
    rules[503]=new Rule(-32, new int[]{333,40,-34,44,-34,41});
    rules[504]=new Rule(-32, new int[]{335,334,91,-9,93});
    rules[505]=new Rule(-32, new int[]{335,354,91,-9,93,-32});
    rules[506]=new Rule(-32, new int[]{336});
    rules[507]=new Rule(-32, new int[]{337});
    rules[508]=new Rule(-32, new int[]{338});
    rules[509]=new Rule(-32, new int[]{139});
    rules[510]=new Rule(-32, new int[]{140});
    rules[511]=new Rule(-32, new int[]{144});
    rules[512]=new Rule(-32, new int[]{145});
    rules[513]=new Rule(-32, new int[]{146});
    rules[514]=new Rule(-32, new int[]{147});
    rules[515]=new Rule(-32, new int[]{149});
    rules[516]=new Rule(-32, new int[]{150});
    rules[517]=new Rule(-32, new int[]{128});
    rules[518]=new Rule(-32, new int[]{142,144});
    rules[519]=new Rule(-32, new int[]{142,145});
    rules[520]=new Rule(-32, new int[]{142,146});
    rules[521]=new Rule(-32, new int[]{142,147});
    rules[522]=new Rule(-32, new int[]{153});
    rules[523]=new Rule(-32, new int[]{154});
    rules[524]=new Rule(-32, new int[]{155});
    rules[525]=new Rule(-32, new int[]{156});
    rules[526]=new Rule(-32, new int[]{-32,42});
    rules[527]=new Rule(-32, new int[]{-32,91,93});
    rules[528]=new Rule(-32, new int[]{-32,91,-9,93});
    rules[529]=new Rule(-32, new int[]{-32,91,-9,43,-9,93});
    rules[530]=new Rule(-32, new int[]{-32,91,43,-9,93});
    rules[531]=new Rule(-32, new int[]{339});
    rules[532]=new Rule(-32, new int[]{340});
    rules[533]=new Rule(-32, new int[]{341});
    rules[534]=new Rule(-32, new int[]{343});
    rules[535]=new Rule(-32, new int[]{344});
    rules[536]=new Rule(-32, new int[]{345});
    rules[537]=new Rule(-32, new int[]{346});
    rules[538]=new Rule(-32, new int[]{347,-20});
    rules[539]=new Rule(-32, new int[]{348,-20});
    rules[540]=new Rule(-32, new int[]{349});
    rules[541]=new Rule(-32, new int[]{194,-20});
    rules[542]=new Rule(-32, new int[]{350,-15});
    rules[543]=new Rule(-32, new int[]{350,-15,44,-34});
    rules[544]=new Rule(-32, new int[]{143});
    rules[545]=new Rule(-32, new int[]{142,143});
    rules[546]=new Rule(-32, new int[]{152});
    rules[547]=new Rule(-32, new int[]{196,349});
    rules[548]=new Rule(-32, new int[]{351});
    rules[549]=new Rule(-32, new int[]{201,341});
    rules[550]=new Rule(-32, new int[]{342});
    rules[551]=new Rule(-32, new int[]{336,140});
    rules[552]=new Rule(-32, new int[]{212});
    rules[553]=new Rule(-32, new int[]{245,353});
    rules[554]=new Rule(-32, new int[]{355});
    rules[555]=new Rule(-20, new int[]{});
    rules[556]=new Rule(-20, new int[]{40,356,61,-9,41});
    rules[557]=new Rule(-15, new int[]{});
    rules[558]=new Rule(-15, new int[]{363});
    rules[559]=new Rule(-15, new int[]{336});
    rules[560]=new Rule(-15, new int[]{337});
    rules[561]=new Rule(-15, new int[]{139});
    rules[562]=new Rule(-15, new int[]{140});
    rules[563]=new Rule(-15, new int[]{144});
    rules[564]=new Rule(-15, new int[]{145});
    rules[565]=new Rule(-15, new int[]{146});
    rules[566]=new Rule(-15, new int[]{147});
    rules[567]=new Rule(-15, new int[]{149});
    rules[568]=new Rule(-15, new int[]{150});
    rules[569]=new Rule(-15, new int[]{142,144});
    rules[570]=new Rule(-15, new int[]{142,145});
    rules[571]=new Rule(-15, new int[]{142,146});
    rules[572]=new Rule(-15, new int[]{142,147});
    rules[573]=new Rule(-15, new int[]{153});
    rules[574]=new Rule(-15, new int[]{154});
    rules[575]=new Rule(-15, new int[]{155});
    rules[576]=new Rule(-15, new int[]{156});
    rules[577]=new Rule(-15, new int[]{42});
    rules[578]=new Rule(-15, new int[]{-15,91,93});
    rules[579]=new Rule(-15, new int[]{-15,377});
    rules[580]=new Rule(-15, new int[]{-15,38});
    rules[581]=new Rule(-15, new int[]{339});
    rules[582]=new Rule(-15, new int[]{340});
    rules[583]=new Rule(-15, new int[]{341});
    rules[584]=new Rule(-15, new int[]{343});
    rules[585]=new Rule(-15, new int[]{344});
    rules[586]=new Rule(-15, new int[]{347});
    rules[587]=new Rule(-15, new int[]{348});
    rules[588]=new Rule(-15, new int[]{350});
    rules[589]=new Rule(-15, new int[]{143});
    rules[590]=new Rule(-15, new int[]{142,143});
    rules[591]=new Rule(-15, new int[]{152});
    rules[592]=new Rule(-15, new int[]{128});
    rules[593]=new Rule(-15, new int[]{364});
    rules[594]=new Rule(-15, new int[]{365});
    rules[595]=new Rule(-15, new int[]{366});
    rules[596]=new Rule(-15, new int[]{367});
    rules[597]=new Rule(-15, new int[]{368});
    rules[598]=new Rule(-15, new int[]{369});
    rules[599]=new Rule(-15, new int[]{370});
    rules[600]=new Rule(-15, new int[]{371});
    rules[601]=new Rule(-15, new int[]{372});
    rules[602]=new Rule(-15, new int[]{373});
    rules[603]=new Rule(-15, new int[]{374});
    rules[604]=new Rule(-15, new int[]{375});
    rules[605]=new Rule(-15, new int[]{376});
    rules[606]=new Rule(-27, new int[]{-165});
    rules[607]=new Rule(-165, new int[]{168,-49});
    rules[608]=new Rule(-165, new int[]{159});
    rules[609]=new Rule(-165, new int[]{182,168,-49});
    rules[610]=new Rule(-165, new int[]{183,-49});
    rules[611]=new Rule(-165, new int[]{-27,91,93});
    rules[612]=new Rule(-165, new int[]{-27,91,-29,93});
    rules[613]=new Rule(-165, new int[]{-27,38});
    rules[614]=new Rule(-165, new int[]{-27,42});
    rules[615]=new Rule(-165, new int[]{-27,214});
    rules[616]=new Rule(-165, new int[]{-27,215,40,-50,41});
    rules[617]=new Rule(-165, new int[]{-27,216,40,-50,41});
    rules[618]=new Rule(-165, new int[]{-128,-7,-27,42,40,-24,41});
    rules[619]=new Rule(-165, new int[]{-27,-164});
    rules[620]=new Rule(-165, new int[]{33,33,-9});
    rules[621]=new Rule(-165, new int[]{33,-9});
    rules[622]=new Rule(-165, new int[]{33,33,-1});
    rules[623]=new Rule(-165, new int[]{33,-1});
    rules[624]=new Rule(-165, new int[]{169});
    rules[625]=new Rule(-165, new int[]{139});
    rules[626]=new Rule(-165, new int[]{184,143});
    rules[627]=new Rule(-165, new int[]{184,142,143});
    rules[628]=new Rule(-165, new int[]{184,152});
    rules[629]=new Rule(-165, new int[]{184,148});
    rules[630]=new Rule(-165, new int[]{-38});
    rules[631]=new Rule(-38, new int[]{141});
    rules[632]=new Rule(-38, new int[]{160});
    rules[633]=new Rule(-38, new int[]{140});
    rules[634]=new Rule(-38, new int[]{144});
    rules[635]=new Rule(-38, new int[]{145});
    rules[636]=new Rule(-38, new int[]{146});
    rules[637]=new Rule(-38, new int[]{147});
    rules[638]=new Rule(-38, new int[]{149});
    rules[639]=new Rule(-38, new int[]{150});
    rules[640]=new Rule(-38, new int[]{142,144});
    rules[641]=new Rule(-38, new int[]{142,145});
    rules[642]=new Rule(-38, new int[]{142,146});
    rules[643]=new Rule(-38, new int[]{142,147});
    rules[644]=new Rule(-38, new int[]{153});
    rules[645]=new Rule(-38, new int[]{154});
    rules[646]=new Rule(-38, new int[]{155});
    rules[647]=new Rule(-38, new int[]{156});
    rules[648]=new Rule(-29, new int[]{-28});
    rules[649]=new Rule(-29, new int[]{-29,44,-28});
    rules[650]=new Rule(-28, new int[]{});
    rules[651]=new Rule(-28, new int[]{138});
    rules[652]=new Rule(-28, new int[]{-9});
    rules[653]=new Rule(-28, new int[]{-9,138,-9});
    rules[654]=new Rule(-28, new int[]{-9,138});
    rules[655]=new Rule(-17, new int[]{180});
    rules[656]=new Rule(-17, new int[]{181});
    rules[657]=new Rule(-106, new int[]{286,-62,-34});
    rules[658]=new Rule(-106, new int[]{285,-62,-50,40,-166,41});
    rules[659]=new Rule(-106, new int[]{285,-62,-50});
    rules[660]=new Rule(-106, new int[]{-167,-30,41});
    rules[661]=new Rule(-106, new int[]{285,-62,-50,61,123,-109,125});
    rules[662]=new Rule(-106, new int[]{286,-62,61,123,-168,125});
    rules[663]=new Rule(-168, new int[]{});
    rules[664]=new Rule(-168, new int[]{-169});
    rules[665]=new Rule(-168, new int[]{-169,44,-168});
    rules[666]=new Rule(-169, new int[]{-50,61,123,-111,125});
    rules[667]=new Rule(-169, new int[]{168,132,61,123,-111,125});
    rules[668]=new Rule(-167, new int[]{286,-62,61,40});
    rules[669]=new Rule(-167, new int[]{286,-62,151,40});
    rules[670]=new Rule(-166, new int[]{-170});
    rules[671]=new Rule(-166, new int[]{-170,44,-166});
    rules[672]=new Rule(-170, new int[]{-34,61,-171});
    rules[673]=new Rule(-171, new int[]{-17});
    rules[674]=new Rule(-171, new int[]{-9});
    rules[675]=new Rule(-171, new int[]{146,40,-9,41});
    rules[676]=new Rule(-171, new int[]{-34});
    rules[677]=new Rule(-171, new int[]{-49,40,144,58,-9,41});
    rules[678]=new Rule(-171, new int[]{-49,40,145,58,-9,41});
    rules[679]=new Rule(-171, new int[]{-49,40,146,58,-9,41});
    rules[680]=new Rule(-171, new int[]{-49,40,-9,41});
    rules[681]=new Rule(-62, new int[]{287});
    rules[682]=new Rule(-62, new int[]{288});
    rules[683]=new Rule(-62, new int[]{289});
    rules[684]=new Rule(-62, new int[]{290});
    rules[685]=new Rule(-62, new int[]{291});
    rules[686]=new Rule(-62, new int[]{292});
    rules[687]=new Rule(-62, new int[]{293});
    rules[688]=new Rule(-62, new int[]{294});
    rules[689]=new Rule(-62, new int[]{295});
    rules[690]=new Rule(-62, new int[]{296});
    rules[691]=new Rule(-62, new int[]{297});
    rules[692]=new Rule(-62, new int[]{298});
    rules[693]=new Rule(-62, new int[]{299});
    rules[694]=new Rule(-62, new int[]{300});
    rules[695]=new Rule(-62, new int[]{301});
    rules[696]=new Rule(-172, new int[]{302});
    rules[697]=new Rule(-172, new int[]{303});
    rules[698]=new Rule(-95, new int[]{-172,-9,132});
    rules[699]=new Rule(-95, new int[]{-172,-9});
    rules[700]=new Rule(-95, new int[]{-172,-9,58,-9,132});
    rules[701]=new Rule(-95, new int[]{-172,-9,58,-9});
    rules[702]=new Rule(-95, new int[]{-172,-9,58,-9,44,-9,132});
    rules[703]=new Rule(-95, new int[]{-172,-9,58,-9,44,-9});
    rules[704]=new Rule(-95, new int[]{-172,-9,44,-9,58,-9,132});
    rules[705]=new Rule(-95, new int[]{-172,-9,44,-9,58,-9});
    rules[706]=new Rule(-95, new int[]{-172,-9,44,-9,58,-9,44,-9,132});
    rules[707]=new Rule(-95, new int[]{-172,-9,44,-9,58,-9,44,-9});
    rules[708]=new Rule(-95, new int[]{-172,-9,131});
    rules[709]=new Rule(-96, new int[]{314,-63,-1,-64,-173,-30,41,-64});
    rules[710]=new Rule(-96, new int[]{314,-63,-1,-64});
    rules[711]=new Rule(-63, new int[]{});
    rules[712]=new Rule(-63, new int[]{-63,315});
    rules[713]=new Rule(-64, new int[]{});
    rules[714]=new Rule(-64, new int[]{275});
    rules[715]=new Rule(-173, new int[]{316,61,40});
    rules[716]=new Rule(-97, new int[]{317,-65,-1});
    rules[717]=new Rule(-65, new int[]{});
    rules[718]=new Rule(-65, new int[]{-65,211});
    rules[719]=new Rule(-65, new int[]{-65,327,328});
    rules[720]=new Rule(-65, new int[]{-65,234});
    rules[721]=new Rule(-65, new int[]{-65,329});
    rules[722]=new Rule(-65, new int[]{-65,330});
    rules[723]=new Rule(-65, new int[]{-65,331});
    rules[724]=new Rule(-98, new int[]{});
    rules[725]=new Rule(-98, new int[]{-98,-174});
    rules[726]=new Rule(-174, new int[]{316,320,-9});
    rules[727]=new Rule(-174, new int[]{-106});
    rules[728]=new Rule(-174, new int[]{321,-45,58,-45,58,-45,58,-45});
    rules[729]=new Rule(-174, new int[]{-175,-30,41});
    rules[730]=new Rule(-174, new int[]{322,-34});
    rules[731]=new Rule(-174, new int[]{-176,-30,41});
    rules[732]=new Rule(-174, new int[]{-107});
    rules[733]=new Rule(-45, new int[]{-9});
    rules[734]=new Rule(-45, new int[]{42});
    rules[735]=new Rule(-175, new int[]{318,61,40});
    rules[736]=new Rule(-177, new int[]{319,61,40});
    rules[737]=new Rule(-176, new int[]{322,61,40});
    rules[738]=new Rule(-99, new int[]{317,323,-65,-1});
    rules[739]=new Rule(-99, new int[]{317,323,-65,-1,245,-1});
    rules[740]=new Rule(-100, new int[]{});
    rules[741]=new Rule(-100, new int[]{-100,-178});
    rules[742]=new Rule(-178, new int[]{321,-45,58,-45,58,-45,58,-45});
    rules[743]=new Rule(-178, new int[]{-177,-30,41});
    rules[744]=new Rule(-178, new int[]{-175,-30,41});
    rules[745]=new Rule(-178, new int[]{322,-34});
    rules[746]=new Rule(-178, new int[]{-176,-30,41});
    rules[747]=new Rule(-178, new int[]{-107});
    rules[748]=new Rule(-178, new int[]{-173,-30,41});
    rules[749]=new Rule(-178, new int[]{198});
    rules[750]=new Rule(-101, new int[]{263,323,-66,-1});
    rules[751]=new Rule(-125, new int[]{326,-66,-1});
    rules[752]=new Rule(-66, new int[]{});
    rules[753]=new Rule(-66, new int[]{-66,190});
    rules[754]=new Rule(-66, new int[]{-66,189});
    rules[755]=new Rule(-66, new int[]{-66,187});
    rules[756]=new Rule(-66, new int[]{-66,196,189});
    rules[757]=new Rule(-66, new int[]{-66,196,190});
    rules[758]=new Rule(-66, new int[]{-66,196,191});
    rules[759]=new Rule(-66, new int[]{-66,196,220});
    rules[760]=new Rule(-66, new int[]{-66,196,221});
    rules[761]=new Rule(-66, new int[]{-66,196,222});
    rules[762]=new Rule(-102, new int[]{});
    rules[763]=new Rule(-102, new int[]{-102,-179});
    rules[764]=new Rule(-179, new int[]{314,-1});
    rules[765]=new Rule(-179, new int[]{263,323,-1});
    rules[766]=new Rule(-179, new int[]{317,323,-1});
    rules[767]=new Rule(-179, new int[]{-107});
    rules[768]=new Rule(-103, new int[]{324,-67,-1});
    rules[769]=new Rule(-103, new int[]{324,-67,-1,245,-1});
    rules[770]=new Rule(-67, new int[]{});
    rules[771]=new Rule(-67, new int[]{-67,189});
    rules[772]=new Rule(-67, new int[]{-67,190});
    rules[773]=new Rule(-104, new int[]{});
    rules[774]=new Rule(-104, new int[]{-104,-180});
    rules[775]=new Rule(-180, new int[]{314,-1,178,-9});
    rules[776]=new Rule(-180, new int[]{317,323,-1});
    rules[777]=new Rule(-180, new int[]{-107});

    nonTerminals = new string[] {"", "dottedName", "id", "methodName", 
      "atOpt", "slashedName", "labels", "callConv", "callKind", "int32", "customHead", 
      "customHeadWithOwner", "vtfixupAttr", "paramAttr", "ddItemCount", "variantType", 
      "repeatOpt", "truefalse", "typarAttrib", "typarAttribs", "iidParamIndex", 
      "genArity", "float64", "int64", "sigArgs0", "sigArgs1", "sigArg", "type", 
      "bound", "bounds1", "bytes", "hexbytes", "nativeType", "initOpt", "compQstring", 
      "marshalClause", "fieldInit", "fieldSerInit", "simpleType", "tyArgs0", 
      "tyArgs1", "tyArgs2", "typeList", "typeListNotEmpty", "tyBound", "intOrWildcard", 
      "typars", "typar", "typarsClause", "className", "typeSpec", "ownerType", 
      "customType", "memberRef", "methodRef", "classAttr", "methAttr", "fieldAttr", 
      "implAttr", "eventAttr", "propAttr", "pinvAttr", "secAction", "fileAttr", 
      "fileEntry", "asmAttr", "exptAttr", "manresAttr", "customDescr", "customDescrWithOwner", 
      "instr_none", "instr_var", "instr_i", "instr_i8", "instr_r", "instr_brtarget", 
      "instr_method", "instr_field", "instr_type", "instr_string", "instr_sig", 
      "instr_tok", "instr_switch", "instr_r_head", "decls", "$accept", "decl", 
      "classHead", "classDecls", "nameSpaceHead", "methodHead", "methodDecls", 
      "fieldDecl", "dataDecl", "vtfixupDecl", "extSourceSpec", "fileDecl", "assemblyHead", 
      "assemblyDecls", "assemblyRefHead", "assemblyRefDecls", "exptypeHead", 
      "exptypeDecls", "manifestResHead", "manifestResDecls", "moduleHead", "secDecl", 
      "customAttrDecl", "languageDecl", "customBlobDescr", "customBlobArgs", 
      "customBlobNVPairs", "serInit", "fieldOrProp", "serializType", "_class", 
      "classHeadBegin", "extendsClause", "implClause", "implList", "classDecl", 
      "eventHead", "eventDecls", "propHead", "propDecls", "exportHead", "fieldPart1", 
      "fieldRef", "methodSpec", "eventHeadPart1", "eventDecl", "propHeadPart1", 
      "propDecl", "methodHeadPart1", "localsHead", "methodDecl", "sehBlock", 
      "instr", "scopeBlock", "scopeOpen", "tryBlock", "sehClauses", "sehClause", 
      "tryHead", "catchClause", "filterClause", "finallyClause", "faultClause", 
      "ddHead", "ddBody", "tls", "ddItemList", "ddItem", "bytearrayhead", "f32seq", 
      "f64seq", "i64seq", "i32seq", "i16seq", "i8seq", "boolSeq", "sqstringSeq", 
      "classSeq", "objSeq", "tyArgsNotEmpty", "_type", "nameValPairs", "psetHead", 
      "secAttrSetBlob", "secAttrBlob", "nameValPair", "caValue", "esHead", "hashHead", 
      "assemblyDecl", "publicKeyHead", "localeHead", "publicKeyTokenHead", "assemblyRefDecl", 
      "exptypeDecl", "manifestResDecl", };
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 4: // decl -> classHead '{' classDecls '}' 
#line 142 "asmparse.y"
{context.EndClass();}
        break;
      case 6: // decl -> methodHead methodDecls '}' 
#line 144 "asmparse.y"
{context.EndMethod();}
        break;
      case 7: // decl -> fieldDecl 
#line 145 "asmparse.y"
{context.EndField();}
        break;
      case 13: // decl -> assemblyRefHead '{' assemblyRefDecls '}' 
#line 151 "asmparse.y"
{context.AddReference(AssemblyRef.Temp);AssemblyRef.ResetTemp();}
        break;
      case 26: // compQstring -> compQstring '+' QSTRING 
#line 166 "asmparse.y"
{yyval.Str=value_stack.array[value_stack.top-3].Str+"+"+value_stack.array[value_stack.top-1].Str;}
        break;
      case 31: // id -> SQSTRING 
#line 175 "asmparse.y"
{yyval.Str=value_stack.array[value_stack.top-1].Str.Substring(1,value_stack.array[value_stack.top-1].Str.Length-2);}
        break;
      case 34: // dottedName -> dottedName '.' dottedName 
#line 180 "asmparse.y"
{yyval.Str=value_stack.array[value_stack.top-3].Str+"::"+value_stack.array[value_stack.top-1].Str;}
        break;
      case 40: // float64 -> FLOAT32_ '(' int32 ')' 
#line 192 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 41: // float64 -> FLOAT64_ '(' int64 ')' 
#line 193 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 44: // customDescr -> _CUSTOM customType 
#line 201 "asmparse.y"
{CustomAttribute ca=new CustomAttribute();ca.CustomType=value_stack.array[value_stack.top-1].Obj as MethodOperand;yyval.Obj=ca;}
        break;
      case 45: // customDescr -> customHead bytes ')' 
#line 202 "asmparse.y"
{
                        																																CustomAttribute ca=value_stack.array[value_stack.top-3].Obj as CustomAttribute;
                        																																ca.AttrValue=value_stack.array[value_stack.top-2].Str;
                        																																yyval.Obj=ca;
                        																																context.EndBytes();
                        																															}
        break;
      case 46: // customDescr -> _CUSTOM customType '=' compQstring 
#line 208 "asmparse.y"
{ yyval.Obj=null; }
        break;
      case 47: // customDescr -> _CUSTOM customType '=' '{' customBlobDescr '}' 
#line 209 "asmparse.y"
{ yyval.Obj=null; }
        break;
      case 48: // customDescrWithOwner -> _CUSTOM '(' ownerType ')' customType 
#line 212 "asmparse.y"
{CustomAttribute ca=new CustomAttribute();ca.OwnerType=value_stack.array[value_stack.top-3].Obj;ca.CustomType=value_stack.array[value_stack.top-1].Obj as MethodOperand;yyval.Obj=ca;}
        break;
      case 49: // customDescrWithOwner -> customHeadWithOwner bytes ')' 
#line 213 "asmparse.y"
{
                        																																CustomAttribute ca=value_stack.array[value_stack.top-3].Obj as CustomAttribute;
                        																																ca.AttrValue=value_stack.array[value_stack.top-2].Str;
                        																																yyval.Obj=ca;
                        																																context.EndBytes();
                        																															}
        break;
      case 50: // customDescrWithOwner -> _CUSTOM '(' ownerType ')' customType '=' compQstring 
#line 219 "asmparse.y"
{ yyval.Obj=null; }
        break;
      case 51: // customDescrWithOwner -> _CUSTOM '(' ownerType ')' customType '=' '{' customBlobDescr '}' 
#line 221 "asmparse.y"
{ yyval.Obj=null; }
        break;
      case 52: // customHead -> _CUSTOM customType '=' '(' 
#line 224 "asmparse.y"
{
																																												CustomAttribute ca=new CustomAttribute();
																																												ca.CustomType=value_stack.array[value_stack.top-3].Obj as MethodOperand;
																																												yyval.Obj=ca;
																																												context.StartBytes();
																																											}
        break;
      case 53: // customHeadWithOwner -> _CUSTOM '(' ownerType ')' customType '=' '(' 
#line 232 "asmparse.y"
{
																																												CustomAttribute ca=new CustomAttribute();
																																												ca.OwnerType=value_stack.array[value_stack.top-5].Obj;
																																												ca.CustomType=value_stack.array[value_stack.top-3].Obj as MethodOperand;
																																												yyval.Obj=ca;
																																												context.StartBytes();
																																											}
        break;
      case 55: // ownerType -> typeSpec 
#line 244 "asmparse.y"
{yyval.Obj=new TypeSpecOperand(yyval.Obj as TypeInfo);}
        break;
      case 81: // _class -> _CLASS 
#line 294 "asmparse.y"
{context.NewClass();}
        break;
      case 82: // classHeadBegin -> _class classAttr dottedName typarsClause 
#line 297 "asmparse.y"
{context.CurClassInfo.FullName=value_stack.array[value_stack.top-2].Str;}
        break;
      case 83: // classHead -> classHeadBegin extendsClause implClause 
#line 299 "asmparse.y"
{context.BeginClass();}
        break;
      case 85: // classAttr -> classAttr PUBLIC_ 
#line 303 "asmparse.y"
{context.CurClassInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 86: // classAttr -> classAttr PRIVATE_ 
#line 304 "asmparse.y"
{context.CurClassInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 87: // classAttr -> classAttr VALUE_ 
#line 305 "asmparse.y"
{context.CurClassInfo.Type="value";}
        break;
      case 88: // classAttr -> classAttr ENUM_ 
#line 306 "asmparse.y"
{context.CurClassInfo.Type="enum";}
        break;
      case 89: // classAttr -> classAttr INTERFACE_ 
#line 307 "asmparse.y"
{context.CurClassInfo.Type="interface";}
        break;
      case 90: // classAttr -> classAttr SEALED_ 
#line 308 "asmparse.y"
{context.CurClassInfo.PostAttrs.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 91: // classAttr -> classAttr ABSTRACT_ 
#line 309 "asmparse.y"
{context.CurClassInfo.PostAttrs.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 92: // classAttr -> classAttr AUTO_ 
#line 310 "asmparse.y"
{context.CurClassInfo.LayoutKind="LayoutKind::Auto";}
        break;
      case 93: // classAttr -> classAttr SEQUENTIAL_ 
#line 311 "asmparse.y"
{context.CurClassInfo.LayoutKind="LayoutKind::Sequential";}
        break;
      case 94: // classAttr -> classAttr EXPLICIT_ 
#line 312 "asmparse.y"
{context.CurClassInfo.LayoutKind="LayoutKind::Explicit";}
        break;
      case 95: // classAttr -> classAttr ANSI_ 
#line 313 "asmparse.y"
{context.CurClassInfo.LayoutAttrs.Add("CharSet=CharSet::Ansi");}
        break;
      case 96: // classAttr -> classAttr UNICODE_ 
#line 314 "asmparse.y"
{context.CurClassInfo.LayoutAttrs.Add("CharSet=CharSet::Unicode");}
        break;
      case 97: // classAttr -> classAttr AUTOCHAR_ 
#line 315 "asmparse.y"
{context.CurClassInfo.LayoutAttrs.Add("CharSet=CharSet::Auto");}
        break;
      case 98: // classAttr -> classAttr IMPORT_ 
#line 316 "asmparse.y"
{context.CurClassInfo.IsImport=true;}
        break;
      case 99: // classAttr -> classAttr SERIALIZABLE_ 
#line 317 "asmparse.y"
{context.CurClassInfo.IsSerializable=true;}
        break;
      case 100: // classAttr -> classAttr NESTED_ PUBLIC_ 
#line 318 "asmparse.y"
{context.CurClassInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 101: // classAttr -> classAttr NESTED_ PRIVATE_ 
#line 319 "asmparse.y"
{context.CurClassInfo.Accesses.Add("private");}
        break;
      case 102: // classAttr -> classAttr NESTED_ FAMILY_ 
#line 320 "asmparse.y"
{context.CurClassInfo.Accesses.Add("protected");}
        break;
      case 103: // classAttr -> classAttr NESTED_ ASSEMBLY_ 
#line 321 "asmparse.y"
{context.CurClassInfo.Accesses.Add("internal");}
        break;
      case 104: // classAttr -> classAttr NESTED_ FAMANDASSEM_ 
#line 322 "asmparse.y"
{context.CurClassInfo.Accesses.Add("private protected");}
        break;
      case 105: // classAttr -> classAttr NESTED_ FAMORASSEM_ 
#line 323 "asmparse.y"
{context.CurClassInfo.Accesses.Add("public protected");}
        break;
      case 107: // classAttr -> classAttr SPECIALNAME_ 
#line 325 "asmparse.y"
{context.CurClassInfo.IsSpecial=true;}
        break;
      case 108: // classAttr -> classAttr RTSPECIALNAME_ 
#line 326 "asmparse.y"
{context.CurClassInfo.IsRTSpecial=true;}
        break;
      case 110: // extendsClause -> 
#line 330 "asmparse.y"
{context.CurClassInfo.BaseClass=UndefinedTypeInfo.Ref;}
        break;
      case 111: // extendsClause -> EXTENDS_ typeSpec 
#line 331 "asmparse.y"
{context.CurClassInfo.BaseClass=value_stack.array[value_stack.top-1].Obj as TypeInfo;}
        break;
      case 116: // implList -> implList ',' typeSpec 
#line 342 "asmparse.y"
{context.CurClassInfo.ImplIntfs.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);}
        break;
      case 117: // implList -> typeSpec 
#line 343 "asmparse.y"
{context.CurClassInfo.ImplIntfs.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);}
        break;
      case 120: // typeListNotEmpty -> typeSpec 
#line 351 "asmparse.y"
{TypeParams.TempParam.ConstraintTypes.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);}
        break;
      case 121: // typeListNotEmpty -> typeListNotEmpty ',' typeSpec 
#line 352 "asmparse.y"
{TypeParams.TempParam.ConstraintTypes.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);}
        break;
      case 126: // typarAttrib -> CLASS_ 
#line 361 "asmparse.y"
{TypeParams.TempParam.ConstraintAttrs.Add("ref class");}
        break;
      case 127: // typarAttrib -> VALUETYPE_ 
#line 362 "asmparse.y"
{TypeParams.TempParam.ConstraintAttrs.Add("value class");}
        break;
      case 128: // typarAttrib -> _CTOR 
#line 363 "asmparse.y"
{TypeParams.TempParam.ConstraintAttrs.Add("gcnew()");}
        break;
      case 131: // typars -> typar 
#line 370 "asmparse.y"
{TypeParams.Add();}
        break;
      case 132: // typars -> typars ',' typar 
#line 371 "asmparse.y"
{TypeParams.Add();}
        break;
      case 133: // typar -> typarAttribs tyBound dottedName 
#line 374 "asmparse.y"
{TypeParams.TempParam.Id=value_stack.array[value_stack.top-1].Str;}
        break;
      case 134: // typar -> typarAttribs dottedName 
#line 375 "asmparse.y"
{TypeParams.TempParam.Id=value_stack.array[value_stack.top-1].Str;}
        break;
      case 136: // genArity -> 
#line 381 "asmparse.y"
{yyval.Str="0";}
        break;
      case 137: // genArity -> '<' '[' int32 ']' '>' 
#line 382 "asmparse.y"
{yyval=value_stack.array[value_stack.top-3];}
        break;
      case 138: // classDecl -> methodHead methodDecls '}' 
#line 386 "asmparse.y"
{context.EndMethod();}
        break;
      case 139: // classDecl -> classHead '{' classDecls '}' 
#line 387 "asmparse.y"
{context.EndClass();}
        break;
      case 140: // classDecl -> eventHead '{' eventDecls '}' 
#line 388 "asmparse.y"
{context.EndEvent();}
        break;
      case 141: // classDecl -> propHead '{' propDecls '}' 
#line 389 "asmparse.y"
{context.EndProperty();}
        break;
      case 142: // classDecl -> fieldDecl 
#line 390 "asmparse.y"
{context.EndField();}
        break;
      case 144: // classDecl -> secDecl 
#line 392 "asmparse.y"
{
                        																		if(value_stack.array[value_stack.top-1].Obj!=null)
                        																		{
                        																			context.CurClassInfo.AddPermission(value_stack.array[value_stack.top-1].Obj);
                        																		}
                        																	 }
        break;
      case 146: // classDecl -> customAttrDecl 
#line 399 "asmparse.y"
{
                        																		if(value_stack.array[value_stack.top-1].Obj!=null)
                        																		{
                        																			context.CurClassInfo.CustomAttrs.Add(value_stack.array[value_stack.top-1].Obj as CustomAttribute);
                        																		}
                        																	 }
        break;
      case 147: // classDecl -> _SIZE int32 
#line 405 "asmparse.y"
{context.CurClassInfo.LayoutAttrs.Add("Size="+value_stack.array[value_stack.top-1].Str);}
        break;
      case 148: // classDecl -> _PACK int32 
#line 406 "asmparse.y"
{context.CurClassInfo.LayoutAttrs.Add("Pack="+value_stack.array[value_stack.top-1].Str);}
        break;
      case 150: // classDecl -> _OVERRIDE typeSpec DCOLON methodName WITH_ callConv type typeSpec DCOLON methodName '(' sigArgs0 ')' 
#line 409 "asmparse.y"
{
                        																	 		ClassOverrideInfo coi=new ClassOverrideInfo();
                        																	 		
                        																	 		coi.OverridedMethod.TypeSpec=value_stack.array[value_stack.top-12].Obj as TypeInfo;
                        																	 		coi.OverridedMethod.Name=value_stack.array[value_stack.top-10].Str;
                        																	 		
                        																	 		Context.ListAddList(coi.OverrideMethod.CallConvs,value_stack.array[value_stack.top-8].Obj);
                        																	 		coi.OverrideMethod.RetType=value_stack.array[value_stack.top-7].Obj as TypeInfo;
                        																	 		coi.OverrideMethod.TypeSpec=value_stack.array[value_stack.top-6].Obj as TypeInfo;
                        																	 		coi.OverrideMethod.Name=value_stack.array[value_stack.top-4].Str;
                        																	 		coi.OverrideMethod.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
                        																	 		
                        																	 		context.CurClassInfo.OverrideAttrs.Add(coi);
                        																	 }
        break;
      case 151: // classDecl -> _OVERRIDE METHOD_ callConv type typeSpec DCOLON methodName genArity '(' sigArgs0 ')' WITH_ METHOD_ callConv type typeSpec DCOLON methodName genArity '(' sigArgs0 ')' 
#line 424 "asmparse.y"
{
                        																	 		ClassOverrideInfo coi=new ClassOverrideInfo();     
                        																	 		                   																	 		
                        																	 		Context.ListAddList(coi.OverridedMethod.CallConvs,value_stack.array[value_stack.top-20].Obj);
                        																	 		coi.OverridedMethod.RetType=value_stack.array[value_stack.top-19].Obj as TypeInfo;
                        																	 		coi.OverridedMethod.TypeSpec=value_stack.array[value_stack.top-18].Obj as TypeInfo;
                        																	 		coi.OverridedMethod.Name=value_stack.array[value_stack.top-16].Str;
                        																	 		coi.OverridedMethod.GenArity=value_stack.array[value_stack.top-15].Str;
                        																	 		coi.OverridedMethod.Args.AddRange((value_stack.array[value_stack.top-13].Obj as Params).Args);
                        																	 		
                        																	 		Context.ListAddList(coi.OverrideMethod.CallConvs,value_stack.array[value_stack.top-9].Obj);
                        																	 		coi.OverrideMethod.RetType=value_stack.array[value_stack.top-8].Obj as TypeInfo;
                        																	 		coi.OverrideMethod.TypeSpec=value_stack.array[value_stack.top-7].Obj as TypeInfo;
                        																	 		coi.OverrideMethod.Name=value_stack.array[value_stack.top-5].Str;
                        																	 		coi.OverrideMethod.GenArity=value_stack.array[value_stack.top-4].Str;
                        																	 		coi.OverrideMethod.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
                        																	 		context.CurClassInfo.OverrideAttrs.Add(coi);
                        																	 }
        break;
      case 153: // classDecl -> PARAM_ TYPE_ '[' int32 ']' 
#line 443 "asmparse.y"
{context.CurClassInfo.LastParamTypeDirective=value_stack.array[value_stack.top-2].Str;}
        break;
      case 154: // classDecl -> PARAM_ TYPE_ dottedName 
#line 444 "asmparse.y"
{context.CurClassInfo.LastParamTypeDirective=value_stack.array[value_stack.top-1].Str;}
        break;
      case 155: // fieldDecl -> fieldPart1 repeatOpt fieldAttr type dottedName atOpt initOpt 
#line 448 "asmparse.y"
{
																																															context.CurFieldInfo.Type=value_stack.array[value_stack.top-4].Obj as TypeInfo;
																																															context.CurFieldInfo.Name=value_stack.array[value_stack.top-3].Str;
																																															context.CurFieldInfo.Init=value_stack.array[value_stack.top-1].Str;
																																															context.BeginField();
																																														}
        break;
      case 156: // fieldPart1 -> _FIELD 
#line 456 "asmparse.y"
{context.NewField();}
        break;
      case 158: // fieldAttr -> fieldAttr STATIC_ 
#line 460 "asmparse.y"
{context.CurFieldInfo.PreAttrs.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 159: // fieldAttr -> fieldAttr PUBLIC_ 
#line 461 "asmparse.y"
{context.CurFieldInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 160: // fieldAttr -> fieldAttr PRIVATE_ 
#line 462 "asmparse.y"
{context.CurFieldInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 161: // fieldAttr -> fieldAttr FAMILY_ 
#line 463 "asmparse.y"
{context.CurFieldInfo.Accesses.Add("protected");}
        break;
      case 162: // fieldAttr -> fieldAttr INITONLY_ 
#line 464 "asmparse.y"
{context.CurFieldInfo.PreAttrs.Add("initonly");}
        break;
      case 163: // fieldAttr -> fieldAttr RTSPECIALNAME_ 
#line 465 "asmparse.y"
{context.CurFieldInfo.IsRTSpecial=true;}
        break;
      case 164: // fieldAttr -> fieldAttr SPECIALNAME_ 
#line 466 "asmparse.y"
{context.CurFieldInfo.IsSpecial=true;}
        break;
      case 165: // fieldAttr -> fieldAttr marshalClause 
#line 467 "asmparse.y"
{context.CurFieldInfo.MarshalAs=value_stack.array[value_stack.top-1].Obj as NativeTypeInfo;}
        break;
      case 166: // fieldAttr -> fieldAttr ASSEMBLY_ 
#line 468 "asmparse.y"
{context.CurFieldInfo.Accesses.Add("internal");}
        break;
      case 167: // fieldAttr -> fieldAttr FAMANDASSEM_ 
#line 469 "asmparse.y"
{context.CurFieldInfo.Accesses.Add("private protected");}
        break;
      case 168: // fieldAttr -> fieldAttr FAMORASSEM_ 
#line 470 "asmparse.y"
{context.CurFieldInfo.Accesses.Add("public protected");}
        break;
      case 170: // fieldAttr -> fieldAttr LITERAL_ 
#line 472 "asmparse.y"
{context.CurFieldInfo.PreAttrs.Add("literal");}
        break;
      case 171: // fieldAttr -> fieldAttr NOTSERIALIZED_ 
#line 473 "asmparse.y"
{context.CurFieldInfo.IsNotSerialized=true;}
        break;
      case 174: // atOpt -> AT_ id 
#line 478 "asmparse.y"
{context.CurFieldInfo.At=value_stack.array[value_stack.top-1].Str;}
        break;
      case 175: // initOpt -> 
#line 481 "asmparse.y"
{yyval.Str="";}
        break;
      case 176: // initOpt -> '=' fieldInit 
#line 482 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 179: // methodRef -> callConv type typeSpec DCOLON methodName tyArgs0 '(' sigArgs0 ')' 
#line 490 "asmparse.y"
{
																																																	MethodOperand r=new MethodOperand();
																																																	Context.ListAddList(r.CallConvs,value_stack.array[value_stack.top-9].Obj);
																																																	r.RetType=value_stack.array[value_stack.top-8].Obj as TypeInfo;
																																																	r.TypeSpec=value_stack.array[value_stack.top-7].Obj as TypeInfo;
																																																	r.Name=value_stack.array[value_stack.top-5].Str;
																																																	r.TypeArgs.AddRange(value_stack.array[value_stack.top-4].Obj as List<TypeInfo>);
																																																	r.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
																																																	r.CalcSig();
																																																	yyval.Obj=r;
																																																	yyval.Str=r.Value;
																																																}
        break;
      case 180: // methodRef -> callConv type methodName tyArgs0 '(' sigArgs0 ')' 
#line 502 "asmparse.y"
{
																																																	MethodOperand r=new MethodOperand();
																																																	Context.ListAddList(r.CallConvs,value_stack.array[value_stack.top-7].Obj);
																																																	r.RetType=value_stack.array[value_stack.top-6].Obj as TypeInfo;
																																																	r.Name=value_stack.array[value_stack.top-5].Str;
																																																	r.TypeArgs.AddRange(value_stack.array[value_stack.top-4].Obj as List<TypeInfo>);
																																																	r.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
																																																	r.CalcSig();
																																																	yyval.Obj=r;
																																																	yyval.Str=r.Value;
																																																}
        break;
      case 181: // callConv -> INSTANCE_ callConv 
#line 515 "asmparse.y"
{
																																		Context.ListAddStrings(value_stack.array[value_stack.top-1].Obj,value_stack.array[value_stack.top-2].Str);
																																		yyval.Obj=value_stack.array[value_stack.top-1].Obj;
																																	}
        break;
      case 182: // callConv -> EXPLICIT_ callConv 
#line 519 "asmparse.y"
{
																																		Context.ListAddStrings(value_stack.array[value_stack.top-1].Obj,value_stack.array[value_stack.top-2].Str);
																																		yyval.Obj=value_stack.array[value_stack.top-1].Obj;
                        																					}
        break;
      case 183: // callConv -> callKind 
#line 523 "asmparse.y"
{
                        																						if(value_stack.array[value_stack.top-1].Str.Length>0)
                        																							yyval.Obj=Context.CreateStringList(value_stack.array[value_stack.top-1].Str);
                        																						else
                        																							yyval.Obj=Context.CreateStringList();
                        																					}
        break;
      case 185: // callKind -> 
#line 532 "asmparse.y"
{yyval.Str="";}
        break;
      case 188: // callKind -> UNMANAGED_ CDECL_ 
#line 535 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 189: // callKind -> UNMANAGED_ STDCALL_ 
#line 536 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 190: // callKind -> UNMANAGED_ THISCALL_ 
#line 537 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 191: // callKind -> UNMANAGED_ FASTCALL_ 
#line 538 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 192: // fieldRef -> type typeSpec DCOLON dottedName 
#line 542 "asmparse.y"
{
																															 			FieldOperand op=new FieldOperand();
																															 			op.Type=value_stack.array[value_stack.top-4].Obj as TypeInfo;
																															 			op.TypeSpec=value_stack.array[value_stack.top-3].Obj as TypeInfo;
																															 			op.Name=value_stack.array[value_stack.top-1].Str;
																															 			yyval.Obj=op;
																															 			yyval.Str=op.Value;
																															 		}
        break;
      case 193: // fieldRef -> type dottedName 
#line 551 "asmparse.y"
{
																															 			FieldOperand op=new FieldOperand();
																															 			op.Type=value_stack.array[value_stack.top-2].Obj as TypeInfo;
																															 			op.Name=value_stack.array[value_stack.top-1].Str;
																															 			yyval.Obj=op;
																															 			yyval.Str=op.Value;
																															 		}
        break;
      case 194: // memberRef -> methodSpec methodRef 
#line 560 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 195: // memberRef -> FIELD_ fieldRef 
#line 561 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 196: // eventHead -> eventHeadPart1 eventAttr typeSpec dottedName 
#line 565 "asmparse.y"
{
																																						context.CurEventInfo.Type=value_stack.array[value_stack.top-2].Obj as TypeInfo;
																																						context.CurEventInfo.Name=value_stack.array[value_stack.top-1].Str;
																																						context.BeginEvent();
																																				  }
        break;
      case 197: // eventHead -> eventHeadPart1 eventAttr dottedName 
#line 570 "asmparse.y"
{
																																						context.CurEventInfo.Name=value_stack.array[value_stack.top-1].Str;
                        																										context.BeginEvent();
                        																									}
        break;
      case 198: // eventHeadPart1 -> _EVENT 
#line 576 "asmparse.y"
{context.NewEvent();context.CurEventInfo.Accesses.Add("public");}
        break;
      case 200: // eventAttr -> eventAttr RTSPECIALNAME_ 
#line 581 "asmparse.y"
{context.CurEventInfo.IsRTSpecial=true;}
        break;
      case 201: // eventAttr -> eventAttr SPECIALNAME_ 
#line 582 "asmparse.y"
{context.CurEventInfo.IsSpecial=true;}
        break;
      case 204: // eventDecl -> _ADDON methodRef 
#line 589 "asmparse.y"
{context.CurEventInfo.AddMethod=context.DecideRefedMethod(value_stack.array[value_stack.top-1].Obj as MethodOperand,MethodInfo.AddMethod);}
        break;
      case 205: // eventDecl -> _REMOVEON methodRef 
#line 590 "asmparse.y"
{context.CurEventInfo.RemoveMethod=context.DecideRefedMethod(value_stack.array[value_stack.top-1].Obj as MethodOperand,MethodInfo.RemoveMethod);}
        break;
      case 206: // eventDecl -> _FIRE methodRef 
#line 591 "asmparse.y"
{context.CurEventInfo.RaiseMethod=context.DecideRefedMethod(value_stack.array[value_stack.top-1].Obj as MethodOperand,MethodInfo.RaiseMethod);}
        break;
      case 209: // eventDecl -> customAttrDecl 
#line 594 "asmparse.y"
{
                        																		if(value_stack.array[value_stack.top-1].Obj!=null)
                        																		{
                        																			context.CurEventInfo.CustomAttrs.Add(value_stack.array[value_stack.top-1].Obj as CustomAttribute);
                        																		}
                        																	 }
        break;
      case 211: // propHead -> propHeadPart1 propAttr callConv type dottedName '(' sigArgs0 ')' initOpt 
#line 604 "asmparse.y"
{
																																																			Context.ListAddList(context.CurPropertyInfo.CallConvs,value_stack.array[value_stack.top-7].Obj);
																																																			context.CurPropertyInfo.Type=value_stack.array[value_stack.top-6].Obj as TypeInfo;
																																																			context.CurPropertyInfo.Name=value_stack.array[value_stack.top-5].Str;
																																																			context.CurPropertyInfo.Args.AddRange((value_stack.array[value_stack.top-3].Obj as Params).Args);
																																																			context.BeginProperty();
																																																		}
        break;
      case 212: // propHeadPart1 -> _PROPERTY 
#line 613 "asmparse.y"
{context.NewProperty();context.CurPropertyInfo.Accesses.Add("public");}
        break;
      case 214: // propAttr -> propAttr RTSPECIALNAME_ 
#line 617 "asmparse.y"
{context.CurPropertyInfo.IsRTSpecial=true;}
        break;
      case 215: // propAttr -> propAttr SPECIALNAME_ 
#line 618 "asmparse.y"
{context.CurPropertyInfo.IsSpecial=true;}
        break;
      case 218: // propDecl -> _SET methodRef 
#line 626 "asmparse.y"
{context.CurPropertyInfo.SetMethod=context.DecideRefedMethod(value_stack.array[value_stack.top-1].Obj as MethodOperand,MethodInfo.SetMethod);}
        break;
      case 219: // propDecl -> _GET methodRef 
#line 627 "asmparse.y"
{context.CurPropertyInfo.GetMethod=context.DecideRefedMethod(value_stack.array[value_stack.top-1].Obj as MethodOperand,MethodInfo.GetMethod);}
        break;
      case 221: // propDecl -> customAttrDecl 
#line 629 "asmparse.y"
{
	                        																		if(value_stack.array[value_stack.top-1].Obj!=null)
	                        																		{
	                        																			context.CurPropertyInfo.CustomAttrs.Add(value_stack.array[value_stack.top-1].Obj as CustomAttribute);
	                        																		}
                        																	 	}
        break;
      case 224: // methodHeadPart1 -> _METHOD 
#line 640 "asmparse.y"
{context.NewMethod();}
        break;
      case 225: // marshalClause -> 
#line 643 "asmparse.y"
{yyval.Obj=NativeTypeInfo.Null;}
        break;
      case 226: // marshalClause -> MARSHAL_ '(' nativeType ')' 
#line 644 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 227: // methodHead -> methodHeadPart1 methAttr callConv paramAttr type marshalClause methodName typarsClause '(' sigArgs0 ')' implAttr '{' 
#line 647 "asmparse.y"
{																																																																											
																																																																											Context.ListAddList(context.CurMethodInfo.CallConvs,value_stack.array[value_stack.top-11].Obj);
																																																																											Context.ListAddList(context.CurMethodInfo.RetAttrs,value_stack.array[value_stack.top-10].Obj);
																																																																											context.CurMethodInfo.RetType=value_stack.array[value_stack.top-9].Obj as TypeInfo;
																																																																											context.CurMethodInfo.MarshalAs=value_stack.array[value_stack.top-8].Obj as NativeTypeInfo;
																																																																											context.CurMethodInfo.Name=value_stack.array[value_stack.top-7].Str;
																																																																											context.CurMethodInfo.Args.AddRange((value_stack.array[value_stack.top-4].Obj as Params).Args);
																																																																											context.BeginMethod();
																																																																										}
        break;
      case 229: // methAttr -> methAttr STATIC_ 
#line 659 "asmparse.y"
{context.CurMethodInfo.PreAttrs.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 230: // methAttr -> methAttr PUBLIC_ 
#line 660 "asmparse.y"
{context.CurMethodInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 231: // methAttr -> methAttr PRIVATE_ 
#line 661 "asmparse.y"
{context.CurMethodInfo.Accesses.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 232: // methAttr -> methAttr FAMILY_ 
#line 662 "asmparse.y"
{context.CurMethodInfo.Accesses.Add("protected");}
        break;
      case 233: // methAttr -> methAttr FINAL_ 
#line 663 "asmparse.y"
{context.CurMethodInfo.PostAttrs.Add("sealed");}
        break;
      case 234: // methAttr -> methAttr SPECIALNAME_ 
#line 664 "asmparse.y"
{context.CurMethodInfo.IsSpecial=true;}
        break;
      case 235: // methAttr -> methAttr VIRTUAL_ 
#line 665 "asmparse.y"
{context.CurMethodInfo.PreAttrs.Add("virtual");}
        break;
      case 237: // methAttr -> methAttr ABSTRACT_ 
#line 667 "asmparse.y"
{context.CurMethodInfo.PostAttrs.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 238: // methAttr -> methAttr ASSEMBLY_ 
#line 668 "asmparse.y"
{context.CurMethodInfo.Accesses.Add("internal");}
        break;
      case 239: // methAttr -> methAttr FAMANDASSEM_ 
#line 669 "asmparse.y"
{context.CurMethodInfo.Accesses.Add("private protected");}
        break;
      case 240: // methAttr -> methAttr FAMORASSEM_ 
#line 670 "asmparse.y"
{context.CurMethodInfo.Accesses.Add("public protected");}
        break;
      case 241: // methAttr -> methAttr PRIVATESCOPE_ 
#line 671 "asmparse.y"
{context.CurMethodInfo.Accesses.Add("private");}
        break;
      case 244: // methAttr -> methAttr RTSPECIALNAME_ 
#line 674 "asmparse.y"
{context.CurMethodInfo.IsRTSpecial=true;}
        break;
      case 248: // methAttr -> methAttr PINVOKEIMPL_ '(' compQstring AS_ compQstring pinvAttr ')' 
#line 679 "asmparse.y"
{
                        																			context.CurMethodInfo.PinvokeDll=value_stack.array[value_stack.top-5].Str;
                        																			context.CurMethodInfo.PinvokeAttrs.Add("EntryPoint="+value_stack.array[value_stack.top-3].Str);
                        																		}
        break;
      case 249: // methAttr -> methAttr PINVOKEIMPL_ '(' compQstring pinvAttr ')' 
#line 685 "asmparse.y"
{
                        																			context.CurMethodInfo.PinvokeDll=value_stack.array[value_stack.top-3].Str;
                        																		}
        break;
      case 253: // pinvAttr -> pinvAttr ANSI_ 
#line 695 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CharSet=CharSet::Ansi");}
        break;
      case 254: // pinvAttr -> pinvAttr UNICODE_ 
#line 696 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CharSet=CharSet::Unicode");}
        break;
      case 255: // pinvAttr -> pinvAttr AUTOCHAR_ 
#line 697 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CharSet=CharSet::Auto");}
        break;
      case 256: // pinvAttr -> pinvAttr LASTERR_ 
#line 698 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("SetLastError=true");}
        break;
      case 257: // pinvAttr -> pinvAttr WINAPI_ 
#line 699 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CallingConvention=CallingConvention::Winapi");}
        break;
      case 258: // pinvAttr -> pinvAttr CDECL_ 
#line 700 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CallingConvention=CallingConvention::Cdecl");}
        break;
      case 259: // pinvAttr -> pinvAttr STDCALL_ 
#line 701 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CallingConvention=CallingConvention::StdCall");}
        break;
      case 260: // pinvAttr -> pinvAttr THISCALL_ 
#line 702 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CallingConvention=CallingConvention::ThisCall");}
        break;
      case 261: // pinvAttr -> pinvAttr FASTCALL_ 
#line 703 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("CallingConvention=CallingConvention::FastCall");}
        break;
      case 262: // pinvAttr -> pinvAttr BESTFIT_ ':' ON_ 
#line 704 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("BestFitMapping=true");}
        break;
      case 263: // pinvAttr -> pinvAttr BESTFIT_ ':' OFF_ 
#line 705 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("BestFitMapping=false");}
        break;
      case 264: // pinvAttr -> pinvAttr CHARMAPERROR_ ':' ON_ 
#line 706 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("ThrowOnUnmappableChar=true");}
        break;
      case 265: // pinvAttr -> pinvAttr CHARMAPERROR_ ':' OFF_ 
#line 707 "asmparse.y"
{context.CurMethodInfo.PinvokeAttrs.Add("ThrowOnUnmappableChar=false");}
        break;
      case 270: // paramAttr -> 
#line 716 "asmparse.y"
{yyval.Obj=Context.CreateStringList();}
        break;
      case 271: // paramAttr -> paramAttr '[' IN_ ']' 
#line 717 "asmparse.y"
{Context.ListAddStrings(value_stack.array[value_stack.top-4].Obj,"In");yyval.Obj=value_stack.array[value_stack.top-4].Obj;}
        break;
      case 272: // paramAttr -> paramAttr '[' OUT_ ']' 
#line 718 "asmparse.y"
{Context.ListAddStrings(value_stack.array[value_stack.top-4].Obj,"Out");yyval.Obj=value_stack.array[value_stack.top-4].Obj;}
        break;
      case 273: // paramAttr -> paramAttr '[' OPT_ ']' 
#line 719 "asmparse.y"
{Context.ListAddStrings(value_stack.array[value_stack.top-4].Obj,"Optional");yyval.Obj=value_stack.array[value_stack.top-4].Obj;}
        break;
      case 274: // paramAttr -> paramAttr '[' int32 ']' 
#line 720 "asmparse.y"
{yyval=value_stack.array[value_stack.top-4];}
        break;
      case 276: // implAttr -> implAttr NATIVE_ 
#line 724 "asmparse.y"
{context.CurMethodInfo.ImplCodeType="MethodCodeType=MethodCodeType::Native";}
        break;
      case 277: // implAttr -> implAttr CIL_ 
#line 725 "asmparse.y"
{/*context.CurMethodInfo.ImplCodeType="MethodCodeType=MethodCodeType::IL";*/}
        break;
      case 278: // implAttr -> implAttr OPTIL_ 
#line 726 "asmparse.y"
{context.CurMethodInfo.ImplCodeType="MethodCodeType=MethodCodeType::OPTIL";}
        break;
      case 280: // implAttr -> implAttr UNMANAGED_ 
#line 728 "asmparse.y"
{context.CurMethodInfo.ImplOptions.Add("MethodImplOptions::Unmanaged");}
        break;
      case 281: // implAttr -> implAttr FORWARDREF_ 
#line 729 "asmparse.y"
{context.CurMethodInfo.ImplOptions.Add("MethodImplOptions::ForwardRef");}
        break;
      case 282: // implAttr -> implAttr PRESERVESIG_ 
#line 730 "asmparse.y"
{context.CurMethodInfo.IsPreserveSig=true;}
        break;
      case 283: // implAttr -> implAttr RUNTIME_ 
#line 731 "asmparse.y"
{context.CurMethodInfo.ImplCodeType="MethodCodeType=MethodCodeType::Runtime";}
        break;
      case 284: // implAttr -> implAttr INTERNALCALL_ 
#line 732 "asmparse.y"
{context.CurMethodInfo.ImplOptions.Add("MethodImplOptions::InternalCall");}
        break;
      case 285: // implAttr -> implAttr SYNCHRONIZED_ 
#line 733 "asmparse.y"
{context.CurMethodInfo.ImplOptions.Add("MethodImplOptions::Synchronized");}
        break;
      case 286: // implAttr -> implAttr NOINLINING_ 
#line 734 "asmparse.y"
{context.CurMethodInfo.ImplOptions.Add("MethodImplOptions::NoInlining");}
        break;
      case 294: // methodDecl -> localsHead '(' sigArgs0 ')' 
#line 748 "asmparse.y"
{context.CurMethodInfo.Body.Locals.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);}
        break;
      case 295: // methodDecl -> localsHead INIT_ '(' sigArgs0 ')' 
#line 749 "asmparse.y"
{context.CurMethodInfo.Body.Locals.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);}
        break;
      case 296: // methodDecl -> _ENTRYPOINT 
#line 750 "asmparse.y"
{context.CurMethodInfo.IsEntryPoint=true;}
        break;
      case 299: // methodDecl -> instr 
#line 753 "asmparse.y"
{context.CurMethodInfo.Body.AddIl();}
        break;
      case 300: // methodDecl -> id ':' 
#line 754 "asmparse.y"
{MethodBody.TempIl.Label=value_stack.array[value_stack.top-2].Str+":";}
        break;
      case 301: // methodDecl -> secDecl 
#line 755 "asmparse.y"
{context.CurMethodInfo.AddPermission(value_stack.array[value_stack.top-1].Obj);}
        break;
      case 304: // methodDecl -> customAttrDecl 
#line 758 "asmparse.y"
{
						                        																		if(value_stack.array[value_stack.top-1].Obj!=null)
						                        																		{
						                        																			context.CurMethodInfo.CustomAttrs.Add(value_stack.array[value_stack.top-1].Obj as CustomAttribute);
						                        																		}
						                        																	}
        break;
      case 308: // methodDecl -> _OVERRIDE typeSpec DCOLON methodName 
#line 767 "asmparse.y"
{
                        																								MethodOverrideInfo moi=new MethodOverrideInfo();
					                        																	 		moi.TypeSpec=value_stack.array[value_stack.top-3].Obj as TypeInfo;
					                        																	 		moi.Name=value_stack.array[value_stack.top-1].Str;
                        																	 		          context.CurMethodInfo.OverrideAttrs.Add(moi);            																								
                        																							}
        break;
      case 309: // methodDecl -> _OVERRIDE METHOD_ callConv type typeSpec DCOLON methodName genArity '(' sigArgs0 ')' 
#line 776 "asmparse.y"
{
                        																								MethodOverrideInfo moi=new MethodOverrideInfo();
                        																								Context.ListAddList(moi.CallConvs,value_stack.array[value_stack.top-9].Obj);
					                        																	 		moi.RetType=value_stack.array[value_stack.top-8].Obj as TypeInfo;
					                        																	 		moi.TypeSpec=value_stack.array[value_stack.top-7].Obj as TypeInfo;
					                        																	 		moi.Name=value_stack.array[value_stack.top-5].Str;
					                        																	 		moi.GenArity=value_stack.array[value_stack.top-4].Str;
					                        																	 		moi.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
                        																	 		          context.CurMethodInfo.OverrideAttrs.Add(moi);            											                        																	 		
                        																							}
        break;
      case 311: // methodDecl -> PARAM_ TYPE_ '[' int32 ']' 
#line 787 "asmparse.y"
{context.CurMethodInfo.LastParamTypeDirective=value_stack.array[value_stack.top-2].Str;}
        break;
      case 312: // methodDecl -> PARAM_ TYPE_ dottedName 
#line 788 "asmparse.y"
{context.CurMethodInfo.LastParamTypeDirective=value_stack.array[value_stack.top-1].Str;}
        break;
      case 313: // methodDecl -> PARAM_ '[' int32 ']' initOpt 
#line 789 "asmparse.y"
{context.CurMethodInfo.LastParamDirective=value_stack.array[value_stack.top-3].Str;context.CurMethodInfo.SetParamValue(value_stack.array[value_stack.top-3].Str,value_stack.array[value_stack.top-1].Str);}
        break;
      case 319: // tryBlock -> tryHead scopeBlock 
#line 806 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".endtry");
																																			}
        break;
      case 320: // tryHead -> _TRY 
#line 811 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".try");
																																			}
        break;
      case 321: // sehClause -> catchClause scopeBlock 
#line 817 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".endcatch");
																																			}
        break;
      case 322: // sehClause -> filterClause scopeBlock 
#line 820 "asmparse.y"
{
                        																								context.CurMethodInfo.Body.AddEHClause(".endfilter");
                        																							}
        break;
      case 323: // sehClause -> finallyClause scopeBlock 
#line 823 "asmparse.y"
{
                        																								context.CurMethodInfo.Body.AddEHClause(".endfinally");
                        																							}
        break;
      case 324: // sehClause -> faultClause scopeBlock 
#line 826 "asmparse.y"
{
                        																								context.CurMethodInfo.Body.AddEHClause(".endfault");
                        																							}
        break;
      case 325: // filterClause -> FILTER_ 
#line 832 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".filter");
																																			}
        break;
      case 326: // catchClause -> CATCH_ typeSpec 
#line 837 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddCatch(new TypeSpecOperand(value_stack.array[value_stack.top-1].Obj as TypeInfo));
																																			}
        break;
      case 327: // finallyClause -> FINALLY_ 
#line 842 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".finally");
																																			}
        break;
      case 328: // faultClause -> FAULT_ 
#line 847 "asmparse.y"
{
																																				context.CurMethodInfo.Body.AddEHClause(".fault");
																																			}
        break;
      case 329: // dataDecl -> ddHead ddBody 
#line 853 "asmparse.y"
{context.DefineData(value_stack.array[value_stack.top-2].Str,value_stack.array[value_stack.top-1].Str);}
        break;
      case 330: // ddHead -> _DATA tls id '=' 
#line 856 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];context.DefineDataTLS(yyval.Str,value_stack.array[value_stack.top-3].Str);}
        break;
      case 331: // ddHead -> _DATA tls 
#line 857 "asmparse.y"
{yyval.Str="Noname_"+context.NonameDataIndex;context.NonameDataIndex++;context.DefineDataTLS(yyval.Str,value_stack.array[value_stack.top-1].Str);}
        break;
      case 332: // tls -> 
#line 860 "asmparse.y"
{yyval.Str="";}
        break;
      case 335: // ddBody -> '{' ddItemList '}' 
#line 865 "asmparse.y"
{yyval.Str=context.PopSequence();}
        break;
      case 337: // ddItemList -> ddItemList ',' ddItem 
#line 869 "asmparse.y"
{context.AddSequenceItem(value_stack.array[value_stack.top-2].Str,",");}
        break;
      case 338: // ddItemList -> ddItem 
#line 870 "asmparse.y"
{context.PushSequence();context.AddSequenceItem(value_stack.array[value_stack.top-1].Str,",");}
        break;
      case 339: // ddItemCount -> 
#line 873 "asmparse.y"
{yyval.Str="1";}
        break;
      case 340: // ddItemCount -> '[' int32 ']' 
#line 874 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 341: // ddItem -> CHAR_ '*' '(' compQstring ')' 
#line 877 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 342: // ddItem -> '&' '(' id ')' 
#line 878 "asmparse.y"
{yyval.Str="&"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 343: // ddItem -> bytearrayhead bytes ')' 
#line 879 "asmparse.y"
{yyval.Str=Context.BytesToArray(value_stack.array[value_stack.top-2].Str);context.EndBytes();}
        break;
      case 344: // ddItem -> FLOAT32_ '(' float64 ')' ddItemCount 
#line 880 "asmparse.y"
{yyval.Str="gcnew System::Single[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 345: // ddItem -> FLOAT64_ '(' float64 ')' ddItemCount 
#line 881 "asmparse.y"
{yyval.Str="gcnew System::Double[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 346: // ddItem -> INT64_ '(' int64 ')' ddItemCount 
#line 882 "asmparse.y"
{yyval.Str="gcnew System::Int64[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 347: // ddItem -> INT32_ '(' int32 ')' ddItemCount 
#line 883 "asmparse.y"
{yyval.Str="gcnew System::Int32[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 348: // ddItem -> INT16_ '(' int32 ')' ddItemCount 
#line 884 "asmparse.y"
{yyval.Str="gcnew System::Int16[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 349: // ddItem -> INT8_ '(' int32 ')' ddItemCount 
#line 885 "asmparse.y"
{yyval.Str="gcnew System::SByte[]{"+Context.BuildRepeatSequence(value_stack.array[value_stack.top-3].Str,int.Parse(value_stack.array[value_stack.top-1].Str),",")+"}";}
        break;
      case 350: // ddItem -> FLOAT32_ ddItemCount 
#line 886 "asmparse.y"
{yyval.Str="gcnew System::Single["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 351: // ddItem -> FLOAT64_ ddItemCount 
#line 887 "asmparse.y"
{yyval.Str="gcnew System::Double["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 352: // ddItem -> INT64_ ddItemCount 
#line 888 "asmparse.y"
{yyval.Str="gcnew System::Int64["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 353: // ddItem -> INT32_ ddItemCount 
#line 889 "asmparse.y"
{yyval.Str="gcnew System::Int32["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 354: // ddItem -> INT16_ ddItemCount 
#line 890 "asmparse.y"
{yyval.Str="gcnew System::Int16["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 355: // ddItem -> INT8_ ddItemCount 
#line 891 "asmparse.y"
{yyval.Str="gcnew System::SByte["+value_stack.array[value_stack.top-1].Str+"]";}
        break;
      case 356: // fieldSerInit -> FLOAT32_ '(' float64 ')' 
#line 895 "asmparse.y"
{yyval.Str="(System::Single)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 357: // fieldSerInit -> FLOAT64_ '(' float64 ')' 
#line 896 "asmparse.y"
{yyval.Str="(System::Double)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 358: // fieldSerInit -> FLOAT32_ '(' int32 ')' 
#line 897 "asmparse.y"
{yyval.Str="(System::Single)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 359: // fieldSerInit -> FLOAT64_ '(' int64 ')' 
#line 898 "asmparse.y"
{yyval.Str="(System::Double)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 360: // fieldSerInit -> INT64_ '(' int64 ')' 
#line 899 "asmparse.y"
{yyval.Str="(System::Int64)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 361: // fieldSerInit -> INT32_ '(' int32 ')' 
#line 900 "asmparse.y"
{yyval.Str="(System::Int32)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 362: // fieldSerInit -> INT16_ '(' int32 ')' 
#line 901 "asmparse.y"
{yyval.Str="(System::Int16)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 363: // fieldSerInit -> INT8_ '(' int32 ')' 
#line 902 "asmparse.y"
{yyval.Str="(System::SByte)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 364: // fieldSerInit -> UNSIGNED_ INT64_ '(' int64 ')' 
#line 903 "asmparse.y"
{yyval.Str="(System::UInt64)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 365: // fieldSerInit -> UNSIGNED_ INT32_ '(' int32 ')' 
#line 904 "asmparse.y"
{yyval.Str="(System::UInt32)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 366: // fieldSerInit -> UNSIGNED_ INT16_ '(' int32 ')' 
#line 905 "asmparse.y"
{yyval.Str="(System::UInt16)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 367: // fieldSerInit -> UNSIGNED_ INT8_ '(' int32 ')' 
#line 906 "asmparse.y"
{yyval.Str="(System::Byte)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 368: // fieldSerInit -> UINT64_ '(' int64 ')' 
#line 907 "asmparse.y"
{yyval.Str="(System::UInt64)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 369: // fieldSerInit -> UINT32_ '(' int32 ')' 
#line 908 "asmparse.y"
{yyval.Str="(System::UInt32)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 370: // fieldSerInit -> UINT16_ '(' int32 ')' 
#line 909 "asmparse.y"
{yyval.Str="(System::UInt16)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 371: // fieldSerInit -> UINT8_ '(' int32 ')' 
#line 910 "asmparse.y"
{yyval.Str="(System::Byte)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 372: // fieldSerInit -> CHAR_ '(' int32 ')' 
#line 911 "asmparse.y"
{yyval.Str="(System::Char)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 373: // fieldSerInit -> BOOL_ '(' truefalse ')' 
#line 912 "asmparse.y"
{yyval.Str="(System::Boolean)"+value_stack.array[value_stack.top-2].Str;}
        break;
      case 374: // fieldSerInit -> bytearrayhead bytes ')' 
#line 913 "asmparse.y"
{yyval.Str=Context.BytesToArray(value_stack.array[value_stack.top-2].Str);context.EndBytes();}
        break;
      case 375: // bytearrayhead -> BYTEARRAY_ '(' 
#line 916 "asmparse.y"
{context.StartBytes();}
        break;
      case 376: // bytes -> 
#line 919 "asmparse.y"
{yyval.Str="";}
        break;
      case 377: // bytes -> hexbytes 
#line 920 "asmparse.y"
{yyval.Str=context.PopSequence();}
        break;
      case 378: // hexbytes -> HEXBYTE 
#line 923 "asmparse.y"
{context.PushSequence();context.AddSequenceItem(value_stack.array[value_stack.top-1].Str,",");}
        break;
      case 379: // hexbytes -> hexbytes HEXBYTE 
#line 924 "asmparse.y"
{context.AddSequenceItem(value_stack.array[value_stack.top-1].Str,",");}
        break;
      case 382: // fieldInit -> NULLREF_ 
#line 930 "asmparse.y"
{yyval.Str="nullptr";}
        break;
      case 448: // instr_r_head -> instr_r '(' 
#line 1051 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];context.StartBytes();}
        break;
      case 449: // instr -> instr_none 
#line 1055 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 450: // instr -> instr_var int32 
#line 1058 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 451: // instr -> instr_var id 
#line 1062 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 452: // instr -> instr_i int32 
#line 1066 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 453: // instr -> instr_i8 int64 
#line 1070 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 454: // instr -> instr_r float64 
#line 1074 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 455: // instr -> instr_r int64 
#line 1078 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 456: // instr -> instr_r_head bytes ')' 
#line 1082 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-3].Str;
																															 MethodBody.TempIl.Value=Context.BytesToArray(value_stack.array[value_stack.top-2].Str);
																															 context.EndBytes();
																														 }
        break;
      case 457: // instr -> instr_brtarget int32 
#line 1087 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 458: // instr -> instr_brtarget id 
#line 1091 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 459: // instr -> instr_method methodRef 
#line 1095 "asmparse.y"
{
                        																																	MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 														MethodBody.TempIl.Operand=value_stack.array[value_stack.top-1].Obj as MethodOperand;
																															 													}
        break;
      case 460: // instr -> instr_field fieldRef 
#line 1099 "asmparse.y"
{
                        																																	MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 														MethodBody.TempIl.Operand=value_stack.array[value_stack.top-1].Obj as FieldOperand;
																															 													}
        break;
      case 461: // instr -> instr_type typeSpec 
#line 1103 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Operand=new TypeSpecOperand(value_stack.array[value_stack.top-1].Obj as TypeInfo);
																														 }
        break;
      case 462: // instr -> instr_string compQstring 
#line 1107 "asmparse.y"
{
																															 MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																															 MethodBody.TempIl.Value=value_stack.array[value_stack.top-1].Str;
																														 }
        break;
      case 463: // instr -> instr_string ANSI_ '(' compQstring ')' 
#line 1111 "asmparse.y"
{
																																													MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-5].Str;
																																													MethodBody.TempIl.Value=value_stack.array[value_stack.top-2].Str;
																																												}
        break;
      case 464: // instr -> instr_string bytearrayhead bytes ')' 
#line 1115 "asmparse.y"
{
																																													MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-4].Str;
																																													MethodBody.TempIl.Value=Context.BytesToString(value_stack.array[value_stack.top-2].Str);
																																													context.EndBytes();
																																												}
        break;
      case 465: // instr -> instr_sig callConv type '(' sigArgs0 ')' 
#line 1120 "asmparse.y"
{
																																													MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-6].Str;
																																													SigOperand op=new SigOperand();
																																													Context.ListAddList(op.CallConvs,value_stack.array[value_stack.top-5].Obj);
																																													op.RetType=value_stack.array[value_stack.top-4].Obj as TypeInfo;
																																													op.Args.AddRange((value_stack.array[value_stack.top-2].Obj as Params).Args);
																																													MethodBody.TempIl.Operand=op;																																													
																																												}
        break;
      case 466: // instr -> instr_tok ownerType 
#line 1128 "asmparse.y"
{
																																													MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-2].Str;
																																													if(value_stack.array[value_stack.top-1].Obj is FieldOperand)
																																														MethodBody.TempIl.Operand=value_stack.array[value_stack.top-1].Obj as FieldOperand;
																																													else if(value_stack.array[value_stack.top-1].Obj is MethodOperand)
																																														MethodBody.TempIl.Operand=value_stack.array[value_stack.top-1].Obj as MethodOperand;
																																													else
																																														MethodBody.TempIl.Operand=value_stack.array[value_stack.top-1].Obj as TypeSpecOperand;
																																												}
        break;
      case 467: // instr -> instr_switch '(' labels ')' 
#line 1137 "asmparse.y"
{
                        																																	MethodBody.TempIl.Opcode=value_stack.array[value_stack.top-4].Str;
                        																																	SwitchOperand.Set(MethodBody.TempIl);
                        																																}
        break;
      case 469: // labels -> labels ',' id 
#line 1144 "asmparse.y"
{SwitchOperand.Temp.Labels.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 470: // labels -> labels ',' int32 
#line 1145 "asmparse.y"
{SwitchOperand.Temp.Labels.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 471: // labels -> id 
#line 1146 "asmparse.y"
{SwitchOperand.Temp.Labels.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 472: // labels -> int32 
#line 1147 "asmparse.y"
{SwitchOperand.Temp.Labels.Add(value_stack.array[value_stack.top-1].Str);}
        break;
      case 473: // tyArgs0 -> 
#line 1151 "asmparse.y"
{yyval.Obj=new List<TypeInfo>();}
        break;
      case 475: // tyArgsNotEmpty -> '<' tyArgs1 '>' 
#line 1155 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 476: // tyArgs1 -> 
#line 1158 "asmparse.y"
{yyval.Obj=new List<TypeInfo>();}
        break;
      case 477: // tyArgs1 -> type 
#line 1159 "asmparse.y"
{List<TypeInfo> tis=new List<TypeInfo>();tis.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);yyval.Obj=tis;}
        break;
      case 479: // tyArgs2 -> tyArgs1 ',' type 
#line 1163 "asmparse.y"
{List<TypeInfo> tis=value_stack.array[value_stack.top-3].Obj as List<TypeInfo>;tis.Add(value_stack.array[value_stack.top-1].Obj as TypeInfo);yyval.Obj=tis;}
        break;
      case 480: // tyArgs2 -> tyArgs1 ',' 
#line 1164 "asmparse.y"
{List<TypeInfo> tis=value_stack.array[value_stack.top-2].Obj as List<TypeInfo>;tis.Add(null);yyval.Obj=tis;}
        break;
      case 481: // sigArgs0 -> 
#line 1167 "asmparse.y"
{yyval.Str="";yyval.Obj=new Params();}
        break;
      case 482: // sigArgs0 -> sigArgs1 
#line 1168 "asmparse.y"
{yyval.Str=Params.CalcClause((value_stack.array[value_stack.top-1].Obj as Params).Args);yyval.Obj=value_stack.array[value_stack.top-1].Obj;}
        break;
      case 483: // sigArgs1 -> sigArg 
#line 1171 "asmparse.y"
{Params ps=new Params();ps.Add(value_stack.array[value_stack.top-1].Obj as Param);yyval.Obj=ps;}
        break;
      case 484: // sigArgs1 -> sigArgs1 ',' sigArg 
#line 1172 "asmparse.y"
{Params ps=value_stack.array[value_stack.top-3].Obj as Params;ps.Add(value_stack.array[value_stack.top-1].Obj as Param);yyval.Obj=value_stack.array[value_stack.top-3].Obj;}
        break;
      case 486: // sigArg -> paramAttr type marshalClause 
#line 1176 "asmparse.y"
{Param p=new Param();Context.ListAddList(p.Attrs,value_stack.array[value_stack.top-3].Obj);p.Type=value_stack.array[value_stack.top-2].Obj as TypeInfo;p.MarshalAs=value_stack.array[value_stack.top-1].Obj as NativeTypeInfo;yyval.Obj=p;}
        break;
      case 487: // sigArg -> paramAttr type marshalClause id 
#line 1177 "asmparse.y"
{Param p=new Param();Context.ListAddList(p.Attrs,value_stack.array[value_stack.top-4].Obj);p.Type=value_stack.array[value_stack.top-3].Obj as TypeInfo;p.MarshalAs=value_stack.array[value_stack.top-2].Obj as NativeTypeInfo;p.Id=value_stack.array[value_stack.top-1].Str;yyval.Obj=p;}
        break;
      case 488: // className -> '[' dottedName ']' slashedName 
#line 1181 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 489: // className -> '[' '*' ']' slashedName 
#line 1182 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 490: // className -> '[' _MODULE dottedName ']' slashedName 
#line 1183 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 496: // slashedName -> slashedName '/' dottedName 
#line 1191 "asmparse.y"
{yyval.Str=value_stack.array[value_stack.top-3].Str+"::"+value_stack.array[value_stack.top-1].Str;}
        break;
      case 497: // typeSpec -> className 
#line 1194 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-1].Str);yyval.Str=""+yyval.Obj;}
        break;
      case 498: // typeSpec -> '[' dottedName ']' 
#line 1195 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-2].Str);yyval.Str=""+yyval.Obj;}
        break;
      case 499: // typeSpec -> '[' _MODULE dottedName ']' 
#line 1196 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-2].Str);yyval.Str=""+yyval.Obj;}
        break;
      case 500: // typeSpec -> type 
#line 1197 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 501: // nativeType -> 
#line 1201 "asmparse.y"
{yyval.Obj=NativeTypeInfo.Null;}
        break;
      case 502: // nativeType -> CUSTOM_ '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' 
#line 1203 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateCustom(value_stack.array[value_stack.top-8].Str+","+value_stack.array[value_stack.top-6].Str,value_stack.array[value_stack.top-4].Str+"="+value_stack.array[value_stack.top-2].Str);}
        break;
      case 503: // nativeType -> CUSTOM_ '(' compQstring ',' compQstring ')' 
#line 1205 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateCustom(value_stack.array[value_stack.top-4].Str+","+value_stack.array[value_stack.top-2].Str);}
        break;
      case 504: // nativeType -> FIXED_ SYSSTRING_ '[' int32 ']' 
#line 1206 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateString("UnmanagedType::ByValTStr",value_stack.array[value_stack.top-2].Str);}
        break;
      case 505: // nativeType -> FIXED_ ARRAY_ '[' int32 ']' nativeType 
#line 1207 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-1].Obj as NativeTypeInfo,"UnmanagedType::LPArray",value_stack.array[value_stack.top-3].Str);}
        break;
      case 506: // nativeType -> VARIANT_ 
#line 1208 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::AsAny");}
        break;
      case 507: // nativeType -> CURRENCY_ 
#line 1209 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::Currency");}
        break;
      case 508: // nativeType -> SYSCHAR_ 
#line 1210 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::TBStr");}
        break;
      case 509: // nativeType -> VOID_ 
#line 1211 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::Void");}
        break;
      case 510: // nativeType -> BOOL_ 
#line 1212 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::Bool");}
        break;
      case 511: // nativeType -> INT8_ 
#line 1213 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::I1");}
        break;
      case 512: // nativeType -> INT16_ 
#line 1214 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::I2");}
        break;
      case 513: // nativeType -> INT32_ 
#line 1215 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::I4");}
        break;
      case 514: // nativeType -> INT64_ 
#line 1216 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::I8");}
        break;
      case 515: // nativeType -> FLOAT32_ 
#line 1217 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::R4");}
        break;
      case 516: // nativeType -> FLOAT64_ 
#line 1218 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::R8");}
        break;
      case 517: // nativeType -> ERROR_ 
#line 1219 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::Error");}
        break;
      case 518: // nativeType -> UNSIGNED_ INT8_ 
#line 1220 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U1");}
        break;
      case 519: // nativeType -> UNSIGNED_ INT16_ 
#line 1221 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U2");}
        break;
      case 520: // nativeType -> UNSIGNED_ INT32_ 
#line 1222 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U4");}
        break;
      case 521: // nativeType -> UNSIGNED_ INT64_ 
#line 1223 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U8");}
        break;
      case 522: // nativeType -> UINT8_ 
#line 1224 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U1");}
        break;
      case 523: // nativeType -> UINT16_ 
#line 1225 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U2");}
        break;
      case 524: // nativeType -> UINT32_ 
#line 1226 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U4");}
        break;
      case 525: // nativeType -> UINT64_ 
#line 1227 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U8");}
        break;
      case 526: // nativeType -> nativeType '*' 
#line 1228 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-2].Obj as NativeTypeInfo,"UnmanagedType::LPArray","");}
        break;
      case 527: // nativeType -> nativeType '[' ']' 
#line 1229 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-3].Obj as NativeTypeInfo,"UnmanagedType::LPArray","");}
        break;
      case 528: // nativeType -> nativeType '[' int32 ']' 
#line 1230 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-4].Obj as NativeTypeInfo,"UnmanagedType::LPArray",value_stack.array[value_stack.top-2].Str);}
        break;
      case 529: // nativeType -> nativeType '[' int32 '+' int32 ']' 
#line 1231 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-6].Obj as NativeTypeInfo,"UnmanagedType::LPArray",value_stack.array[value_stack.top-4].Str,value_stack.array[value_stack.top-2].Str);}
        break;
      case 530: // nativeType -> nativeType '[' '+' int32 ']' 
#line 1232 "asmparse.y"
{yyval.Obj=ArrayNativeTypeInfo.CreateArray(value_stack.array[value_stack.top-5].Obj as NativeTypeInfo,"UnmanagedType::LPArray","",value_stack.array[value_stack.top-2].Str);}
        break;
      case 531: // nativeType -> DECIMAL_ 
#line 1233 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::R4");}
        break;
      case 532: // nativeType -> DATE_ 
#line 1234 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::U8");}
        break;
      case 533: // nativeType -> BSTR_ 
#line 1235 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::BStr");}
        break;
      case 534: // nativeType -> LPSTR_ 
#line 1236 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPStr");}
        break;
      case 535: // nativeType -> LPWSTR_ 
#line 1237 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPWStr");}
        break;
      case 536: // nativeType -> LPTSTR_ 
#line 1238 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPTStr");}
        break;
      case 537: // nativeType -> OBJECTREF_ 
#line 1239 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::AsAny");}
        break;
      case 538: // nativeType -> IUNKNOWN_ iidParamIndex 
#line 1240 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateCOM("UnmanagedType::IUnknown",value_stack.array[value_stack.top-1].Str);}
        break;
      case 539: // nativeType -> IDISPATCH_ iidParamIndex 
#line 1241 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateCOM("UnmanagedType::IDispatch",value_stack.array[value_stack.top-1].Str);}
        break;
      case 540: // nativeType -> STRUCT_ 
#line 1242 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPStruct");}
        break;
      case 541: // nativeType -> INTERFACE_ iidParamIndex 
#line 1243 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateCOM("UnmanagedType::Interface",value_stack.array[value_stack.top-1].Str);}
        break;
      case 542: // nativeType -> SAFEARRAY_ variantType 
#line 1244 "asmparse.y"
{yyval.Obj=SafeArrayNativeTypeInfo.CreateSafeArray(value_stack.array[value_stack.top-1].Obj as VariantTypeInfo);}
        break;
      case 543: // nativeType -> SAFEARRAY_ variantType ',' compQstring 
#line 1245 "asmparse.y"
{yyval.Obj=SafeArrayNativeTypeInfo.CreateSafeArray(value_stack.array[value_stack.top-3].Obj as VariantTypeInfo,value_stack.array[value_stack.top-1].Str);}
        break;
      case 544: // nativeType -> INT_ 
#line 1246 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::SysInt");}
        break;
      case 545: // nativeType -> UNSIGNED_ INT_ 
#line 1247 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::SysUInt");}
        break;
      case 546: // nativeType -> UINT_ 
#line 1248 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::SysUInt");}
        break;
      case 547: // nativeType -> NESTED_ STRUCT_ 
#line 1249 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPStruct");}
        break;
      case 548: // nativeType -> BYVALSTR_ 
#line 1250 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::ByValTStr");}
        break;
      case 549: // nativeType -> ANSI_ BSTR_ 
#line 1251 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::AnsiBStr");}
        break;
      case 550: // nativeType -> TBSTR_ 
#line 1252 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::TBStr");}
        break;
      case 551: // nativeType -> VARIANT_ BOOL_ 
#line 1253 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::VariantBool");}
        break;
      case 552: // nativeType -> METHOD_ 
#line 1254 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::FunctionPtr");}
        break;
      case 553: // nativeType -> AS_ ANY_ 
#line 1255 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::AsAny");}
        break;
      case 554: // nativeType -> LPSTRUCT_ 
#line 1256 "asmparse.y"
{yyval.Obj=NativeTypeInfo.CreateSimple("UnmanagedType::LPStruct");}
        break;
      case 555: // iidParamIndex -> 
#line 1259 "asmparse.y"
{yyval.Str="";}
        break;
      case 556: // iidParamIndex -> '(' IIDPARAM_ '=' int32 ')' 
#line 1260 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 557: // variantType -> 
#line 1263 "asmparse.y"
{yyval.Obj=new VariantTypeInfo();}
        break;
      case 558: // variantType -> NULL_ 
#line 1264 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_NULL");}
        break;
      case 559: // variantType -> VARIANT_ 
#line 1265 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_VARIANT");}
        break;
      case 560: // variantType -> CURRENCY_ 
#line 1266 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_CURRENCY");}
        break;
      case 561: // variantType -> VOID_ 
#line 1267 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_VOID");}
        break;
      case 562: // variantType -> BOOL_ 
#line 1268 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_BOOL");}
        break;
      case 563: // variantType -> INT8_ 
#line 1269 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_I1");}
        break;
      case 564: // variantType -> INT16_ 
#line 1270 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_I2");}
        break;
      case 565: // variantType -> INT32_ 
#line 1271 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_I4");}
        break;
      case 566: // variantType -> INT64_ 
#line 1272 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_I8");}
        break;
      case 567: // variantType -> FLOAT32_ 
#line 1273 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_R4");}
        break;
      case 568: // variantType -> FLOAT64_ 
#line 1274 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_R8");}
        break;
      case 569: // variantType -> UNSIGNED_ INT8_ 
#line 1275 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI1");}
        break;
      case 570: // variantType -> UNSIGNED_ INT16_ 
#line 1276 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI2");}
        break;
      case 571: // variantType -> UNSIGNED_ INT32_ 
#line 1277 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI4");}
        break;
      case 572: // variantType -> UNSIGNED_ INT64_ 
#line 1278 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI8");}
        break;
      case 573: // variantType -> UINT8_ 
#line 1279 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI1");}
        break;
      case 574: // variantType -> UINT16_ 
#line 1280 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI2");}
        break;
      case 575: // variantType -> UINT32_ 
#line 1281 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI4");}
        break;
      case 576: // variantType -> UINT64_ 
#line 1282 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UI8");}
        break;
      case 577: // variantType -> '*' 
#line 1283 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_PTR");}
        break;
      case 578: // variantType -> variantType '[' ']' 
#line 1284 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_ARRAY");}
        break;
      case 579: // variantType -> variantType VECTOR_ 
#line 1285 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_VECTOR");}
        break;
      case 580: // variantType -> variantType '&' 
#line 1286 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_BYREF");}
        break;
      case 581: // variantType -> DECIMAL_ 
#line 1287 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_DECIMAL");}
        break;
      case 582: // variantType -> DATE_ 
#line 1288 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_DATE");}
        break;
      case 583: // variantType -> BSTR_ 
#line 1289 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_BSTR");}
        break;
      case 584: // variantType -> LPSTR_ 
#line 1290 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_LPSTR");}
        break;
      case 585: // variantType -> LPWSTR_ 
#line 1291 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_LPWSTR");}
        break;
      case 586: // variantType -> IUNKNOWN_ 
#line 1292 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UNKNOWN");}
        break;
      case 587: // variantType -> IDISPATCH_ 
#line 1293 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_DISPATCH");}
        break;
      case 588: // variantType -> SAFEARRAY_ 
#line 1294 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_SAFEARRAY");}
        break;
      case 589: // variantType -> INT_ 
#line 1295 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_INT");}
        break;
      case 590: // variantType -> UNSIGNED_ INT_ 
#line 1296 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UINT");}
        break;
      case 591: // variantType -> UINT_ 
#line 1297 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_UINT");}
        break;
      case 592: // variantType -> ERROR_ 
#line 1298 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_ERROR");}
        break;
      case 593: // variantType -> HRESULT_ 
#line 1299 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_HRESULT");}
        break;
      case 594: // variantType -> CARRAY_ 
#line 1300 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_CARRAY");}
        break;
      case 595: // variantType -> USERDEFINED_ 
#line 1301 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_USERDEFINED");}
        break;
      case 596: // variantType -> RECORD_ 
#line 1302 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_RECORD");}
        break;
      case 597: // variantType -> FILETIME_ 
#line 1303 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_FILETIME");}
        break;
      case 598: // variantType -> BLOB_ 
#line 1304 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_BLOB");}
        break;
      case 599: // variantType -> STREAM_ 
#line 1305 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_STREAM");}
        break;
      case 600: // variantType -> STORAGE_ 
#line 1306 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_STORAGE");}
        break;
      case 601: // variantType -> STREAMED_OBJECT_ 
#line 1307 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_STREAMED_OBJECT");}
        break;
      case 602: // variantType -> STORED_OBJECT_ 
#line 1308 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_STORED_OBJECT");}
        break;
      case 603: // variantType -> BLOB_OBJECT_ 
#line 1309 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_BLOB_OBJECT");}
        break;
      case 604: // variantType -> CF_ 
#line 1310 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_CF");}
        break;
      case 605: // variantType -> CLSID_ 
#line 1311 "asmparse.y"
{yyval.Obj=new VariantTypeInfo("VarEnum::VT_CLSID");}
        break;
      case 606: // type -> _type 
#line 1315 "asmparse.y"
{yyval.Str=""+yyval.Obj;}
        break;
      case 607: // _type -> CLASS_ className 
#line 1318 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-1].Str);}
        break;
      case 608: // _type -> OBJECT_ 
#line 1319 "asmparse.y"
{yyval.Obj=BasicTypeInfo.ObjectInfo;}
        break;
      case 609: // _type -> VALUE_ CLASS_ className 
#line 1320 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-1].Str);}
        break;
      case 610: // _type -> VALUETYPE_ className 
#line 1321 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Create(value_stack.array[value_stack.top-1].Str);}
        break;
      case 611: // _type -> type '[' ']' 
#line 1322 "asmparse.y"
{yyval.Obj=ArrayTypeInfo.Create(value_stack.array[value_stack.top-3].Obj as TypeInfo,1);}
        break;
      case 612: // _type -> type '[' bounds1 ']' 
#line 1323 "asmparse.y"
{yyval.Obj=ArrayTypeInfo.Create(value_stack.array[value_stack.top-4].Obj as TypeInfo,(int)value_stack.array[value_stack.top-2].Obj);}
        break;
      case 613: // _type -> type '&' 
#line 1324 "asmparse.y"
{yyval.Obj=ReferenceTypeInfo.Create(value_stack.array[value_stack.top-2].Obj as TypeInfo);}
        break;
      case 614: // _type -> type '*' 
#line 1325 "asmparse.y"
{yyval.Obj=PointerTypeInfo.Create(value_stack.array[value_stack.top-2].Obj as TypeInfo);}
        break;
      case 615: // _type -> type PINNED_ 
#line 1326 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 616: // _type -> type MODREQ_ '(' typeSpec ')' 
#line 1327 "asmparse.y"
{yyval=value_stack.array[value_stack.top-5];}
        break;
      case 617: // _type -> type MODOPT_ '(' typeSpec ')' 
#line 1328 "asmparse.y"
{yyval=value_stack.array[value_stack.top-5];}
        break;
      case 618: // _type -> methodSpec callConv type '*' '(' sigArgs0 ')' 
#line 1329 "asmparse.y"
{yyval=value_stack.array[value_stack.top-5];}
        break;
      case 619: // _type -> type tyArgsNotEmpty 
#line 1330 "asmparse.y"
{yyval=value_stack.array[value_stack.top-2];}
        break;
      case 620: // _type -> '!' '!' int32 
#line 1331 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 621: // _type -> '!' int32 
#line 1332 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 622: // _type -> '!' '!' dottedName 
#line 1333 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 623: // _type -> '!' dottedName 
#line 1334 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 624: // _type -> TYPEDREF_ 
#line 1335 "asmparse.y"
{yyval.Obj=BasicTypeInfo.TypedrefInfo;}
        break;
      case 625: // _type -> VOID_ 
#line 1336 "asmparse.y"
{yyval.Obj=BasicTypeInfo.VoidInfo;}
        break;
      case 626: // _type -> NATIVE_ INT_ 
#line 1337 "asmparse.y"
{yyval.Obj=BasicTypeInfo.IntPtrInfo;}
        break;
      case 627: // _type -> NATIVE_ UNSIGNED_ INT_ 
#line 1338 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UIntPtrInfo;}
        break;
      case 628: // _type -> NATIVE_ UINT_ 
#line 1339 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UIntPtrInfo;}
        break;
      case 629: // _type -> NATIVE_ FLOAT_ 
#line 1340 "asmparse.y"
{yyval.Obj=BasicTypeInfo.SingleInfo;}
        break;
      case 630: // _type -> simpleType 
#line 1341 "asmparse.y"
{yyval=value_stack.array[value_stack.top-1];}
        break;
      case 631: // simpleType -> CHAR_ 
#line 1344 "asmparse.y"
{yyval.Obj=BasicTypeInfo.CharInfo;}
        break;
      case 632: // simpleType -> STRING_ 
#line 1345 "asmparse.y"
{yyval.Obj=BasicTypeInfo.StringInfo;}
        break;
      case 633: // simpleType -> BOOL_ 
#line 1346 "asmparse.y"
{yyval.Obj=BasicTypeInfo.BooleanInfo;}
        break;
      case 634: // simpleType -> INT8_ 
#line 1347 "asmparse.y"
{yyval.Obj=BasicTypeInfo.SByteInfo;}
        break;
      case 635: // simpleType -> INT16_ 
#line 1348 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Int16Info;}
        break;
      case 636: // simpleType -> INT32_ 
#line 1349 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Int32Info;}
        break;
      case 637: // simpleType -> INT64_ 
#line 1350 "asmparse.y"
{yyval.Obj=BasicTypeInfo.Int64Info;}
        break;
      case 638: // simpleType -> FLOAT32_ 
#line 1351 "asmparse.y"
{yyval.Obj=BasicTypeInfo.SingleInfo;}
        break;
      case 639: // simpleType -> FLOAT64_ 
#line 1352 "asmparse.y"
{yyval.Obj=BasicTypeInfo.DoubleInfo;}
        break;
      case 640: // simpleType -> UNSIGNED_ INT8_ 
#line 1353 "asmparse.y"
{yyval.Obj=BasicTypeInfo.ByteInfo;}
        break;
      case 641: // simpleType -> UNSIGNED_ INT16_ 
#line 1354 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt16Info;}
        break;
      case 642: // simpleType -> UNSIGNED_ INT32_ 
#line 1355 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt32Info;}
        break;
      case 643: // simpleType -> UNSIGNED_ INT64_ 
#line 1356 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt64Info;}
        break;
      case 644: // simpleType -> UINT8_ 
#line 1357 "asmparse.y"
{yyval.Obj=BasicTypeInfo.ByteInfo;}
        break;
      case 645: // simpleType -> UINT16_ 
#line 1358 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt16Info;}
        break;
      case 646: // simpleType -> UINT32_ 
#line 1359 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt32Info;}
        break;
      case 647: // simpleType -> UINT64_ 
#line 1360 "asmparse.y"
{yyval.Obj=BasicTypeInfo.UInt64Info;}
        break;
      case 648: // bounds1 -> bound 
#line 1363 "asmparse.y"
{yyval.Obj=1;}
        break;
      case 649: // bounds1 -> bounds1 ',' bound 
#line 1364 "asmparse.y"
{yyval.Obj=(int)value_stack.array[value_stack.top-3].Obj+1;}
        break;
      case 657: // secDecl -> _PERMISSIONSET secAction compQstring 
#line 1380 "asmparse.y"
{
																																PermissionSetAttribute psa=new PermissionSetAttribute();
																																psa.SecurityAction=value_stack.array[value_stack.top-2].Str;
																																psa.AttrValue=value_stack.array[value_stack.top-1].Str;
																																yyval.Obj=psa;
																															}
        break;
      case 658: // secDecl -> _PERMISSION secAction typeSpec '(' nameValPairs ')' 
#line 1387 "asmparse.y"
{yyval.Obj=null;}
        break;
      case 659: // secDecl -> _PERMISSION secAction typeSpec 
#line 1389 "asmparse.y"
{yyval.Obj=null;}
        break;
      case 660: // secDecl -> psetHead bytes ')' 
#line 1391 "asmparse.y"
{
											  																				yyval.Obj=null;
                        																				context.EndBytes();
                        																			}
        break;
      case 661: // secDecl -> _PERMISSION secAction typeSpec '=' '{' customBlobDescr '}' 
#line 1396 "asmparse.y"
{yyval.Obj=null;}
        break;
      case 662: // secDecl -> _PERMISSIONSET secAction '=' '{' secAttrSetBlob '}' 
#line 1398 "asmparse.y"
{yyval.Obj=null;}
        break;
      case 668: // psetHead -> _PERMISSIONSET secAction '=' '(' 
#line 1411 "asmparse.y"
{ context.StartBytes(); }
        break;
      case 669: // psetHead -> _PERMISSIONSET secAction BYTEARRAY_ '(' 
#line 1413 "asmparse.y"
{ context.StartBytes(); }
        break;
      case 682: // secAction -> DEMAND_ 
#line 1435 "asmparse.y"
{yyval.Str="SecurityAction::Demand";}
        break;
      case 683: // secAction -> ASSERT_ 
#line 1436 "asmparse.y"
{yyval.Str="SecurityAction::Assert";}
        break;
      case 684: // secAction -> DENY_ 
#line 1437 "asmparse.y"
{yyval.Str="SecurityAction::Deny";}
        break;
      case 685: // secAction -> PERMITONLY_ 
#line 1438 "asmparse.y"
{yyval.Str="SecurityAction::PermitOnly";}
        break;
      case 686: // secAction -> LINKCHECK_ 
#line 1439 "asmparse.y"
{yyval.Str="SecurityAction::LinkDemand";}
        break;
      case 687: // secAction -> INHERITCHECK_ 
#line 1440 "asmparse.y"
{yyval.Str="SecurityAction::InheritanceDemand";}
        break;
      case 688: // secAction -> REQMIN_ 
#line 1441 "asmparse.y"
{yyval.Str="SecurityAction::RequestMinimum";}
        break;
      case 689: // secAction -> REQOPT_ 
#line 1442 "asmparse.y"
{yyval.Str="SecurityAction::RequestOptional";}
        break;
      case 690: // secAction -> REQREFUSE_ 
#line 1443 "asmparse.y"
{yyval.Str="SecurityAction::RequestRefuse";}
        break;
      case 709: // fileDecl -> _FILE fileAttr dottedName fileEntry hashHead bytes ')' fileEntry 
#line 1470 "asmparse.y"
{context.EndBytes();}
        break;
      case 715: // hashHead -> _HASH '=' '(' 
#line 1482 "asmparse.y"
{context.StartBytes();}
        break;
      case 729: // assemblyDecl -> publicKeyHead bytes ')' 
#line 1504 "asmparse.y"
{context.EndBytes();}
        break;
      case 731: // assemblyDecl -> localeHead bytes ')' 
#line 1506 "asmparse.y"
{context.EndBytes();}
        break;
      case 735: // publicKeyHead -> _PUBLICKEY '=' '(' 
#line 1514 "asmparse.y"
{context.StartBytes();}
        break;
      case 736: // publicKeyTokenHead -> _PUBLICKEYTOKEN '=' '(' 
#line 1517 "asmparse.y"
{context.StartBytes();}
        break;
      case 737: // localeHead -> _LOCALE '=' '(' 
#line 1520 "asmparse.y"
{context.StartBytes();}
        break;
      case 738: // assemblyRefHead -> _ASSEMBLY EXTERN_ asmAttr dottedName 
#line 1523 "asmparse.y"
{AssemblyRef.Temp.Name=value_stack.array[value_stack.top-1].Str;}
        break;
      case 739: // assemblyRefHead -> _ASSEMBLY EXTERN_ asmAttr dottedName AS_ dottedName 
#line 1524 "asmparse.y"
{AssemblyRef.Temp.Name=value_stack.array[value_stack.top-1].Str;}
        break;
      case 742: // assemblyRefDecl -> _VER intOrWildcard ':' intOrWildcard ':' intOrWildcard ':' intOrWildcard 
#line 1531 "asmparse.y"
{
                        																																								AssemblyRef.Temp.Ver=value_stack.array[value_stack.top-7].Str+"."+value_stack.array[value_stack.top-5].Str+"."+value_stack.array[value_stack.top-3].Str+"."+value_stack.array[value_stack.top-1].Str;
                        																																							}
        break;
      case 743: // assemblyRefDecl -> publicKeyTokenHead bytes ')' 
#line 1534 "asmparse.y"
{
                        																						AssemblyRef.Temp.PublicKeyToken=value_stack.array[value_stack.top-2].Str;
                        																						context.EndBytes();
                        																					}
        break;
      case 744: // assemblyRefDecl -> publicKeyHead bytes ')' 
#line 1538 "asmparse.y"
{context.EndBytes();}
        break;
      case 746: // assemblyRefDecl -> localeHead bytes ')' 
#line 1540 "asmparse.y"
{context.EndBytes();}
        break;
      case 748: // assemblyRefDecl -> hashHead bytes ')' 
#line 1542 "asmparse.y"
{context.EndBytes();}
        break;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }

#line 1593 "asmparse.y"

static void Main(string[] args)
{
  Parser parser = new Parser();
  if (args.Length <= 0)
  {
  	System.Console.Out.WriteLine("Usage: asmparse ilfile");
  	return;
  }
  
  parser.context = Context.Ref;
  parser.scanner = new Scanner(args[0],Context.Ref);
  //parser.Trace=true;
  
  parser.Parse();
  string dir=Path.GetDirectoryName(System.Windows.Forms.Application.ExecutablePath);
  dir=Path.Combine(dir,"il2cpp");
  Context.Ref.Generate(dir);
}
	
	
}
}
